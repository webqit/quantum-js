{
  "version": 3,
  "sources": ["../src/index.js", "../node_modules/@webqit/observer/src/main.js", "../node_modules/@webqit/util/js/isObject.js", "../node_modules/@webqit/util/js/getType.js", "../node_modules/@webqit/util/js/isArray.js", "../node_modules/@webqit/util/js/isTypeFunction.js", "../node_modules/@webqit/util/js/isNull.js", "../node_modules/@webqit/util/js/isUndefined.js", "../node_modules/@webqit/util/js/isTypeObject.js", "../node_modules/@webqit/util/js/isEmpty.js", "../node_modules/@webqit/util/js/isFunction.js", "../node_modules/@webqit/util/js/isString.js", "../node_modules/@webqit/util/js/isTypeArray.js", "../node_modules/@webqit/util/js/wq.js", "../node_modules/@webqit/util/arr/from.js", "../node_modules/@webqit/observer/src/util.js", "../node_modules/@webqit/observer/src/core/Registration.js", "../node_modules/@webqit/observer/src/core/ListenerRegistration.js", "../node_modules/@webqit/observer/src/core/Registry.js", "../node_modules/@webqit/observer/src/core/Descriptor.js", "../node_modules/@webqit/observer/src/core/ListenerRegistry.js", "../node_modules/@webqit/observer/src/core/TrapsRegistration.js", "../node_modules/@webqit/observer/src/core/TrapsRegistry.js", "../node_modules/@webqit/observer/src/actors.js", "../node_modules/@webqit/observer/src/index.js", "../src/util.js", "../node_modules/acorn/dist/acorn.mjs", "../src/compiler/Parser.js", "../node_modules/astring/dist/astring.mjs", "../src/compiler/$qIdentifier.js", "../src/compiler/Node.js", "../src/compiler/$qDownstream.js", "../src/compiler/Scope.js", "../src/compiler/Compiler.js", "../src/compiler/index.js", "../src/params.js", "../src/runtime/hot-module-registry.js", "../src/runtime/EventTarget.js", "../src/runtime/Signal.js", "../src/runtime/Scope.js", "../src/runtime/Autorun.js", "../src/runtime/AutoIterator.js", "../src/runtime/AutoAsyncIterator.js", "../src/runtime/State.js", "../src/runtime/Runtime.js", "../src/runtime/index.js", "../src/AbstractQuantumScript.js", "../src/api.global.js"],
  "sourcesContent": ["\n/**\n * @imports\n */\nimport Observer from '@webqit/observer';\nimport { _$functionArgs } from './util.js';\nimport { parse, compile } from './compiler/index.js';\nimport { $eval } from './runtime/index.js';\nimport AbstractQuantumScript from './AbstractQuantumScript.js';\nimport State from './runtime/State.js';\n\n/** -------------- APIs */\n\nexport { Observer, State }\n\nexport function QuantumFunction( ...args ) {\n    const { source, params } = _$functionArgs( args );\n    return $eval( 'function', parseCompileCallback, source, params );\n}\n\nexport function AsyncQuantumFunction( ...args ) {\n    const { source, params } = _$functionArgs( args );\n    return $eval( 'async-function', parseCompileCallback, source, params );\n}\nexport const QuantumAsyncFunction = AsyncQuantumFunction; // For backwards compat\n\nexport class QuantumScript extends AbstractQuantumScript {\n    static sourceType = 'script';\n    static parseCompileCallback = parseCompileCallback;\n}\n\nexport class AsyncQuantumScript extends AbstractQuantumScript {\n    static sourceType = 'async-script';\n    static parseCompileCallback = parseCompileCallback;\n}\n\nexport const QuantumAsyncScript = AsyncQuantumScript; // For backwards compat\n\nexport class QuantumModule extends AbstractQuantumScript {\n    static sourceType = 'module';\n    static parseCompileCallback = parseCompileCallback;\n}\n\n/** -------------- parse-compile */\n\nfunction parseCompileCallback( source, params ) {\n    const ast = parse( source, params.parserParams );\n    return compile( ast, params.compilerParams );\n}", "import { _isObject, _isTypeObject, _isFunction, _getType } from '@webqit/util/js/index.js';\nimport { _from as _arrFrom } from '@webqit/util/arr/index.js';\nimport { _wq, _await, env } from './util.js';\nimport ListenerRegistry from './core/ListenerRegistry.js';\nimport TrapsRegistry from './core/TrapsRegistry.js';\nimport Descriptor from './core/Descriptor.js';\nimport { unproxy } from './actors.js';\n\n/* ---------------SPECIAL APIs--------------- */\n\n/**\n * Creates a Path array instance from arguments.\n * \n * @param Array\t            ...segments\n *\n * @return Path\n */\nclass Path extends Array {}\nexport function path( ...segments ) {\n    return new Path( ...segments );\n}\n\n/**\n * Creates a \"Subtree\" directive.\n * \n * @return Subtree\n */\nclass Subtree extends Array {}\nexport function subtree() {\n    return new Subtree;\n}\n\n/**\n * Creates an \"Infinity\" directive.\n * \n * @return Infinity\n */\nexport function any() {\n    return Infinity;\n}\n\n/**\n * Reduces a path array against handler.\n * \n * @param Array|Object\t    target\n * @param Array\t            path\n * @param Function\t        receiver\n * @param Function\t        final\n * @param Object\t        params\n * \n * @example reduce( object, [ segement1, segement2 ], observe, ( value, flags ) => {}, params );\n *\n * @return Any\n */\nexport function reduce( target, path, receiver, final = x => x, params = {} ) {\n    const _isSubtree = path instanceof Subtree;\n    if ( !_isSubtree && !path?.length ) return;\n    return ( function eat( target, path, $params, $isSubtree ) {\n        const isSubtree = $isSubtree || path[ $params.level ] instanceof Subtree;\n        const segment = isSubtree ? Infinity : path[ $params.level ];\n        const isLastSegment = isSubtree ? false : $params.level === path.length - 1;\n        if ( target instanceof Descriptor && target.operation !== 'get' ) {\n            // Always probe event-generated trees\n            $params = { ...$params, probe: 'always' };\n        } else if ( $params.probe !== 'always' ) {\n            // Probe until (before) last segment\n            $params = { ...$params, probe: !isLastSegment };\n        }\n        // ---------------\n        return receiver( target, segment, ( result, ...args ) => {\n            // -----------\n            const addTrail = ( desc ) => {\n                if ( !( desc instanceof Descriptor ) ) return;\n                desc.path = 'key' in desc ? [ desc.key ] : [];\n                if ( target instanceof Descriptor ) {\n                    desc.path = 'key' in desc ? target.path.concat( desc.key ) : target.path.slice( 0 );\n                    Object.defineProperty( desc, 'context', { get: () => target, configurable: true } );\n                }\n            };\n            const flags = args[ 0 ] || {};\n            const advance = ( result ) => {\n                if ( result instanceof Descriptor && 'argumentsList' in result ) {\n                    return;\n                }\n                const $value = resolveObj( result/* a Descriptor who's value could be proxied */, false );\n                return _await( $value/* could be a promise */, $value => {\n                    if ( result instanceof Descriptor ) {\n                        result.value = $value; // Update to (fulfilled), unproxied, value\n                    } else {\n                        result = $value;\n                    }\n                    return eat( result, path, { ...$params, ...flags, keyInParent: result.key, level: $params.level + 1, }, isSubtree );\n                } );\n            };\n            // -----------\n            if ( isPropsList( segment ) && Array.isArray( result ) ) {\n                result.forEach( addTrail );\n                if ( isLastSegment ) {\n                    return final( result, ...args );\n                }\n                if ( isSubtree && result[ 0 ] instanceof Descriptor && ( result[ 0 ].operation !== 'get' || params.asGet ) ) {\n                    final( result, ...args );\n                }\n                for ( const entry of result ) {\n                    advance( entry );\n                }\n                return;\n            }\n            // -----------\n            addTrail( result );\n            if ( isLastSegment ) {\n                return final( result, ...args );\n            }\n            return advance( result );\n            // -----------\n        }, $params );\n    } )( target, path.slice( 0 ), { ...params, level: 0 }, _isSubtree );\n}\n\n/**\n * Adds an observer to a target's registry.\n *\n * @param Array|Object\t    target\n * @param String|Object\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return AbortController\n */\nexport function observe( target, prop, receiver, params = {} ) {\n    // ---------------\n    const originalTarget = resolveObj( target, !params.level );\n\tif ( _isFunction( arguments[ 1 ] ) ) {\n        [ , receiver, params = {} ] = arguments;\n        prop = Infinity;\n\t}\n\tif ( !_isFunction( receiver ) ) throw new Error( `Handler must be a function; \"${ _getType( receiver ) }\" given!` );\n    if ( prop instanceof Path || prop instanceof Subtree ) return reduce( originalTarget, prop, observe, receiver, params );\n    // ---------------\n    params = { ...params, descripted: true };\n    delete params.live;\n    if ( !_isTypeObject( originalTarget ) ) return params.probe && get( originalTarget, prop, receiver, params ) || undefined;\n    // ---------------\n    const emit = bind( originalTarget, prop, receiver, params );\n    if ( params.probe ) {\n        return get( originalTarget, prop, emit, params );\n    }\n    return emit();\n}\n\n/**\n * Adds an interceptor object to a target's registry.\n *\n * @param Array|Object\t    target\n * @param Object\t        traps\n * @param Object\t\t    params\n *\n * @return AbortRegistry\n */\nexport function intercept( target, traps, params = {} ) {\n    // ---------------\n    const originalTarget = resolveObj( target );\n    if ( !_isObject( traps ) ) {\n        [ /*target*/, /*operation*/, /*handler*/, params = {} ] = arguments;\n        traps = { [ arguments[ 1 ] ]: arguments[ 2 ] };\n    }\n    // ---------------\n    return TrapsRegistry.getInstance( originalTarget, true, params.namespace ).addRegistration( { traps, params } );\n}\n\n/* ---------------QUERY APIs--------------- */\n\n/**\n * Performs a \"getOwnPropertyDescriptor\" operation.\n *\n * @param Array|Object\t    target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function getOwnPropertyDescriptor( target, prop, receiver = x => x, params = {} ) {\n    return exec( target, 'getOwnPropertyDescriptor', { key: prop }, receiver, params );\n}\n\n/**\n * Performs a \"getOwnPropertyDescriptors\" operation.\n * @note this isn't part of the standard Reflect API.\n *\n * @param Array|Object\t    target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function getOwnPropertyDescriptors( target, prop, receiver = x => x, params = {} ) {\n    return exec( target, 'getOwnPropertyDescriptors', { key: prop }, receiver, params );\n}\n\n/**\n * Performs a \"getPrototypeOf\" operation.\n *\n * @param Array|Object\t    target\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function getPrototypeOf( target, receiver = x => x, params = {} ) {\n    return exec( target, 'getPrototypeOf', {}, receiver, params );\n}\n\n/**\n * Performs a \"isExtensible\" operation.\n *\n * @param Array|Object\t    target\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function isExtensible( target, receiver = x => x, params = {} ) {\n    return exec( target, 'isExtensible', {}, receiver, params );\n}\n\n/**\n * Performs a \"ownKeys\" operation.\n *\n * @param Array|Object\t    target\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function ownKeys( target, receiver = x => x, params = {} ) {\n    return exec( target, 'ownKeys', {}, receiver, params );\n}\n\n/**\n * Performs an operation of the given \"type\".\n *\n * @param Array|Object\t    target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function has( target, prop, receiver = x => x, params = {} ) {\n    return exec( target, 'has', { key: prop }, receiver, params );\n}\n\n/**\n * Performs a get operation.\n *\n * @param Array|Object\t    target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t        params\n *\n * @return Any\n */\nexport function get( target, prop, receiver = x => x, params = {} ) {\n    // ---------------\n    let isLive;\n    const originalTarget = resolveObj( target, !params.level );\n    if ( _isObject( receiver ) ) {\n        [ params, receiver ] = [ receiver, x => x ];\n    } else if ( params.live ) { isLive = true; }\n    if ( prop instanceof Path || prop instanceof Subtree ) return reduce( originalTarget, prop, get, receiver, { ...params, asGet: true } );\n    // ---------------\n    return resolveProps( originalTarget, prop, props => {\n        const related = [ ...props ];\n        return ( function next( results, _props, _done ) {\n            if ( !_props.length ) return _done( results );\n            const prop = _props.shift();\n            if ( ![ 'string', 'number', 'symbol' ].includes( typeof prop ) ) {\n                throw new Error( `Property name/key ${ prop } invalid.` );\n            }\n            // ---------\n            function defaultGet( descriptor, value = undefined ) {\n                const _next = value => ( descriptor.value = value, next( [ ...results, params.live || params.descripted ? descriptor : value ]/** not using concat() as value may be an array */, _props, _done ) );\n                if ( arguments.length > 1 ) return _next( value );\n                if ( !_isTypeObject( originalTarget ) ) return _next( originalTarget?.[ descriptor.key ] );\n                const accessorizedProps = _wq( originalTarget, 'accessorizedProps', false );\n                const accessorization = accessorizedProps && accessorizedProps.get( descriptor.key );\n                if ( accessorization && accessorization.intact() ) {\n                    return _next( accessorization.getValue( params.withPropertyDescriptors ) );\n                }\n                if ( params.withPropertyDescriptors ) {\n                    const desc = Object.getOwnPropertyDescriptor( originalTarget, descriptor.key );\n                    return _next( desc );\n                }\n                return _next( Reflect.get( originalTarget, descriptor.key/*, ...( params.receiver ? [ params.receiver ] : [] )*//*Throws Illegal invocation error ffor DOM nodes, e.g.*/ ) );\n            }\n            // ---------\n            const descriptor = new Descriptor( originalTarget, {\n                type: 'get',\n                key: prop,\n                value: undefined,\n                operation: 'get',\n                related,\n            } );\n            if ( !_isTypeObject( originalTarget ) ) return defaultGet( descriptor );\n            const trapsRegistry = TrapsRegistry.getInstance( originalTarget, false, params.namespace );\n            if ( trapsRegistry ) {\n                return trapsRegistry.emit( descriptor, defaultGet );\n            }\n            return defaultGet( descriptor );\n        } )( [], props.slice( 0 ), results => {\n            const result_s = isPropsList( prop/*original*/ ) ? results : results[ 0 ];\n            if ( isLive && _isTypeObject( originalTarget ) ) {\n                const emit = bind( originalTarget, prop, receiver, params, target.key );\n                return emit( result_s );\n            }\n            return receiver( result_s );\n        } );\n    }, params );\n}\n\n/* ---------------MUTATION APIs--------------- */\n\n/**\n * Performs a batch operation.\n * \n * @param Object\t        target\n * @param Function\t        callback\n * @param Object\t        params\n *\n * @return Void\n */\nexport function batch( target, callback, params = {} ) {\n    const originalTarget = resolveObj( target );\n    return ListenerRegistry.getInstance( originalTarget, true, params.namespace ).batch( callback, params );\n}\n\n/**\n * Performs a mirror operation.\n * \n * @param Object\t        source\n * @param Object\t        target\n * @param Object\t        params\n *\n * @return Void\n */\nexport function map( source, target, params = {} ) {\n    target = resolveObj( target );\n    source = resolveObj( source );\n    const only = ( params.only || [] ).slice( 0 ), except = ( params.except || [] ).slice( 0 );\n    const sourceKeys = Object.keys( params.spread ? [ ...source ] : source ).map( k => !isNaN( k ) ? parseInt( k ) : k );\n    const filteredKeys = only.length ? only.filter( k => sourceKeys.includes( k ) ) : sourceKeys.filter( k => !except.includes( k ) );\n    const resolveKey = k => { \n        if ( !Array.isArray( target ) || isNaN( k ) ) return k;\n        return k - except.filter( i => i < k ).length;\n    };\n    const doSet = key => {\n        const descriptor = getOwnPropertyDescriptor( source, key, params );\n        if ( ( 'value' in descriptor ) && descriptor.writable && descriptor.enumerable && descriptor.configurable ) {\n            set( target, resolveKey( key ), descriptor.value, params );\n        } else if ( descriptor.enumerable || params.onlyEnumerable === false ) { defineProperty( target, key, { ...descriptor, configurable: true }, params ); }\n    };\n    batch( target, () => {\n        filteredKeys.forEach( doSet );\n    } );\n    return observe( source, mutations => {\n        //batch( target, () => {\n            mutations.filter( m => only.length ? only.includes( m.key ) : !except.includes( m.key ) ).forEach( m => {\n                if ( m.type === 'delete' ) return deleteProperty( target, resolveKey( m.key ), params );\n                if ( m.type === 'def' ) {\n                    if ( m.value.enumerable || params.onlyEnumerable === false ) {\n                        defineProperty( target, resolveKey( m.key ), { ...m.value, configurable: true }, params );\n                    }\n                    return;\n                }\n                doSet( m.key );\n            } );\n        //}, params );\n    }, { ...params, withPropertyDescriptors: true } );\n}\n\n/**\n * Performs a set operation.\n * \n * @param Object\t        target\n * @param String|Number\t    prop\n * @param Any\t            value\n * @param Function\t        receiver\n * @param Object\t        params\n * @param Bool\t            def\n *\n * @return Any\n */\nexport function set( target, prop, value, receiver = x => x, params = {}, def = false ) {\n    // ---------------\n    const originalTarget = resolveObj( target );\n    let entries = [ [ prop, value ] ];\n    if ( _isObject( prop ) ) {\n        [ /*target*/, /*hash*/, receiver = x => x, params = {}, def = false ] = arguments;\n        entries = Object.entries( prop );\n    }\n    if ( _isObject( receiver ) ) { [ def, params, receiver ] = [ typeof params === 'boolean' ? params : def, receiver, x => x ]; }\n    // ---------------\n    const related = entries.map( ( [ prop ] ) => prop );\n    return ( function next( descriptors, entries, _done ) {\n        if ( !entries.length ) return _done( descriptors );\n        const [ prop, value ] = entries.shift();\n        // ---------\n        function defaultSet( descriptor, status = undefined ) {\n            const _next = status => ( descriptor.status = status, next( descriptors.concat( descriptor ), entries, _done ) );\n            if ( arguments.length > 1 ) return _next( descriptor, status );\n            const accessorizedProps = _wq( originalTarget, 'accessorizedProps', false );\n            const accessorization = accessorizedProps && accessorizedProps.get( descriptor.key );\n            if ( descriptor.type === 'def' ) {\n                if ( accessorization && !accessorization.restore() ) _next( false );\n                Object.defineProperty( originalTarget, descriptor.key, descriptor.value );\n                return _next( true );\n            }\n            if ( accessorization && accessorization.intact() ) {\n                return _next( accessorization.setValue( descriptor.value ) );\n            }\n            return _next( Reflect.set( originalTarget, descriptor.key, descriptor.value ) );\n        }\n        // ---------\n        function exec( isUpdate, oldValue ) {\n            if ( params.diff && value === oldValue ) return next( descriptors, entries, _done );\n            const descriptor = new Descriptor( originalTarget, {\n                type: def ? 'def' : 'set',\n                key: prop,\n                value,\n                isUpdate,\n                oldValue,\n                related: [ ...related ],\n                operation: def ? 'defineProperty' : 'set',\n                detail: params.detail,\n            } );\n            const trapsRegistry = TrapsRegistry.getInstance( originalTarget, false, params.namespace );\n            return trapsRegistry \n                ? trapsRegistry.emit( descriptor, defaultSet ) \n                : defaultSet( descriptor );\n        }\n        // ---------\n        return has( originalTarget, prop, exists => {\n            if ( !exists ) return exec( exists );\n            if ( prop === 'length' && Array.isArray( originalTarget ) && _wq( originalTarget ).has( '$length' ) ) {\n                return exec( true, _wq( originalTarget ).get( '$length' ) );\n            }\n            const $params = { ...params, withPropertyDescriptors: def };\n            return get( originalTarget, prop, oldValue => exec( exists, oldValue ), $params );\n        }, params );\n        // ---------\n    } )( [], entries.slice( 0 ), descriptors => {\n        const listenerRegistry = ListenerRegistry.getInstance( originalTarget, false, params.namespace );\n        if ( listenerRegistry ) listenerRegistry.emit( descriptors, { eventsArePropertyDescriptors: !!def } );\n        return receiver(\n            isPropsList( prop/*original*/ ) ? descriptors.map( opr => opr.status ) : descriptors[ 0 ]?.status\n        );\n    } );\n}\n\n/**\n * Performs a defineProperty operation.\n * \n * @param Object\t        target\n * @param String|Number\t    prop\n * @param Object\t        descriptor\n * @param Function\t        receiver\n * @param Object\t        params\n *\n * @return Any\n */\nexport function defineProperty( target, prop, descriptor, receiver = x => x, params = {} ) {\n    return set( target, prop, descriptor, receiver, params, true/*def*/ );\n}\n\n/**\n * Performs a defineProperties operation.\n * @note this isn't part of the standard Reflect API.\n * \n * @param Object\t        target\n * @param Object\t        descriptors\n * @param Function\t        receiver\n * @param Object\t        params\n *\n * @return Any\n */\nexport function defineProperties( target, descriptors, receiver = x => x, params = {} ) {\n    return set( target, descriptors, receiver, params, true/*def*/ );\n}\n\n/**\n * Performs a delete operation.\n * \n * @param Object\t        target\n * @param String|Number\t    prop\n * @param Function\t        receiver\n * @param Object\t        params\n *\n * @return Any\n */\nexport function deleteProperty( target, prop, receiver = x => x, params = {} ) {\n    // ---------------\n    const originalTarget = resolveObj( target );\n    if ( _isObject( receiver ) ) { [ params, receiver ] = [ receiver, x => x ]; }\n    // ---------------\n    const props = _arrFrom( prop, false ), related = [ ...props ];\n    return ( function next( descriptors, props, _done ) {\n        if ( !props.length ) return _done( descriptors );\n        const prop = props.shift();\n        // ---------\n        function defaultDel( descriptor, status = undefined ) {\n            const _next = status => ( descriptor.status = status, next( descriptors.concat( descriptor ), props, _done ) );\n            if ( arguments.length > 1 ) return _next( descriptor, status );\n            const accessorizedProps = _wq( originalTarget, 'accessorizedProps', false );\n            const accessorization = accessorizedProps && accessorizedProps.get( descriptor.key );\n            if ( accessorization && !accessorization.restore() ) _next( false );\n            return _next( Reflect.deleteProperty( originalTarget, descriptor.key ) );\n        }\n        // ---------\n        function exec( oldValue ) {\n            const descriptor = new Descriptor( originalTarget, {\n                type: 'delete',\n                key: prop,\n                oldValue,\n                related: [ ...related ],\n                operation: 'deleteProperty',\n                detail: params.detail,\n            } );\n            const trapsRegistry = TrapsRegistry.getInstance( originalTarget, false, params.namespace );\n            return trapsRegistry \n                ? trapsRegistry.emit( descriptor, defaultDel ) \n                : defaultDel( descriptor );\n        }\n        // ---------\n        return get( originalTarget, prop, exec, params );\n        // ---------\n    } )( [], props.slice( 0 ), descriptors => {\n        const listenerRegistry = ListenerRegistry.getInstance( originalTarget, false, params.namespace );\n        if ( listenerRegistry ) listenerRegistry.emit( descriptors );\n        return receiver(\n            isPropsList( prop/*original*/ ) ? descriptors.map( opr => opr.status ) : descriptors[ 0 ].status\n        );\n    } );\n}\n\n/**\n * @alias deleteProperty()\n */\nexport function deleteProperties( target, props, receiver = x => x, params = {} ) {\n    return deleteProperty( ...arguments );\n}\n\n/* ---------------EFFECT APIs--------------- */\n\n/**\n * Performs a \"construct\" operation.\n *\n * @param Array|Object\t    target\n * @param Array\t\t\t    argumentsList\n * @param Object\t\t    newTarget\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function construct( target, argumentsList, newTarget = null, receiver = x => x, params = {} ) {\n    return exec( target, 'construct', arguments.length > 2 ? { argumentsList, newTarget } : { argumentsList }, receiver, params );\n}\n\n/**\n * Performs an \"apply\" operation.\n *\n * @param Array|Object\t    target\n * @param Any\t            thisArgument\n * @param Array\t            argumentsList\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function apply( target, thisArgument, argumentsList, receiver = x => x, params = {} ) {\n    const originalThis = unproxy( thisArgument );\n    let returnValue;\n    if ( Array.isArray( thisArgument ) ) {\n        if ( params.arrayMethodName ) {\n            const descriptor = new Descriptor( originalThis, {\n                operation: params.arrayMethodName,\n                argumentsList\n            } );\n            const listenerRegistry = ListenerRegistry.getInstance( originalThis, false, params.namespace );\n            listenerRegistry?.emit( [ descriptor ], { eventIsArrayMethodDescriptor: true } );\n        }\n        _wq( originalThis ).set( '$length', originalThis.length );\n        returnValue = batch(\n            originalThis,\n            () => exec( target, 'apply', { thisArgument/*proxy wrappers allowed; in fact is why it works*/, argumentsList }, receiver, params ),\n            params\n        );\n        _wq( originalThis ).delete( '$length' );\n    } else {\n        returnValue = exec( target, 'apply', { thisArgument: originalThis, argumentsList }, receiver, params );\n    }\n    return returnValue;\n}\n\n/**\n * Performs a \"setPrototypeOf\" operation.\n *\n * @param Array|Object\t    target\n * @param Anyr\t            proto\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function setPrototypeOf( target, proto, receiver = x => x, params = {} ) {\n    return exec( target, 'setPrototypeOf', { proto }, receiver, params );\n}\n\n/**\n * Performs a \"preventExtension\" operation.\n *\n * @param Array|Object\t    target\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nexport function preventExtensions( target, receiver = x => x, params = {} ) {\n    return exec( target, 'preventExtensions', {}, receiver, params );\n}\n\n/* ---------------HELPER APIs--------------- */\n\n/**\n * Adds an observer to a target's registry.\n *\n * @param Array|Object\t    target\n * @param String|Object\t    prop\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Function: AbortController\n */\nfunction bind( target, prop, receiver, params = {} ) {\n    const controller = new AbortController;\n    env.setMaxListeners?.( 0, controller.signal );\n    if ( params.signal ) { params.signal.addEventListener( 'abort', () => controller.abort() ); }\n    const $params = { ...params, signal: controller.signal };\n    const listenerRegistry = ListenerRegistry.getInstance( target, true, $params.namespace );\n    const childRegistrations = new Map;\n    return function emit( descriptor_s = [], prevRegistration = null ) {\n        let flags, registrationNext, isExisting;\n        if ( isPropsList( prop ) ) {\n            if ( prevRegistration ) {\n                isExisting = true;\n                registrationNext = prevRegistration;\n                for ( const descriptor of descriptor_s ) {\n                    childRegistrations.get( descriptor.key )?.remove();\n                    childRegistrations.delete( descriptor.key );\n                }\n            } else {\n                registrationNext = listenerRegistry.addRegistration( prop, emit, $params );\n            }\n            flags = { signal: registrationNext.signal, childRegistrations };\n        } else {\n            prevRegistration?.remove();\n            registrationNext = listenerRegistry.addRegistration( prop, emit, $params );\n            flags = { signal: registrationNext.signal };\n        }\n        // ------------------\n        if ( $params.childRegistrations && $params.keyInParent ) {\n            $params.childRegistrations.set( $params.keyInParent, registrationNext );\n        }\n        // ------------------\n        if ( arguments.length ) {\n            const handlerReturnValue = receiver( descriptor_s, flags );\n            if ( arguments.length > 1 ) return handlerReturnValue;\n        }\n        return controller;\n    };\n}\n\n/**\n * Performs an operation of the given \"type\".\n *\n * @param Array|Object\t    target\n * @param String\t\t    operation\n * @param Object\t\t    payload\n * @param Function\t        receiver\n * @param Object\t\t    params\n *\n * @return Any\n */\nfunction exec( target, operation, payload = {}, receiver = x => x, params = {} ) {\n    // ---------\n    target = resolveObj( target );\n    if ( _isObject( receiver ) ) { [ params, receiver ] = [ receiver, x => x ]; }    \n    // ---------\n    function defaultExec( descriptor, result ) {\n        if ( arguments.length > 1 ) return receiver( result );\n        return receiver( ( Reflect[ operation ] || Object[ operation ] )( target, ...Object.values( payload ) ) );\n    }\n    // ---------\n    const descriptor = new Descriptor( target, { operation, ...payload } );\n    const trapsRegistry = TrapsRegistry.getInstance( target, false, params.namespace );\n    if ( trapsRegistry ) {\n        return trapsRegistry.emit( descriptor, defaultExec );\n    }\n    return defaultExec( descriptor );\n}\n\n// Asks if prop is a multi-result field\nfunction isPropsList( prop ) {\n    return prop === Infinity || Array.isArray( prop );\n}\n\n// Resolves obj down to it's self\nfunction resolveObj( obj, assert = true, probePropertyDescriptors = true ) {\n\tif ( ( !obj || !_isTypeObject( obj ) ) && assert ) throw new Error( `Object must be of type object or array! \"${ _getType( obj ) }\" given.` );\n    if ( obj instanceof Descriptor ) {\n        if ( obj.type === 'def' && probePropertyDescriptors ) {\n            obj = typeof obj.value.get === 'function' ? obj.value.get() : obj.value.value;\n        } else {\n            obj = obj.value;\n        }\n    }\n\treturn obj && unproxy( obj );\n}\n\n// Resolves prop down to actual keys\nfunction resolveProps( obj, prop, receiver, params = {} ) {\n    if ( prop === Infinity ) {\n        if ( params.level && !_isTypeObject( obj ) ) return receiver( [] );\n        return receiver( Object.keys( obj ) );\n    }\n    return receiver( _arrFrom( prop, false ) );\n}\n", "\n/**\n * Tells if val is pure object.\n *\n * @param object\t \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn !Array.isArray(val) && typeof val === 'object' && val;\n};\n", "\n/**\n * Returns the val's type.\n *\n * @param string \tval\n *\n * @return string\n */\nexport default function(val) {\n\treturn typeof val;\n};\n", "\n/**\n * Tells if val is of type \"array\".\n *\n * @param object\t \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn Array.isArray(val);\n};\n", "\n/**\n * Tells if val is of type \"function\".\n * This holds true for both regular functions and classes.\n *\n * @param object\t \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn typeof val === 'function';\n};\n", "\n/**\n * Tells if val is undefined or is null.\n *\n * @param string \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn val === null || val === '';\n};\n", "\n/**\n * Tells if val is undefined or is of type \"undefined\".\n *\n * @param string \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn arguments.length && (val === undefined || typeof val === 'undefined');\n};\n", "\n/**\n * @imports\n */\nimport _isTypeFunction from './isTypeFunction.js';\n\n/**\n * Tells if val is of type \"object\".\n * This holds true for anything object, including built-ins.\n *\n * @param object\t \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn Array.isArray(val) || (typeof val === 'object' && val) || _isTypeFunction(val);\n};\n", "\n/**\n * @imports\n */\nimport _isNull from './isNull.js';\nimport _isUndefined from './isUndefined.js';\nimport _isTypeObject from './isTypeObject.js';\n\n/**\n * Tells if val is empty in its own type.\n * This holds true for NULLs, UNDEFINED, FALSE, 0,\n * objects without keys, empty arrays.\n *\n * @param string \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn _isNull(val) || _isUndefined(val) || val === false || val === 0 \n\t\t|| (_isTypeObject(val) && !Object.keys(val).length);\n};\n", "\n/**\n * @imports\n */\nimport _isTypeFunction from './isTypeFunction.js';\n\n/**\n * Tells if val is of type \"function\".\n *\n * @param object \t\tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn _isTypeFunction(val) || (val && {}.toString.call(val) === '[object function]');\n};\n", "\n/**\n * Tells if val is of type \"string\".\n *\n * @param string \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn val instanceof String || (typeof val === 'string' && val !== null);\n};\n", "\n/**\n * @imports\n */\nimport _isString from './isString.js';\nimport _isUndefined from './isUndefined.js';\n\n/**\n * Tells if val is \"array-like\".\n * This holds true for anything that has a length property.\n *\n * @param object\t \tval\n *\n * @return bool\n */\nexport default function(val) {\n\treturn !_isString(val) && !_isUndefined(val.length);\n};\n", "export default function wq(obj, ...namespaces) {\n    if (!obj || !['object', 'function'].includes(typeof obj)) {\n        throw new Error(`Argument #1 must be of type object`);\n    }\n    let wq = obj[Symbol.for('wq')];\n    if (!wq) {\n        wq = new WQInternals;\n        Object.defineProperty(obj, Symbol.for('wq'), {\n            value: wq,\n            // Defaults, but to be explicit...\n            enumerable: false,\n            configurable: false,\n            writable: false\n        });\n    }\n    if (!namespaces.length) {\n        return wq;\n    }\n    let _ns, _wq;\n    while ((_ns = namespaces.shift())) {\n        if ((_wq = wq) && !(wq = wq.get(_ns))) {\n            wq = new WQInternals;\n            _wq.set(_ns, wq);\n        }\n    }\n    return wq;\n}\n\nclass WQInternals extends Map {}", "\n/**\n * @imports\n */\nimport _isArray from '../js/isArray.js';\nimport _isTypeArray from '../js/isTypeArray.js';\nimport _isEmpty from '../js/isEmpty.js';\nimport _isObject from '../js/isObject.js';\n\n/**\n * Casts an array-like object to an array.\n *\n * @param mixed \tval\n * @param bool\t \tcastObject\n *\n * @return array\n */\nexport default function(val, castObject = true) {\n\tif (_isArray(val)) {\n\t\treturn val;\n\t};\n\tif (!castObject && _isObject(val)) {\n\t\treturn [val];\n\t};\n\tif (val !== false && val !== 0 && _isEmpty(val)) {\n\t\treturn [];\n\t};\n\tif (_isTypeArray(val)) {\n\t\treturn Array.prototype.slice.call(val);\n\t};\n\tif (_isObject(val)) {\n\t\treturn Object.values(val);\n\t};\n\treturn [val];\n};\n", "\n/**\n * @imports\n */\nimport { _wq as __wq } from '@webqit/util/js/index.js';\n\nexport const _wq = ( target, ...args ) => __wq( target, 'observerAPI', ...args );\n\nexport const _await = ( value, callback ) => value instanceof Promise ? value.then( callback ) : callback( value );\n\nexport const env = {};\n", "\n/**\n * ---------------------------\n * The Registration class\n * ---------------------------\n */\n\nexport default class Registration {\n\t\n\t/**\n\t * Initializes the instance.\n\t *\n\t * @param Registry\t\t\tregistry\n\t * @param object\t\t\tdfn\n\t *\n\t * @return void\n\t */\n\tconstructor( registry, dfn ) {\n\t\tthis.registry = registry;\n\t\tObject.assign( this, { ...dfn, target: registry.target } );\n\t\tif ( this.params.signal ) {\n\t\t\tthis.params.signal.addEventListener( 'abort', () => this.remove() );\n\t\t}\n\t}\n\n\t/**\n\t * Sets a \"disconnected\" flag on the Registration.\n\t *\n\t * @return void\n\t */\n\tremove() {\n\t\tthis.removed = true;\n\t\treturn this.registry.removeRegistration( this );\n\t}\n}", "\n/**\n * @imports\n */\nimport { _from as _arrFrom } from '@webqit/util/arr/index.js';\nimport Registration from './Registration.js';\nimport { _await, env } from '../util.js';\n\n/**\n * ---------------------------\n * The ListenerRegistration class\n * ---------------------------\n */\n\nexport default class ListenerRegistration extends Registration {\n\t\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.emit.currentRegistration = this;\n\t\tObject.defineProperty( this, 'abortController', { value: new AbortController } );\n\t\tObject.defineProperty( this, 'signal', { value: this.abortController.signal } );\n\t\tenv.setMaxListeners?.( 0, this.signal );\n\t}\n\n\t/**\n\t * De-registers the instance.\n\t * \n\t * @return Void\n\t */\n\tremove() {\n\t\tthis.abortController.abort();\n\t\tsuper.remove();\n\t}\n\n\t/**\n\t * Calls the observer's handler function\n\t * on matching with the event's fields.\n\t *\n\t * @param Array\t\t\t \t\tevents\n\t *\n\t * @return Any\n\t */\n\tfire( events ) {\n\t\tif ( this.emit.recursionTarget && ![ 'inject', 'force-async', 'force-sync' ].includes( this.params.recursions ) ) return;\n\t\tlet matches = events, filter = this.filter;\n\t\tif ( filter !== Infinity && ( filter = _arrFrom( filter, false ) ) ) {\n\t\t\tmatches = events.filter( event => filter.includes( event.key ) );\n\t\t}\n\t\tif ( this.params.diff ) {\n\t\t\tmatches = matches.filter( event => event.type !== 'set' || event.value !== event.oldValue );\n\t\t}\n\t\tif ( !matches.length ) return;\n\t\tif ( [ 'inject', 'defer' ].includes( this.params.recursions ) ) {\n\t\t\tif ( this.emit.recursionTarget ) {\n\t\t\t\tthis.emit.recursionTarget.push( ...matches );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.emit.recursionTarget = this.params.recursions === 'inject' ? matches : [];\n\t\t}\n\t\tconst $ret = this.filter === Infinity || Array.isArray( this.filter )\n\t\t\t? this.emit( matches, this )\n\t\t\t: this.emit( matches[ 0 ], this );\n\t\t// NOTEL: on calling emit(), this registration has expired and a new one active!!!\n\t\treturn _await( $ret, ret => {\n\t\t\tconst recursions = this.emit.recursionTarget;\n\t\t\tdelete this.emit.recursionTarget;\n\t\t\tif ( this.params.recursions === 'defer' ) {\n\t\t\t\tif ( recursions?.length ) return this.emit.currentRegistration.fire( recursions );\n\t\t\t}\n\t\t\treturn ret;\n\t\t} );\n\t}\n}\n", "\n/**\n * @imports\n */\nimport { _isTypeObject, _getType } from '@webqit/util/js/index.js';\nimport { _from as _arrFrom, _intersect, _equals as _arrEquals } from '@webqit/util/arr/index.js';\nimport { _wq } from '../util.js';\n\n/**\n * ---------------------------\n * The Registry class\n * ---------------------------\n */\n\nexport default class Registry {\n\t\n\t/**\n\t * Initializes the instance.\n\t *\n\t * @param object\ttarget\n\t * \n\t * @return void\n\t */\n\tconstructor( target ) {\n\t\tthis.target = target;\n\t\tthis.entries = [];\n\t}\n\t\n\t/**\n\t * Adds an Registration instance\n\t * with optional tags.\n\t *\n\t * @param Registration\t\tregistration\n\t *\n\t * @return Registration\n\t */\n\taddRegistration( registration ) {\n\t\tthis.entries.push( registration );\n\t\treturn registration;\n\t}\n\t\n\t/**\n\t * Removes registrations by reference.\n\t *\n\t * @param Registration\t\tregistration\n\t *\n\t * @return void\n\t */\n\tremoveRegistration( registration ) {\n\t\tthis.entries = this.entries.filter( _entry => _entry !== registration );\n\t}\n\t\t\n\t/**\n\t * Returns a observer-specific object embedded on an element.\n\t *\n\t * @param string\t\ttype\n\t * @param array|object\ttarget\n\t * @param bool      \tcreateIfNotExists\n\t * @param string      \tnamespace\n\t *\n\t * @return Registry\n\t */\n\tstatic _getInstance( type, target, createIfNotExists = true, namespace = this.__namespace ) {\n\t\tif ( !_isTypeObject( target ) ) throw new Error( `Subject must be of type object; \"${ _getType( target ) }\" given!` );\n\t\tlet ImplementationClass = this;\n\t\tif ( namespace && _wq( globalThis, 'observerAPI', 'namespaces' ).has( type + '-' + namespace ) ) {\n\t\t\tImplementationClass = _wq( globalThis, 'observerAPI', 'namespaces' ).get( type + '-' + namespace );\n\t\t\ttype += '-' + namespace\n\t\t}\n\t\tif ( !_wq( target, 'registry' ).has( type ) && createIfNotExists ) {\n\t\t\t_wq( target, 'registry' ).set( type, new ImplementationClass( target ) );\n\t\t}\n\t\treturn _wq( target, 'registry' ).get( type );\n\t}\n\n\t/**\n\t * Extend a Fireable Class with a namespace.\n\t *\n\t * @param string\t\tnamespace\n\t * @param class      \tImplementationClass\n\t *\n\t * @return void|class\n\t */\n\tstatic _namespace( type, namespace, ImplementationClass = null ) {\n\t\ttype += '-' + namespace;\n\t\tif ( arguments.length === 2 ) return _wq( globalThis, 'observerAPI', 'namespaces' ).get( type );\n\t\tif ( !( ImplementationClass.prototype instanceof this ) ) {\n\t\t\tthrow new Error( `The implementation of the namespace ${ this.name }.${ namespace } must be a subclass of ${ this.name }.` );\n\t\t}\n\t\t_wq( globalThis, 'observerAPI', 'namespaces' ).set( type, ImplementationClass );\n\t\tImplementationClass.__namespace = namespace;\n\t}\n}", "\n/**\n * ---------------------------\n * The Descriptor class\n * ---------------------------\n */\n\nexport default class Descriptor {\n\t\n\t/**\n\t * Initializes the instance.\n\t *\n\t * @param array|object\ttarget\n\t * @param object\t\tdfn\n\t *\n\t * @return void\n\t */\n\tconstructor( target, dfn ) {\n\t\tthis.target = target;\n\t\tif ( !( dfn.operation ) ) throw new Error( 'Descriptor operation must be given in definition!' );\n\t\tObject.assign( this, dfn );\n\t}\n}", "\n/**\n * @imports\n */\nimport ListenerRegistration from './ListenerRegistration.js';\nimport Registry from './Registry.js';\nimport { _await } from '../util.js';\nimport Descriptor from './Descriptor.js';\n\n/**\n * ---------------------------\n * The ListenerRegistry class\n * ---------------------------\n */\n\nexport default class ListenerRegistry extends Registry {\n\n\tstatic getInstance( target, createIfNotExists = true, namespace = null ) {\n\t\treturn super._getInstance( 'listeners', ...arguments );\n\t}\n\n\tstatic namespace( namespace, ImplementationClass = null ) {\n\t\treturn super._namespace( 'listeners', ...arguments );\n\t}\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor( target ) {\n\t\tsuper( target );\n\t\tthis.batches = [];\n\t}\n\t\n\t/**\n\t * @addRegistration\n\t */\n\taddRegistration( filter, emit, params ) {\n\t\treturn super.addRegistration( new ListenerRegistration( this, { filter, emit, params } ) );\n\t}\n\t\n\t/**\n\t * Fires all observers with the given evt (change).\n\t *\n\t * @param Arrayn events\n\t *\n\t * @return Void\n\t */\n\temit( events, { eventsArePropertyDescriptors = false, eventIsArrayMethodDescriptor = false } = {} ) {\n\t\tif ( this.batches.length ) {\n\t\t\tconst arrayMethodName = this.batches[ 0 ].params.arrayMethodName;\n\t\t\tthis.batches[ 0 ].snapshots.push( {\n\t\t\t\tevents: [ ...events ],\n\t\t\t\tarrayMethodName, // Typically from array operations\n\t\t\t\teventsArePropertyDescriptors, // Typically from defineProperty() operations\n\t\t\t\teventIsArrayMethodDescriptor // Typically from array method operations\n\t\t\t} );\n\t\t\treturn\n\t\t}\n\t\tthis.$emit( this.entries, [ {\n\t\t\tevents, \n\t\t\teventsArePropertyDescriptors, // Typically from defineProperty() operations\n\t\t\teventIsArrayMethodDescriptor // Typically from array method operations\n\t\t} ] );\n\t}\n\n\t$emit( listeners, snapshots ) {\n\t\t// Analyse listener modes\n\t\tlet listenersLength = 0,\n\t\tlistenersAskingEventsWithPropertyDescriptors = 0,\n\t\tlistenersAskingArrayMethodDescriptors = 0;\n\t\tfor ( const listener of listeners ) {\n\t\t\tlistenersLength += 1;\n\t\t\tif ( listener.params.withPropertyDescriptors ) {\n\t\t\t\tlistenersAskingEventsWithPropertyDescriptors += 1;\n\t\t\t}\n\t\t\tif ( listener.params.withArrayMethodDescriptors ) {\n\t\t\t\tlistenersAskingArrayMethodDescriptors += 1;\n\t\t\t}\n\t\t}\n\t\t// Sort events\n\t\tconst events_with_PropertyDescriptors_with_ArrayMethodDescriptors = [], events_with_PropertyDescriptors_without_ArrayMethodDescriptors = [];\n\t\tconst events_without_PropertyDescriptors_with_ArrayMethodDescriptors = [], events_without_PropertyDescriptors_without_ArrayMethodDescriptors = [];\n\t\tfor ( const snapshot of snapshots ) {\n\t\t\tconst arrayMethodName = snapshot.arrayMethodName;\n\t\t\tconst eventsArePropertyDescriptors = snapshot.eventsArePropertyDescriptors;\n\t\t\tconst eventIsArrayMethodDescriptor = snapshot.eventIsArrayMethodDescriptor;\n\t\t\tfor ( const event of snapshot.events ) {\n\t\t\t\tif ( arrayMethodName ) {\n\t\t\t\t\tevent.operation = arrayMethodName;\n\t\t\t\t}\n\t\t\t\t// Some opting in to PropertyDescriptors\n\t\t\t\tif ( listenersAskingEventsWithPropertyDescriptors ) {\n\t\t\t\t\t//if ( !arrayMethodName ) { }\n\t\t\t\t\tlistenersAskingArrayMethodDescriptors && // Some opting in to ArrayMethodDescriptors\n\t\t\t\t\tevents_with_PropertyDescriptors_with_ArrayMethodDescriptors.push( event );\n\t\t\t\t\tif ( !eventIsArrayMethodDescriptor ) {\n\t\t\t\t\t\tlistenersAskingArrayMethodDescriptors !== listenersLength && // Some opting out of ArrayMethodDescriptors\n\t\t\t\t\t\tevents_with_PropertyDescriptors_without_ArrayMethodDescriptors.push( event );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Some opting out of PropertyDescriptors\n\t\t\t\tif ( listenersAskingEventsWithPropertyDescriptors !== listenersLength ) {\n\t\t\t\t\tlet $event = event;\n\t\t\t\t\tif ( eventsArePropertyDescriptors ) {\n\t\t\t\t\t\tconst { target, type, ...details } = event;\n\t\t\t\t\t\t$event = new Descriptor( target, { type: 'set', ...details } );\n\t\t\t\t\t\tObject.defineProperty( $event, 'value', 'get' in details.value ? { get: () => details.value.get() } : { value: details.value.value } )\n\t\t\t\t\t\tif ( details.oldValue ) {\n\t\t\t\t\t\t\tObject.defineProperty( $event, 'oldValue', 'get' in details.oldValue ? { get: () => details.oldValue.get() } : { value: details.oldValue.value } )\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//if ( !arrayMethodName/*Although eedless as is typically mutually exclusive to eventsArePropertyDescriptors*/ ) { }\n\t\t\t\t\tlistenersAskingArrayMethodDescriptors && // Some opting in to ArrayMethodDescriptors\n\t\t\t\t\tevents_without_PropertyDescriptors_with_ArrayMethodDescriptors.push( $event );\n\t\t\t\t\tif ( !eventIsArrayMethodDescriptor ) { // Although eedless as is typically already implied by eventsArePropertyDescriptors\n\t\t\t\t\t\tlistenersAskingArrayMethodDescriptors !== listenersLength && // Some opting out of ArrayMethodDescriptors\n\t\t\t\t\t\tevents_without_PropertyDescriptors_without_ArrayMethodDescriptors.push( $event );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// Dispatch\n\t\tfor ( const listener of listeners ) {\n\t\t\tif ( listener.params.withPropertyDescriptors ) {\n\t\t\t\tif ( listener.params.withArrayMethodDescriptors ) {\n\t\t\t\t\tevents_with_PropertyDescriptors_with_ArrayMethodDescriptors.length &&\n\t\t\t\t\tlistener.fire( events_with_PropertyDescriptors_with_ArrayMethodDescriptors );\n\t\t\t\t} else {\n\t\t\t\t\tevents_with_PropertyDescriptors_without_ArrayMethodDescriptors.length &&\n\t\t\t\t\tlistener.fire( events_with_PropertyDescriptors_without_ArrayMethodDescriptors );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( listener.params.withArrayMethodDescriptors ) {\n\t\t\t\t\tevents_without_PropertyDescriptors_with_ArrayMethodDescriptors.length &&\n\t\t\t\t\tlistener.fire( events_without_PropertyDescriptors_with_ArrayMethodDescriptors );\n\t\t\t\t} else {\n\t\t\t\t\tevents_without_PropertyDescriptors_without_ArrayMethodDescriptors.length &&\n\t\t\t\t\tlistener.fire( events_without_PropertyDescriptors_without_ArrayMethodDescriptors );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Fires all observers with the given evt (change).\n\t *\n\t * @param Arrayn events\n\t *\n\t * @return Void\n\t */\n\tbatch( callback, params = {} ) {\n\t\tthis.batches.unshift( { entries: [ ...this.entries ], snapshots: [], params } );\n\t\tconst returnValue = callback();\n\t\treturn _await( returnValue, returnValue => {\n\t\t\tconst batch = this.batches.shift();\n\t\t\tif ( !batch.snapshots.length ) return returnValue;\n\t\t\tthis.$emit( batch.entries, batch.snapshots );\n\t\t\treturn returnValue;\n\t\t} );\n\t}\n\n}\n", "\n/**\n * @imports\n */\nimport Registration from './Registration.js';\n\n/**\n * ---------------------------\n * The TrapsRegistration class\n * ---------------------------\n */\n\nexport default class TrapsRegistration extends Registration {\n\t\n\t/**\n\t * Calls the observer's handler function\n\t * on matching with the descriptor's fields.\n\t *\n\t * @param Descriptor\t\t\t \tdescriptor\n\t * @param function\t\t\t\t\tnext\n\t * @param mixed\t\t\t\t\t \trecieved\n\t *\n\t * @return void\n\t */\n\texec( descriptor, next, recieved ) {\n\t\tif ( this.running || !this.traps[ descriptor.operation ] ) {\n\t\t\treturn next( ...Array.prototype.slice.call( arguments, 2 ) );\n\t\t}\n\t\tthis.running = true;\n\t\treturn this.traps[ descriptor.operation ]( descriptor, recieved, ( ...args ) => {\n\t\t\tthis.running = false;\n\t\t\treturn next( ...args );\n\t\t} );\n\t}\n}", "\n/**\n * @imports\n */\nimport TrapsRegistration from './TrapsRegistration.js';\nimport Registry from './Registry.js';\n\n/**\n * ---------------------------\n * The TrapsRegistry class\n * ---------------------------\n */\n\nexport default class TrapsRegistry extends Registry {\n\n\tstatic getInstance( target, createIfNotExists = true, namespace = null ) {\n\t\treturn super._getInstance( 'traps', ...arguments );\n\t}\n\n\tstatic namespace( namespace, ImplementationClass = null ) {\n\t\treturn super._namespace( 'traps', ...arguments );\n\t}\n\t\n\t/**\n\t * @inheritdoc\n\t */\n\taddRegistration( dfn ) {\n\t\treturn super.addRegistration( new TrapsRegistration( this, dfn ) );\n\t}\n\n\t/**\n\t * Fires all interceptors with the given action.\n\t *\n\t * @param Descriptor\t\tdescriptor\n\t * @param function\t\t\tdefaultHandler\n\t *\n\t * @return mixed\n\t */\n\temit( descriptor, defaultHandler = null ) {\n\t\tconst $this = this;\n\t\treturn ( function next( index, ..._args ) {\n\t\t\tconst registration = $this.entries[ index ];\n\t\t\tif ( registration ) {\n\t\t\t\treturn registration.exec( descriptor, ( ...args ) => {\n\t\t\t\t\treturn next( index + 1, ...args );\n\t\t\t\t}/*next*/, ..._args );\n\t\t\t}\n\t\t\treturn defaultHandler ? defaultHandler( descriptor, ..._args ) : _args[ 0 ];\n\t\t} )( 0 );\n\t}\n}", "\n/**\n * @imports\n */\nimport { _from as _arrFrom } from '@webqit/util/arr/index.js';\nimport { _isClass, _isFunction, _isTypeObject, _getType } from '@webqit/util/js/index.js';\nimport { set, deleteProperty, has, get, ownKeys, defineProperty, getOwnPropertyDescriptor } from \"./main.js\";\nimport { apply, construct, getPrototypeOf, setPrototypeOf, isExtensible, preventExtensions } from \"./main.js\";\nimport { _wq } from './util.js';\n\n/* ---------------ACCESSORIZE METHODS--------------- */\n\n/**\n * Accessorizes props.\n *\n * @param Array|Object\ttarget\n * @param String|Array\tprops\n * @param Object\t\tparams\n *\n * @return Array\n */\nconst symWQOriginal = Symbol('wqOriginal');\nexport function accessorize( target, props, params = {} ) {\n    target = resolveTarget( target );\n    const accessorizedProps = _wq( target, 'accessorizedProps' );\n    // ---------\n    function getDescriptorDeep( prop ) {\n        let descriptor, proto = target;\n        do {\n            descriptor = Object.getOwnPropertyDescriptor( proto, prop );\n        } while ( !descriptor && ( proto = Object.getPrototypeOf( proto ) ) );\n        return descriptor \n            ? { proto, descriptor } \n            : { descriptor: { value: undefined, configurable: true, enumerable: true, writable: true } };\n    }\n    // ---------\n    function accessorizeProp( prop ) {\n        if ( accessorizedProps.has( prop + '' ) ) return true;\n        // ------------------\n        // Current Descriptor Record\n        const currentDescriptorRecord = getDescriptorDeep( prop );\n        currentDescriptorRecord.getValue = function( withPropertyDescriptors = false ) {\n            if ( withPropertyDescriptors ) return this.descriptor;\n            return this.descriptor.get ? this.descriptor.get() : this.descriptor.value;\n        };\n        currentDescriptorRecord.setValue = function( value, withPropertyDescriptors = false ) {\n            this.dirty = true;\n            if ( withPropertyDescriptors ) { this.descriptor = value; return; }\n            return this.descriptor.set ? this.descriptor.set( value ) !== false : ( this.descriptor.value = value, true );\n        };\n        currentDescriptorRecord.intact = function() {\n            const currentDescriptor = Object.getOwnPropertyDescriptor( target, prop );\n            return currentDescriptor?.get === accessorization.get \n                && currentDescriptor?.set === accessorization.set\n                && accessorizedProps.get( prop + '' ) === this;\n        };\n        currentDescriptorRecord.restore = function() {\n            if ( !this.intact() ) return false;\n            if ( ( this.proto && this.proto !== target ) || ( !this.proto && !this.dirty ) ) { delete target[ prop ]; }\n            else { Object.defineProperty( target, prop, this.descriptor ); }\n            accessorizedProps.delete( prop + '' );\n            return true;\n        };\n        accessorizedProps.set( !isNaN( prop ) ? parseInt( prop ) : prop, currentDescriptorRecord );\n        // ------------------\n        // enumerable, configurable\n        const { enumerable = true } = currentDescriptorRecord.descriptor;\n        const accessorization = { enumerable, configurable: true };\n        // set, get\n        if ( ( 'value' in currentDescriptorRecord.descriptor ) || currentDescriptorRecord.descriptor.set ) {\n            accessorization.set = function ( value ) { return set( this, prop, value, params ); };\n        }\n        if ( ( 'value' in currentDescriptorRecord.descriptor ) || currentDescriptorRecord.descriptor.get ) {\n            accessorization.get = function () { return get( this, prop, params ); };\n        }\n        try {\n            Object.defineProperty( target, prop, accessorization );\n            return true;\n        } catch( e ) {\n            accessorizedProps.delete( prop + '' );\n            return false;\n        }\n    }\n    const _props = Array.isArray( props ) ? props : (\n        props === undefined ? Object.keys( target ) : [ props ]\n    );\n    const statuses = _props.map( accessorizeProp );\n    return props === undefined || Array.isArray( props ) \n        ? statuses \n        : statuses[ 0 ];\n}\n\n/**\n * Unaccessorizes previously accessorized props.\n *\n * @param Array|Object\ttarget\n * @param String|Array\tprops\n * @param Object\t\tparams\n *\n * @return Array\n */\nexport function unaccessorize( target, props, params = {} ) {\n    target = resolveTarget( target );\n    const accessorizedProps = _wq( target, 'accessorizedProps' );\n    function unaccessorizeProp( prop ) {\n        if ( !accessorizedProps.has( prop + '' ) ) return true;\n        return accessorizedProps.get( prop + '' ).restore();\n    }\n    const _props = Array.isArray( props ) ? props : (\n        props === undefined ? Object.keys( target ) : [ props ]\n    );\n    const statuses = _props.map( unaccessorizeProp );\n    return props === undefined || Array.isArray( props ) \n        ? statuses \n        : statuses[ 0 ];\n}\n\n/* ---------------PROXY METHODS--------------- */\n\n/**\n * Returns an object as a proxy and binds all instance methods\n * to the proxy instead of the object itself.\n *\n * @param Array|Object\t\ttarget\n * @param Object\t\t    params\n * @param Function\t\t    extendCallback\n *\n * @return Proxy\n */\nexport function proxy( target, params = {}, extendCallback = undefined ) {\n    // Resolve target\n    const originalTarget = resolveTarget( target );\n    // Return same proxy instance?\n    if ( typeof params.membrane === 'boolean' ) throw new Error( `The params.membrane parameter cannot be of type boolean.` );\n    if ( params.membrane && _wq( originalTarget, 'membraneRef' ).has( params.membrane ) ) { return _wq( originalTarget, 'membraneRef' ).get( params.membrane ); }\n    const traps = {\n        apply: ( target, thisArgument, argumentsList ) => apply( target, thisArgument, argumentsList, undefined, params ),\n        construct:  ( target, argumentsList, newTarget = null ) => construct( target, argumentsList, newTarget, params ),\n        defineProperty:  ( target, propertyKey, attributes ) => defineProperty( target, propertyKey, attributes, params ),\n        deleteProperty: ( target, propertyKey ) => deleteProperty( target, propertyKey, params ),\n        get: ( target, propertyKey, receiver = null ) => {\n            if ( propertyKey === symWQOriginal ) {\n                return originalTarget;\n            }\n            const $params = { ...params, receiver };\n            const returnValue = get( target, propertyKey, $params );\n            // Auto-wrap array methods\n            if ( Array.isArray( target ) && typeof returnValue === 'function' ) {\n                return proxy( returnValue, { ...params, arrayMethodName: propertyKey, membrane: receiver/* the instance obj that will be the thisArgument at apply(). Much like function.bind() */ }, extendCallback );\n            }\n            // Auto-wrap others if so specified\n            if ( params.chainable && _isTypeObject( returnValue ) ) {\n                return proxy( returnValue, params, extendCallback );\n            }\n            return returnValue;\n        },\n        getOwnPropertyDescriptor: ( target, propertyKey ) => getOwnPropertyDescriptor( target, propertyKey, params ),\n        getPrototypeOf: target => getPrototypeOf( target, params ),\n        has: ( target, propertyKey ) => has( target, propertyKey, params ),\n        isExtensible: target => isExtensible( target, params ),\n        ownKeys: target => ownKeys( target, params ),\n        preventExtensions: target => preventExtensions( target, params ),\n        set: ( target, propertyKey, value, receiver = null ) => set( target, propertyKey, value, { ...params, receiver } ),\n        setPrototypeOf: ( target, prototype ) => setPrototypeOf( target, prototype, params ),\n    };\n    // Extend...\n    const $traps = extendCallback?.( traps ) || traps;\n    // Create proxy\n    const $proxy = new Proxy( originalTarget, $traps );\n    if ( params.membrane ) { _wq( originalTarget, 'membraneRef' ).set( params.membrane, $proxy ); }\n\treturn $proxy;\n}\n\n/**\n * Returns the original object earlier proxied by proxy().\n *\n * @param Proxy|Any\t\ttarget\n *\n * @return Any\n */\nexport function unproxy( target ) {\n    // Proxy targets are mapped to their own instances internally\n    return target && target[ symWQOriginal ] || target;\n}\n\n/* ---------------HELPERS--------------- */\n\n/** \n * Ensures target object is an object or array.\n *\n * @param Array|Object\ttarget\n *\n * @return Array|Object\n */\nfunction resolveTarget( target ) {\n\tif ( !target || !_isTypeObject( target ) ) throw new Error('Target must be of type object!');\n\treturn unproxy( target );\n}\n", "\n/**\n * @imports\n */\nimport * as main from './main.js';\nimport * as actors from './actors.js';\n\nconst Observer = { ...main, ...actors };\n\nexport default Observer;", "\nexport const _call = ( _function, ...args ) => {\n    const callback = args.pop();\n    if ( _function.constructor.name === 'AsyncFunction' ) return _await( _function.call( ...args ), callback );\n    try {\n        return callback( _function.call( ...args ) );\n    } catch( e ) { return callback( undefined, e ); }\n};\n\nexport const _await = ( maybePromise, callback ) => {\n    return maybePromise instanceof Promise ? maybePromise.then( callback ).catch( e => callback( undefined, e ) ) : callback( maybePromise )\n};\n\nexport const _isTypeObject = val => {\n\treturn ( typeof val === 'object' && val ) || typeof val === 'function';\n};\n\nexport function _$functionArgs( args ) {\n    const params = typeof args[ args.length - 1 ] === 'object' ? args.pop() : {};\n    const source = args.pop() || '';\n    params.functionParams = args;\n    return { source, params };\n}\n\nexport const env = {};\n", "// This file was generated. Do not modify manually!\nvar astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 357, 0, 62, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\n// This file was generated. Do not modify manually!\nvar astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1070, 4050, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 46, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 482, 44, 11, 6, 17, 0, 322, 29, 19, 43, 1269, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4152, 8, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\n\n// This file was generated. Do not modify manually!\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\n// This file was generated. Do not modify manually!\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n\n// These are a run-length and offset encoded representation of the\n\n// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords$1 = {\n  5: ecma5AndLessKeywords,\n  \"5module\": ecma5AndLessKeywords + \" export import\",\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords[name] = new TokenType(name, options)\n}\n\nvar types$1 = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  privateId: new TokenType(\"privateId\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n  coalesce: binop(\"??\", 1),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\", startsExpr),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\n}\n\nfunction nextLineBreak(code, from, end) {\n  if ( end === void 0 ) end = code.length;\n\n  for (var i = from; i < end; i++) {\n    var next = code.charCodeAt(i);\n    if (isNewLine(next))\n      { return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1 }\n  }\n  return -1\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\nvar hasOwn = Object.hasOwn || (function (obj, propName) { return (\n  hasOwnProperty.call(obj, propName)\n); });\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\nfunction wordsRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\nvar loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    var nextBreak = nextLineBreak(input, cur, offset);\n    if (nextBreak < 0) { return new Position(line, offset - cur) }\n    ++line;\n    cur = nextBreak;\n  }\n}\n\n// A second argument must be given to configure the parser process.\n// These options are recognized (only `ecmaVersion` is required):\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n  // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10\n  // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `\"latest\"`\n  // (the latest version the library supports). This influences\n  // support for strict mode, the set of reserved words, and support\n  // for new syntax features.\n  ecmaVersion: null,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // the position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program, and an import.meta expression\n  // in a script isn't considered an error.\n  allowImportExportEverywhere: false,\n  // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: null,\n  // When enabled, super identifiers are not constrained to\n  // appearing in methods and do not raise an error when they appear elsewhere.\n  allowSuperOutsideMethod: null,\n  // When enabled, hashbang directive in the beginning of file is\n  // allowed and treated as a line comment. Enabled by default when\n  // `ecmaVersion` >= 2023.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback\u2014that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback\u2014that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false\n};\n\n// Interpret and default an options object\n\nvar warnedAboutEcmaVersion = false;\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && hasOwn(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion === \"latest\") {\n    options.ecmaVersion = 1e8;\n  } else if (options.ecmaVersion == null) {\n    if (!warnedAboutEcmaVersion && typeof console === \"object\" && console.warn) {\n      warnedAboutEcmaVersion = true;\n      console.warn(\"Since Acorn 8.0.0, options.ecmaVersion is required.\\nDefaulting to 2020, but this will stop working in the future.\");\n    }\n    options.ecmaVersion = 11;\n  } else if (options.ecmaVersion >= 2015) {\n    options.ecmaVersion -= 2009;\n  }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (opts.allowHashBang == null)\n    { options.allowHashBang = options.ecmaVersion >= 14; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Each scope gets a bitset that may contain these flags\nvar\n    SCOPE_TOP = 1,\n    SCOPE_FUNCTION = 2,\n    SCOPE_ASYNC = 4,\n    SCOPE_GENERATOR = 8,\n    SCOPE_ARROW = 16,\n    SCOPE_SIMPLE_CATCH = 32,\n    SCOPE_SUPER = 64,\n    SCOPE_DIRECT_SUPER = 128,\n    SCOPE_CLASS_STATIC_BLOCK = 256,\n    SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;\n\nfunction functionFlags(async, generator) {\n  return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n}\n\n// Used in checkLVal* and declareName to determine the type of a binding\nvar\n    BIND_NONE = 0, // Not a binding\n    BIND_VAR = 1, // Var-style binding\n    BIND_LEXICAL = 2, // Let- or const-style binding\n    BIND_FUNCTION = 3, // Function declaration\n    BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding\n    BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n  var reserved = \"\";\n  if (options.allowReserved !== true) {\n    reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];\n    if (options.sourceType === \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = wordsRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = wordsRegexp(reservedStrict);\n  this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types$1.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n  this.potentialArrowInForAwait = false;\n\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n  // Labels in scope.\n  this.labels = [];\n  // Thus-far undefined exports.\n  this.undefinedExports = Object.create(null);\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterScope(SCOPE_TOP);\n\n  // For RegExp validation\n  this.regexpState = null;\n\n  // The stack of private names.\n  // Each element has two properties: 'declared' and 'used'.\n  // When it exited from the outermost class definition, all used private names must be declared.\n  this.privateNameStack = [];\n};\n\nvar prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },canAwait: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true },allowNewDotTarget: { configurable: true },inClassStaticBlock: { configurable: true } };\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nprototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n\nprototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 && !this.currentVarScope().inClassFieldInit };\n\nprototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 && !this.currentVarScope().inClassFieldInit };\n\nprototypeAccessors.canAwait.get = function () {\n  for (var i = this.scopeStack.length - 1; i >= 0; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.inClassFieldInit || scope.flags & SCOPE_CLASS_STATIC_BLOCK) { return false }\n    if (scope.flags & SCOPE_FUNCTION) { return (scope.flags & SCOPE_ASYNC) > 0 }\n  }\n  return (this.inModule && this.options.ecmaVersion >= 13) || this.options.allowAwaitOutsideFunction\n};\n\nprototypeAccessors.allowSuper.get = function () {\n  var ref = this.currentThisScope();\n    var flags = ref.flags;\n    var inClassFieldInit = ref.inClassFieldInit;\n  return (flags & SCOPE_SUPER) > 0 || inClassFieldInit || this.options.allowSuperOutsideMethod\n};\n\nprototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n\nprototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\nprototypeAccessors.allowNewDotTarget.get = function () {\n  var ref = this.currentThisScope();\n    var flags = ref.flags;\n    var inClassFieldInit = ref.inClassFieldInit;\n  return (flags & (SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK)) > 0 || inClassFieldInit\n};\n\nprototypeAccessors.inClassStaticBlock.get = function () {\n  return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0\n};\n\nParser.extend = function extend () {\n    var plugins = [], len = arguments.length;\n    while ( len-- ) plugins[ len ] = arguments[ len ];\n\n  var cls = this;\n  for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n  return cls\n};\n\nParser.parse = function parse (input, options) {\n  return new this(options, input).parse()\n};\n\nParser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n  var parser = new this(options, input, pos);\n  parser.nextToken();\n  return parser.parseExpression()\n};\n\nParser.tokenizer = function tokenizer (input, options) {\n  return new this(options, input)\n};\n\nObject.defineProperties( Parser.prototype, prototypeAccessors );\n\nvar pp$9 = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'\\\\])*?)'|\"((?:\\\\.|[^\"\\\\])*?)\")/;\npp$9.strictDirective = function(start) {\n  if (this.options.ecmaVersion < 5) { return false }\n  for (;;) {\n    // Try to find string literal.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    var match = literal.exec(this.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) === \"use strict\") {\n      skipWhiteSpace.lastIndex = start + match[0].length;\n      var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n      var next = this.input.charAt(end);\n      return next === \";\" || next === \"}\" ||\n        (lineBreak.test(spaceAfter[0]) &&\n         !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\"))\n    }\n    start += match[0].length;\n\n    // Skip semicolon, if any.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    if (this.input[start] === \";\")\n      { start++; }\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp$9.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp$9.isContextual = function(name) {\n  return this.type === types$1.name && this.value === name && !this.containsEsc\n};\n\n// Consumes contextual keyword if possible.\n\npp$9.eatContextual = function(name) {\n  if (!this.isContextual(name)) { return false }\n  this.next();\n  return true\n};\n\n// Asserts that following token is given contextual keyword.\n\npp$9.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp$9.canInsertSemicolon = function() {\n  return this.type === types$1.eof ||\n    this.type === types$1.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp$9.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp$9.semicolon = function() {\n  if (!this.eat(types$1.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp$9.afterTrailingComma = function(tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp$9.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp$9.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nvar DestructuringErrors = function DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n  this.doubleProto =\n    -1;\n};\n\npp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, isAssign ? \"Assigning to rvalue\" : \"Parenthesized pattern\"); }\n};\n\npp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) { return false }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n  if (shorthandAssign >= 0)\n    { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n  if (doubleProto >= 0)\n    { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n};\n\npp$9.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp$9.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$8 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$8.parseTopLevel = function(node) {\n  var exports = Object.create(null);\n  if (!node.body) { node.body = []; }\n  while (this.type !== types$1.eof) {\n    var stmt = this.parseStatement(null, true, exports);\n    node.body.push(stmt);\n  }\n  if (this.inModule)\n    { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n      {\n        var name = list[i];\n\n        this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n      } }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  node.sourceType = this.options.sourceType;\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\npp$8.isLet = function(context) {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  // For ambiguous cases, determine if a LexicalDeclaration (or only a\n  // Statement) is allowed here. If context is not empty then only a Statement\n  // is allowed. However, `let [` is an explicit negative lookahead for\n  // ExpressionStatement, so special-case it first.\n  if (nextCh === 91 || nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true } // '[', '/', astral\n  if (context) { return false }\n\n  if (nextCh === 123) { return true } // '{'\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) { ++pos; }\n    if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$8.isAsyncFunction = function() {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, after;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 === this.input.length ||\n     !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$8.parseStatement = function(context, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet(context)) {\n    starttype = types$1._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types$1._break: case types$1._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types$1._debugger: return this.parseDebuggerStatement(node)\n  case types$1._do: return this.parseDoStatement(node)\n  case types$1._for: return this.parseForStatement(node)\n  case types$1._function:\n    // Function as sole body of either an if statement or a labeled statement\n    // works, but not when it is part of a labeled statement that is the sole\n    // body of an if statement.\n    if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false, !context)\n  case types$1._class:\n    if (context) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types$1._if: return this.parseIfStatement(node)\n  case types$1._return: return this.parseReturnStatement(node)\n  case types$1._switch: return this.parseSwitchStatement(node)\n  case types$1._throw: return this.parseThrowStatement(node)\n  case types$1._try: return this.parseTryStatement(node)\n  case types$1._const: case types$1._var:\n    kind = kind || this.value;\n    if (context && kind !== \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types$1._while: return this.parseWhileStatement(node)\n  case types$1._with: return this.parseWithStatement(node)\n  case types$1.braceL: return this.parseBlock(true, node)\n  case types$1.semi: return this.parseEmptyStatement(node)\n  case types$1._export:\n  case types$1._import:\n    if (this.options.ecmaVersion > 10 && starttype === types$1._import) {\n      skipWhiteSpace.lastIndex = this.pos;\n      var skip = skipWhiteSpace.exec(this.input);\n      var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n      if (nextCh === 40 || nextCh === 46) // '(' or '.'\n        { return this.parseExpressionStatement(node, this.parseExpression()) }\n    }\n\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction()) {\n      if (context) { this.unexpected(); }\n      this.next();\n      return this.parseFunctionStatement(node, true, !context)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr, context) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$8.parseBreakContinueStatement = function(node, keyword) {\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types$1.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types$1.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$8.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$8.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"do\");\n  this.labels.pop();\n  this.expect(types$1._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types$1.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$8.parseForStatement = function(node) {\n  this.next();\n  var awaitAt = (this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterScope(0);\n  this.expect(types$1.parenL);\n  if (this.type === types$1.semi) {\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, null)\n  }\n  var isLet = this.isLet();\n  if (this.type === types$1._var || this.type === types$1._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types$1._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      return this.parseForIn(node, init$1)\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init$1)\n  }\n  var startsWithLet = this.isContextual(\"let\"), isForOf = false;\n  var refDestructuringErrors = new DestructuringErrors;\n  var init = this.parseExpression(awaitAt > -1 ? \"await\" : true, refDestructuringErrors);\n  if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types$1._in) {\n        if (awaitAt > -1) { this.unexpected(awaitAt); }\n      } else { node.await = awaitAt > -1; }\n    }\n    if (startsWithLet && isForOf) { this.raise(init.start, \"The left-hand side of a for-of loop may not start with 'let'.\"); }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLValPattern(init);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) { this.unexpected(awaitAt); }\n  return this.parseFor(node, init)\n};\n\npp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n  this.next();\n  return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n};\n\npp$8.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(\"if\");\n  node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$8.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types$1.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$8.parseSwitchStatement = function(node) {\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types$1.braceL);\n  this.labels.push(switchLabel);\n  this.enterScope(0);\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types$1.braceR;) {\n    if (this.type === types$1._case || this.type === types$1._default) {\n      var isCase = this.type === types$1._case;\n      if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this.startNode());\n      cur.consequent = [];\n      this.next();\n      if (isCase) {\n        cur.test = this.parseExpression();\n      } else {\n        if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this.expect(types$1.colon);\n    } else {\n      if (!cur) { this.unexpected(); }\n      cur.consequent.push(this.parseStatement(null));\n    }\n  }\n  this.exitScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$8.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty$1 = [];\n\npp$8.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types$1._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types$1.parenL)) {\n      clause.param = this.parseBindingAtom();\n      var simple = clause.param.type === \"Identifier\";\n      this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n      this.checkLValPattern(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n      this.expect(types$1.parenR);\n    } else {\n      if (this.options.ecmaVersion < 10) { this.unexpected(); }\n      clause.param = null;\n      this.enterScope(0);\n    }\n    clause.body = this.parseBlock(false);\n    this.exitScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$8.parseVarStatement = function(node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$8.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"while\");\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$8.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(\"with\");\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$8.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$8.parseLabeledStatement = function(node, maybeName, expr, context) {\n  for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types$1._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$8.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n  if ( node === void 0 ) node = this.startNode();\n\n  node.body = [];\n  this.expect(types$1.braceL);\n  if (createNewLexicalScope) { this.enterScope(0); }\n  while (this.type !== types$1.braceR) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n  if (exitStrict) { this.strict = false; }\n  this.next();\n  if (createNewLexicalScope) { this.exitScope(); }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$8.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types$1.semi);\n  node.test = this.type === types$1.semi ? null : this.parseExpression();\n  this.expect(types$1.semi);\n  node.update = this.type === types$1.parenR ? null : this.parseExpression();\n  this.expect(types$1.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$8.parseForIn = function(node, init) {\n  var isForIn = this.type === types$1._in;\n  this.next();\n\n  if (\n    init.type === \"VariableDeclaration\" &&\n    init.declarations[0].init != null &&\n    (\n      !isForIn ||\n      this.options.ecmaVersion < 8 ||\n      this.strict ||\n      init.kind !== \"var\" ||\n      init.declarations[0].id.type !== \"Identifier\"\n    )\n  ) {\n    this.raise(\n      init.start,\n      ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n    );\n  }\n  node.left = init;\n  node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types$1.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n};\n\n// Parse a list of variable declarations.\n\npp$8.parseVar = function(node, isFor, kind) {\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this.startNode();\n    this.parseVarId(decl, kind);\n    if (this.eat(types$1.eq)) {\n      decl.init = this.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n      this.unexpected();\n    } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types$1._in || this.isContextual(\"of\")))) {\n      this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n    if (!this.eat(types$1.comma)) { break }\n  }\n  return node\n};\n\npp$8.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom();\n  this.checkLValPattern(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n};\n\nvar FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n// Parse a function declaration or literal (depending on the\n// `statement & FUNC_STATEMENT`).\n\n// Remove `allowExpressionBody` for 7.0.0, as it is only called with false\npp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n    if (this.type === types$1.star && (statement & FUNC_HANGING_STATEMENT))\n      { this.unexpected(); }\n    node.generator = this.eat(types$1.star);\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (statement & FUNC_STATEMENT) {\n    node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types$1.name ? null : this.parseIdent();\n    if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n      // If it is a regular function declaration in sloppy mode, then it is\n      // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n      // mode depends on properties of the current scope (see\n      // treatFunctionsAsVar).\n      { this.checkLValSimple(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n  }\n\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(node.async, node.generator));\n\n  if (!(statement & FUNC_STATEMENT))\n    { node.id = this.type === types$1.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody, false, forInit);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$8.parseFunctionParams = function(node) {\n  this.expect(types$1.parenL);\n  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$8.parseClass = function(node, isStatement) {\n  this.next();\n\n  // ecma-262 14.6 Class Definitions\n  // A class definition is always strict mode code.\n  var oldStrict = this.strict;\n  this.strict = true;\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var privateNameMap = this.enterClassBody();\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types$1.braceL);\n  while (this.type !== types$1.braceR) {\n    var element = this.parseClassElement(node.superClass !== null);\n    if (element) {\n      classBody.body.push(element);\n      if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n        if (hadConstructor) { this.raise(element.start, \"Duplicate constructor in the same class\"); }\n        hadConstructor = true;\n      } else if (element.key && element.key.type === \"PrivateIdentifier\" && isPrivateNameConflicted(privateNameMap, element)) {\n        this.raiseRecoverable(element.key.start, (\"Identifier '#\" + (element.key.name) + \"' has already been declared\"));\n      }\n    }\n  }\n  this.strict = oldStrict;\n  this.next();\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  this.exitClassBody();\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$8.parseClassElement = function(constructorAllowsSuper) {\n  if (this.eat(types$1.semi)) { return null }\n\n  var ecmaVersion = this.options.ecmaVersion;\n  var node = this.startNode();\n  var keyName = \"\";\n  var isGenerator = false;\n  var isAsync = false;\n  var kind = \"method\";\n  var isStatic = false;\n\n  if (this.eatContextual(\"static\")) {\n    // Parse static init block\n    if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {\n      this.parseClassStaticBlock(node);\n      return node\n    }\n    if (this.isClassElementNameStart() || this.type === types$1.star) {\n      isStatic = true;\n    } else {\n      keyName = \"static\";\n    }\n  }\n  node.static = isStatic;\n  if (!keyName && ecmaVersion >= 8 && this.eatContextual(\"async\")) {\n    if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {\n      isAsync = true;\n    } else {\n      keyName = \"async\";\n    }\n  }\n  if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {\n    isGenerator = true;\n  }\n  if (!keyName && !isAsync && !isGenerator) {\n    var lastValue = this.value;\n    if (this.eatContextual(\"get\") || this.eatContextual(\"set\")) {\n      if (this.isClassElementNameStart()) {\n        kind = lastValue;\n      } else {\n        keyName = lastValue;\n      }\n    }\n  }\n\n  // Parse element name\n  if (keyName) {\n    // 'async', 'get', 'set', or 'static' were not a keyword contextually.\n    // The last token is any of those. Make it the element name.\n    node.computed = false;\n    node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);\n    node.key.name = keyName;\n    this.finishNode(node.key, \"Identifier\");\n  } else {\n    this.parseClassElementName(node);\n  }\n\n  // Parse element value\n  if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== \"method\" || isGenerator || isAsync) {\n    var isConstructor = !node.static && checkKeyName(node, \"constructor\");\n    var allowsDirectSuper = isConstructor && constructorAllowsSuper;\n    // Couldn't move this check into the 'parseClassMethod' method for backward compatibility.\n    if (isConstructor && kind !== \"method\") { this.raise(node.key.start, \"Constructor can't have get/set modifier\"); }\n    node.kind = isConstructor ? \"constructor\" : kind;\n    this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);\n  } else {\n    this.parseClassField(node);\n  }\n\n  return node\n};\n\npp$8.isClassElementNameStart = function() {\n  return (\n    this.type === types$1.name ||\n    this.type === types$1.privateId ||\n    this.type === types$1.num ||\n    this.type === types$1.string ||\n    this.type === types$1.bracketL ||\n    this.type.keyword\n  )\n};\n\npp$8.parseClassElementName = function(element) {\n  if (this.type === types$1.privateId) {\n    if (this.value === \"constructor\") {\n      this.raise(this.start, \"Classes can't have an element named '#constructor'\");\n    }\n    element.computed = false;\n    element.key = this.parsePrivateIdent();\n  } else {\n    this.parsePropertyName(element);\n  }\n};\n\npp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n  // Check key and flags\n  var key = method.key;\n  if (method.kind === \"constructor\") {\n    if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n    if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n  } else if (method.static && checkKeyName(method, \"prototype\")) {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n\n  // Parse value\n  var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n\n  // Check value\n  if (method.kind === \"get\" && value.params.length !== 0)\n    { this.raiseRecoverable(value.start, \"getter should have no params\"); }\n  if (method.kind === \"set\" && value.params.length !== 1)\n    { this.raiseRecoverable(value.start, \"setter should have exactly one param\"); }\n  if (method.kind === \"set\" && value.params[0].type === \"RestElement\")\n    { this.raiseRecoverable(value.params[0].start, \"Setter cannot use rest params\"); }\n\n  return this.finishNode(method, \"MethodDefinition\")\n};\n\npp$8.parseClassField = function(field) {\n  if (checkKeyName(field, \"constructor\")) {\n    this.raise(field.key.start, \"Classes can't have a field named 'constructor'\");\n  } else if (field.static && checkKeyName(field, \"prototype\")) {\n    this.raise(field.key.start, \"Classes can't have a static field named 'prototype'\");\n  }\n\n  if (this.eat(types$1.eq)) {\n    // To raise SyntaxError if 'arguments' exists in the initializer.\n    var scope = this.currentThisScope();\n    var inClassFieldInit = scope.inClassFieldInit;\n    scope.inClassFieldInit = true;\n    field.value = this.parseMaybeAssign();\n    scope.inClassFieldInit = inClassFieldInit;\n  } else {\n    field.value = null;\n  }\n  this.semicolon();\n\n  return this.finishNode(field, \"PropertyDefinition\")\n};\n\npp$8.parseClassStaticBlock = function(node) {\n  node.body = [];\n\n  var oldLabels = this.labels;\n  this.labels = [];\n  this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);\n  while (this.type !== types$1.braceR) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n  this.next();\n  this.exitScope();\n  this.labels = oldLabels;\n\n  return this.finishNode(node, \"StaticBlock\")\n};\n\npp$8.parseClassId = function(node, isStatement) {\n  if (this.type === types$1.name) {\n    node.id = this.parseIdent();\n    if (isStatement)\n      { this.checkLValSimple(node.id, BIND_LEXICAL, false); }\n  } else {\n    if (isStatement === true)\n      { this.unexpected(); }\n    node.id = null;\n  }\n};\n\npp$8.parseClassSuper = function(node) {\n  node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(false) : null;\n};\n\npp$8.enterClassBody = function() {\n  var element = {declared: Object.create(null), used: []};\n  this.privateNameStack.push(element);\n  return element.declared\n};\n\npp$8.exitClassBody = function() {\n  var ref = this.privateNameStack.pop();\n  var declared = ref.declared;\n  var used = ref.used;\n  var len = this.privateNameStack.length;\n  var parent = len === 0 ? null : this.privateNameStack[len - 1];\n  for (var i = 0; i < used.length; ++i) {\n    var id = used[i];\n    if (!hasOwn(declared, id.name)) {\n      if (parent) {\n        parent.used.push(id);\n      } else {\n        this.raiseRecoverable(id.start, (\"Private field '#\" + (id.name) + \"' must be declared in an enclosing class\"));\n      }\n    }\n  }\n};\n\nfunction isPrivateNameConflicted(privateNameMap, element) {\n  var name = element.key.name;\n  var curr = privateNameMap[name];\n\n  var next = \"true\";\n  if (element.type === \"MethodDefinition\" && (element.kind === \"get\" || element.kind === \"set\")) {\n    next = (element.static ? \"s\" : \"i\") + element.kind;\n  }\n\n  // `class { get #a(){}; static set #a(_){} }` is also conflict.\n  if (\n    curr === \"iget\" && next === \"iset\" ||\n    curr === \"iset\" && next === \"iget\" ||\n    curr === \"sget\" && next === \"sset\" ||\n    curr === \"sset\" && next === \"sget\"\n  ) {\n    privateNameMap[name] = \"true\";\n    return false\n  } else if (!curr) {\n    privateNameMap[name] = next;\n    return false\n  } else {\n    return true\n  }\n}\n\nfunction checkKeyName(node, name) {\n  var computed = node.computed;\n  var key = node.key;\n  return !computed && (\n    key.type === \"Identifier\" && key.name === name ||\n    key.type === \"Literal\" && key.value === name\n  )\n}\n\n// Parses module export declaration.\n\npp$8.parseExport = function(node, exports) {\n  this.next();\n  // export * from '...'\n  if (this.eat(types$1.star)) {\n    if (this.options.ecmaVersion >= 11) {\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseModuleExportName();\n        this.checkExport(exports, node.exported, this.lastTokStart);\n      } else {\n        node.exported = null;\n      }\n    }\n    this.expectContextual(\"from\");\n    if (this.type !== types$1.string) { this.unexpected(); }\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(types$1._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n    if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n    } else if (this.type === types$1._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(null);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types$1.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n    } else {\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        // check for keywords used as local names\n        var spec = list[i];\n\n        this.checkUnreserved(spec.local);\n        // check if export is defined\n        this.checkLocalExport(spec.local);\n\n        if (spec.local.type === \"Literal\") {\n          this.raise(spec.local.start, \"A string literal cannot be used as an exported binding without `from`.\");\n        }\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$8.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (typeof name !== \"string\")\n    { name = name.type === \"Identifier\" ? name.name : name.value; }\n  if (hasOwn(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$8.checkPatternExport = function(exports, pat) {\n  var type = pat.type;\n  if (type === \"Identifier\")\n    { this.checkExport(exports, pat, pat.start); }\n  else if (type === \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this.checkPatternExport(exports, prop);\n      } }\n  else if (type === \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this.checkPatternExport(exports, elt); }\n    } }\n  else if (type === \"Property\")\n    { this.checkPatternExport(exports, pat.value); }\n  else if (type === \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type === \"RestElement\")\n    { this.checkPatternExport(exports, pat.argument); }\n  else if (type === \"ParenthesizedExpression\")\n    { this.checkPatternExport(exports, pat.expression); }\n};\n\npp$8.checkVariableExport = function(exports, decls) {\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$8.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$8.parseExportSpecifiers = function(exports) {\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types$1.braceL);\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    var node = this.startNode();\n    node.local = this.parseModuleExportName();\n    node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local;\n    this.checkExport(\n      exports,\n      node.exported,\n      node.exported.start\n    );\n    nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$8.parseImport = function(node) {\n  this.next();\n  // import '...'\n  if (this.type === types$1.string) {\n    node.specifiers = empty$1;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$8.parseImportSpecifiers = function() {\n  var nodes = [], first = true;\n  if (this.type === types$1.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLValSimple(node.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(types$1.comma)) { return nodes }\n  }\n  if (this.type === types$1.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLValSimple(node$1.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes\n  }\n  this.expect(types$1.braceL);\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    var node$2 = this.startNode();\n    node$2.imported = this.parseModuleExportName();\n    if (this.eatContextual(\"as\")) {\n      node$2.local = this.parseIdent();\n    } else {\n      this.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n    this.checkLValSimple(node$2.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n  }\n  return nodes\n};\n\npp$8.parseModuleExportName = function() {\n  if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {\n    var stringLiteral = this.parseLiteral(this.value);\n    if (loneSurrogate.test(stringLiteral.value)) {\n      this.raise(stringLiteral.start, \"An export name cannot include a lone surrogate.\");\n    }\n    return stringLiteral\n  }\n  return this.parseIdent(true)\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$8.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$8.isDirectiveCandidate = function(statement) {\n  return (\n    this.options.ecmaVersion >= 5 &&\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$7 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n    case \"AssignmentPattern\":\n    case \"RestElement\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this.toAssignable(prop, isBinding);\n        // Early error:\n        //   AssignmentRestProperty[Yield, Await] :\n        //     `...` DestructuringAssignmentTarget[Yield, Await]\n        //\n        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n        if (\n          prop.type === \"RestElement\" &&\n          (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n        ) {\n          this.raise(prop.argument.start, \"Unexpected token\");\n        }\n      }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n      this.toAssignable(node.value, isBinding);\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"SpreadElement\":\n      node.type = \"RestElement\";\n      this.toAssignable(node.argument, isBinding);\n      if (node.argument.type === \"AssignmentPattern\")\n        { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n      node.type = \"AssignmentPattern\";\n      delete node.operator;\n      this.toAssignable(node.left, isBinding);\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n      break\n\n    case \"ChainExpression\":\n      this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$7.toAssignableList = function(exprList, isBinding) {\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this.toAssignable(elt, isBinding); }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$7.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$7.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types$1.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$7.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types$1.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types$1.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types$1.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this.expect(types$1.comma); }\n    if (allowEmpty && this.type === types$1.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n      break\n    } else if (this.type === types$1.ellipsis) {\n      var rest = this.parseRestBinding();\n      this.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this.type === types$1.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n      this.expect(close);\n      break\n    } else {\n      var elem = this.parseMaybeDefault(this.start, this.startLoc);\n      this.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts\n};\n\npp$7.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$7.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// The following three functions all verify that a node is an lvalue \u2014\n// something that can be bound, or assigned to. In order to do so, they perform\n// a variety of checks:\n//\n// - Check that none of the bound/assigned-to identifiers are reserved words.\n// - Record name declarations for bindings in the appropriate scope.\n// - Check duplicate argument names, if checkClashes is set.\n//\n// If a complex binding pattern is encountered (e.g., object and array\n// destructuring), the entire pattern is recursively checked.\n//\n// There are three versions of checkLVal*() appropriate for different\n// circumstances:\n//\n// - checkLValSimple() shall be used if the syntactic construct supports\n//   nothing other than identifiers and member expressions. Parenthesized\n//   expressions are also correctly handled. This is generally appropriate for\n//   constructs for which the spec says\n//\n//   > It is a Syntax Error if AssignmentTargetType of [the production] is not\n//   > simple.\n//\n//   It is also appropriate for checking if an identifier is valid and not\n//   defined elsewhere, like import declarations or function/class identifiers.\n//\n//   Examples where this is used include:\n//     a += \u2026;\n//     import a from '\u2026';\n//   where a is the node to be checked.\n//\n// - checkLValPattern() shall be used if the syntactic construct supports\n//   anything checkLValSimple() supports, as well as object and array\n//   destructuring patterns. This is generally appropriate for constructs for\n//   which the spec says\n//\n//   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor\n//   > an ArrayLiteral and AssignmentTargetType of [the production] is not\n//   > simple.\n//\n//   Examples where this is used include:\n//     (a = \u2026);\n//     const a = \u2026;\n//     try { \u2026 } catch (a) { \u2026 }\n//   where a is the node to be checked.\n//\n// - checkLValInnerPattern() shall be used if the syntactic construct supports\n//   anything checkLValPattern() supports, as well as default assignment\n//   patterns, rest elements, and other constructs that may appear within an\n//   object or array destructuring pattern.\n//\n//   As a special case, function parameters also use checkLValInnerPattern(),\n//   as they also support defaults and rest constructs.\n//\n// These functions deliberately support both assignment and binding constructs,\n// as the logic for both is exceedingly similar. If the node is the target of\n// an assignment, then bindingType should be set to BIND_NONE. Otherwise, it\n// should be set to the appropriate BIND_* constant, like BIND_VAR or\n// BIND_LEXICAL.\n//\n// If the function is called with a non-BIND_NONE bindingType, then\n// additionally a checkClashes object may be specified to allow checking for\n// duplicate argument names. checkClashes is ignored if the provided construct\n// is an assignment (i.e., bindingType is BIND_NONE).\n\npp$7.checkLValSimple = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  var isBind = bindingType !== BIND_NONE;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (isBind ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (isBind) {\n      if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n        { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n      if (checkClashes) {\n        if (hasOwn(checkClashes, expr.name))\n          { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n        checkClashes[expr.name] = true;\n      }\n      if (bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n    }\n    break\n\n  case \"ChainExpression\":\n    this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n    break\n\n  case \"MemberExpression\":\n    if (isBind) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n    break\n\n  case \"ParenthesizedExpression\":\n    if (isBind) { this.raiseRecoverable(expr.start, \"Binding parenthesized expression\"); }\n    return this.checkLValSimple(expr.expression, bindingType, checkClashes)\n\n  default:\n    this.raise(expr.start, (isBind ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\npp$7.checkLValPattern = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1) {\n      var prop = list[i];\n\n    this.checkLValInnerPattern(prop, bindingType, checkClashes);\n    }\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this.checkLValInnerPattern(elem, bindingType, checkClashes); }\n    }\n    break\n\n  default:\n    this.checkLValSimple(expr, bindingType, checkClashes);\n  }\n};\n\npp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n  case \"Property\":\n    // AssignmentProperty has type === \"Property\"\n    this.checkLValInnerPattern(expr.value, bindingType, checkClashes);\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLValPattern(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLValPattern(expr.argument, bindingType, checkClashes);\n    break\n\n  default:\n    this.checkLValPattern(expr, bindingType, checkClashes);\n  }\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$6 = Parser.prototype;\n\npp$6.initialContext = function() {\n  return [types.b_stat]\n};\n\npp$6.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\npp$6.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types.f_expr || parent === types.f_stat)\n    { return true }\n  if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow)\n    { return true }\n  if (prevType === types$1.braceL)\n    { return parent === types.b_stat }\n  if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$6.inGeneratorContext = function() {\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$6.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType === types$1.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Used to handle egde cases when token context could not be inferred correctly during tokenization phase\n\npp$6.overrideContext = function(tokenCtx) {\n  if (this.curContext() !== tokenCtx) {\n    this.context[this.context.length - 1] = tokenCtx;\n  }\n};\n\n// Token-specific context update code\n\ntypes$1.parenR.updateContext = types$1.braceR.updateContext = function() {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes$1.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes$1.dollarBraceL.updateContext = function() {\n  this.context.push(types.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes$1.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n  this.context.push(statementParens ? types.p_stat : types.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes$1.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes$1._function.updateContext = types$1._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types$1._else &&\n      !(prevType === types$1.semi && this.curContext() !== types.p_stat) &&\n      !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n      !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat))\n    { this.context.push(types.f_expr); }\n  else\n    { this.context.push(types.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes$1.backQuote.updateContext = function() {\n  if (this.curContext() === types.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes$1.star.updateContext = function(prevType) {\n  if (prevType === types$1._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types.f_expr)\n      { this.context[index] = types.f_expr_gen; }\n    else\n      { this.context[index] = types.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes$1.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {\n    if (this.value === \"of\" && !this.exprAllowed ||\n        this.value === \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\n// A recursive descent parser operates by defining functions for all\n\nvar pp$5 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash \u2014\n// either with each other or with an init property \u2014 and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n    { return }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors) {\n          if (refDestructuringErrors.doubleProto < 0) {\n            refDestructuringErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n        }\n      }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$5.parseExpression = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);\n  if (this.type === types$1.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types$1.comma)) { node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {\n  if (this.isContextual(\"yield\")) {\n    if (this.inGenerator) { return this.parseYield(forInit) }\n    // The tokenizer will assume an expression is allowed after\n    // `yield`, but this isn't that kind of yield\n    else { this.exprAllowed = false; }\n  }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    oldDoubleProto = refDestructuringErrors.doubleProto;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type === types$1.parenL || this.type === types$1.name) {\n    this.potentialArrowAt = this.start;\n    this.potentialArrowInForAwait = forInit === \"await\";\n  }\n  var left = this.parseMaybeConditional(forInit, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    if (this.type === types$1.eq)\n      { left = this.toAssignable(left, false, refDestructuringErrors); }\n    if (!ownDestructuringErrors) {\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n    }\n    if (refDestructuringErrors.shorthandAssign >= left.start)\n      { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly\n    if (this.type === types$1.eq)\n      { this.checkLValPattern(left); }\n    else\n      { this.checkLValSimple(left); }\n    node.left = left;\n    this.next();\n    node.right = this.parseMaybeAssign(forInit);\n    if (oldDoubleProto > -1) { refDestructuringErrors.doubleProto = oldDoubleProto; }\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(forInit, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types$1.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types$1.colon);\n    node.alternate = this.parseMaybeAssign(forInit);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$5.parseExprOps = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {\n  var prec = this.type.binop;\n  if (prec != null && (!forInit || this.type !== types$1._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;\n      var coalesce = this.type === types$1.coalesce;\n      if (coalesce) {\n        // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n        // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n        prec = types$1.logicalAND.binop;\n      }\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n      if ((logical && this.type === types$1.coalesce) || (coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND))) {\n        this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n      }\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit)\n    }\n  }\n  return left\n};\n\npp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  if (right.type === \"PrivateIdentifier\") { this.raise(right.start, \"Private identifier can only be left side of binary expression\"); }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.isContextual(\"await\") && this.canAwait) {\n    expr = this.parseAwait(forInit);\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types$1.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true, update, forInit);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLValSimple(node.argument); }\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else if (node.operator === \"delete\" && isPrivateFieldAccess(node.argument))\n      { this.raiseRecoverable(node.start, \"Private fields can not be deleted\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else if (!sawUnary && this.type === types$1.privateId) {\n    if (forInit || this.privateNameStack.length === 0) { this.unexpected(); }\n    expr = this.parsePrivateIdent();\n    // only could be private fields in 'in', such as #x in obj\n    if (this.type !== types$1._in) { this.unexpected(); }\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors, forInit);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.operator = this.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this.checkLValSimple(expr);\n      this.next();\n      expr = this.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!incDec && this.eat(types$1.starstar)) {\n    if (sawUnary)\n      { this.unexpected(this.lastTokStart); }\n    else\n      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), \"**\", false) }\n  } else {\n    return expr\n  }\n};\n\nfunction isPrivateFieldAccess(node) {\n  return (\n    node.type === \"MemberExpression\" && node.property.type === \"PrivateIdentifier\" ||\n    node.type === \"ChainExpression\" && isPrivateFieldAccess(node.expression)\n  )\n}\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors, forInit);\n  if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n    { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n    if (refDestructuringErrors.trailingComma >= result.start) { refDestructuringErrors.trailingComma = -1; }\n  }\n  return result\n};\n\npp$5.parseSubscripts = function(base, startPos, startLoc, noCalls, forInit) {\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\n      this.potentialArrowAt === base.start;\n  var optionalChained = false;\n\n  while (true) {\n    var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);\n\n    if (element.optional) { optionalChained = true; }\n    if (element === base || element.type === \"ArrowFunctionExpression\") {\n      if (optionalChained) {\n        var chainNode = this.startNodeAt(startPos, startLoc);\n        chainNode.expression = element;\n        element = this.finishNode(chainNode, \"ChainExpression\");\n      }\n      return element\n    }\n\n    base = element;\n  }\n};\n\npp$5.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {\n  var optionalSupported = this.options.ecmaVersion >= 11;\n  var optional = optionalSupported && this.eat(types$1.questionDot);\n  if (noCalls && optional) { this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\"); }\n\n  var computed = this.eat(types$1.bracketL);\n  if (computed || (optional && this.type !== types$1.parenL && this.type !== types$1.backQuote) || this.eat(types$1.dot)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(types$1.bracketR);\n    } else if (this.type === types$1.privateId && base.type !== \"Super\") {\n      node.property = this.parsePrivateIdent();\n    } else {\n      node.property = this.parseIdent(this.options.allowReserved !== \"never\");\n    }\n    node.computed = !!computed;\n    if (optionalSupported) {\n      node.optional = optional;\n    }\n    base = this.finishNode(node, \"MemberExpression\");\n  } else if (!noCalls && this.eat(types$1.parenL)) {\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n    if (maybeAsyncArrow && !optional && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      if (this.awaitIdentPos > 0)\n        { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos;\n      return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit)\n    }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n    var node$1 = this.startNodeAt(startPos, startLoc);\n    node$1.callee = base;\n    node$1.arguments = exprList;\n    if (optionalSupported) {\n      node$1.optional = optional;\n    }\n    base = this.finishNode(node$1, \"CallExpression\");\n  } else if (this.type === types$1.backQuote) {\n    if (optional || optionalChained) {\n      this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n    }\n    var node$2 = this.startNodeAt(startPos, startLoc);\n    node$2.tag = base;\n    node$2.quasi = this.parseTemplate({isTagged: true});\n    base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n  }\n  return base\n};\n\n// Parse an atomic expression \u2014 either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$5.parseExprAtom = function(refDestructuringErrors, forInit) {\n  // If a division operator appears in an expression position, the\n  // tokenizer got confused, and we force it to read a regexp instead.\n  if (this.type === types$1.slash) { this.readRegexp(); }\n\n  var node, canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n  case types$1._super:\n    if (!this.allowSuper)\n      { this.raise(this.start, \"'super' keyword outside a method\"); }\n    node = this.startNode();\n    this.next();\n    if (this.type === types$1.parenL && !this.allowDirectSuper)\n      { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super ( Arguments )\n    if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types$1._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types$1.name:\n    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n    var id = this.parseIdent(false);\n    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types$1._function)) {\n      this.overrideContext(types.f_expr);\n      return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit)\n    }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types$1.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false, forInit) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types$1.name && !containsEsc &&\n          (!this.potentialArrowInForAwait || this.value !== \"of\" || this.containsEsc)) {\n        id = this.parseIdent(false);\n        if (this.canInsertSemicolon() || !this.eat(types$1.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true, forInit)\n      }\n    }\n    return id\n\n  case types$1.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types$1.num: case types$1.string:\n    return this.parseLiteral(this.value)\n\n  case types$1._null: case types$1._true: case types$1._false:\n    node = this.startNode();\n    node.value = this.type === types$1._null ? null : this.type === types$1._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types$1.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types$1.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types$1.braceL:\n    this.overrideContext(types.b_expr);\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types$1._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, 0)\n\n  case types$1._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types$1._new:\n    return this.parseNew()\n\n  case types$1.backQuote:\n    return this.parseTemplate()\n\n  case types$1._import:\n    if (this.options.ecmaVersion >= 11) {\n      return this.parseExprImport()\n    } else {\n      return this.unexpected()\n    }\n\n  default:\n    this.unexpected();\n  }\n};\n\npp$5.parseExprImport = function() {\n  var node = this.startNode();\n\n  // Consume `import` as an identifier for `import.meta`.\n  // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.\n  if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"); }\n  var meta = this.parseIdent(true);\n\n  switch (this.type) {\n  case types$1.parenL:\n    return this.parseDynamicImport(node)\n  case types$1.dot:\n    node.meta = meta;\n    return this.parseImportMeta(node)\n  default:\n    this.unexpected();\n  }\n};\n\npp$5.parseDynamicImport = function(node) {\n  this.next(); // skip `(`\n\n  // Parse node.source.\n  node.source = this.parseMaybeAssign();\n\n  // Verify ending.\n  if (!this.eat(types$1.parenR)) {\n    var errorPos = this.start;\n    if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {\n      this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n    } else {\n      this.unexpected(errorPos);\n    }\n  }\n\n  return this.finishNode(node, \"ImportExpression\")\n};\n\npp$5.parseImportMeta = function(node) {\n  this.next(); // skip `.`\n\n  var containsEsc = this.containsEsc;\n  node.property = this.parseIdent(true);\n\n  if (node.property.name !== \"meta\")\n    { this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\"); }\n  if (containsEsc)\n    { this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\"); }\n  if (this.options.sourceType !== \"module\" && !this.options.allowImportExportEverywhere)\n    { this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\"); }\n\n  return this.finishNode(node, \"MetaProperty\")\n};\n\npp$5.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1).replace(/_/g, \"\"); }\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$5.parseParenExpression = function() {\n  this.expect(types$1.parenL);\n  var val = this.parseExpression();\n  this.expect(types$1.parenR);\n  return val\n};\n\npp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    // Do not save awaitIdentPos to allow checking awaits nested in parameters\n    while (this.type !== types$1.parenR) {\n      first ? first = false : this.expect(types$1.comma);\n      if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this.type === types$1.ellipsis) {\n        spreadStart = this.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding()));\n        if (this.type === types$1.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n        break\n      } else {\n        exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n      }\n    }\n    var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;\n    this.expect(types$1.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList, forInit)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$5.parseParenItem = function(item) {\n  return item\n};\n\npp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call \u2014 at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty = [];\n\npp$5.parseNew = function() {\n  if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types$1.dot)) {\n    node.meta = meta;\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\"); }\n    if (containsEsc)\n      { this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\"); }\n    if (!this.allowNewDotTarget)\n      { this.raiseRecoverable(node.start, \"'new.target' can only be used in functions and class static block\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types$1._import;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true, false);\n  if (isImport && node.callee.type === \"ImportExpression\") {\n    this.raise(startPos, \"Cannot use new with import()\");\n  }\n  if (this.eat(types$1.parenL)) { node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$5.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types$1.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types$1.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$5.parseTemplate = function(ref) {\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    if (this.type === types$1.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n    this.expect(types$1.dollarBraceL);\n    node.expressions.push(this.parseExpression());\n    this.expect(types$1.braceR);\n    node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$5.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types$1.star)) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$5.parseObj = function(isPattern, refDestructuringErrors) {\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$5.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types$1.comma) {\n        this.raise(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\")\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\")\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types$1.star); }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);\n    this.parsePropertyName(prop, refDestructuringErrors);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types$1.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types$1.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    this.checkUnreserved(prop.key);\n    if (prop.key.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = startPos; }\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n    } else if (this.type === types$1.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n    } else {\n      prop.value = this.copyNode(prop.key);\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$5.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types$1.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n};\n\n// Initialize empty function node.\n\npp$5.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n  if (this.options.ecmaVersion >= 8) { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n  var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n  this.expect(types$1.parenL);\n  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false, true, false);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$5.parseArrowExpression = function(node, params, isAsync, forInit) {\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true, false, forInit);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {\n  var isExpression = isArrowFunction && this.type !== types$1.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign(forInit);\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    if (this.strict && node.id) { this.checkLValSimple(node.id, BIND_OUTSIDE); }\n    node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitScope();\n};\n\npp$5.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$5.checkParams = function(node, allowDuplicates) {\n  var nameHash = Object.create(null);\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this.type === types$1.comma)\n      { elt = null; }\n    else if (this.type === types$1.ellipsis) {\n      elt = this.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this.start; }\n    } else {\n      elt = this.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$5.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n  if (this.currentThisScope().inClassFieldInit && name === \"arguments\")\n    { this.raiseRecoverable(start, \"Cannot use 'arguments' in class field initializer\"); }\n  if (this.inClassStaticBlock && (name === \"arguments\" || name === \"await\"))\n    { this.raise(start, (\"Cannot use \" + name + \" in class static initialization block\")); }\n  if (this.keywords.test(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n    this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$5.parseIdent = function(liberal, isBinding) {\n  var node = this.startNode();\n  if (this.type === types$1.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n  this.next(!!liberal);\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) {\n    this.checkUnreserved(node);\n    if (node.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = node.start; }\n  }\n  return node\n};\n\npp$5.parsePrivateIdent = function() {\n  var node = this.startNode();\n  if (this.type === types$1.privateId) {\n    node.name = this.value;\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"PrivateIdentifier\");\n\n  // For validating existence\n  if (this.privateNameStack.length === 0) {\n    this.raise(node.start, (\"Private field '#\" + (node.name) + \"' must be declared in an enclosing class\"));\n  } else {\n    this.privateNameStack[this.privateNameStack.length - 1].used.push(node);\n  }\n\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$5.parseYield = function(forInit) {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type === types$1.semi || this.canInsertSemicolon() || (this.type !== types$1.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types$1.star);\n    node.argument = this.parseMaybeAssign(forInit);\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$5.parseAwait = function(forInit) {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true, false, forInit);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$3 = Parser.prototype;\n\nvar Scope = function Scope(flags) {\n  this.flags = flags;\n  // A list of var-declared names in the current lexical scope\n  this.var = [];\n  // A list of lexically-declared names in the current lexical scope\n  this.lexical = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  this.functions = [];\n  // A switch to disallow the identifier reference 'arguments'\n  this.inClassFieldInit = false;\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$3.enterScope = function(flags) {\n  this.scopeStack.push(new Scope(flags));\n};\n\npp$3.exitScope = function() {\n  this.scopeStack.pop();\n};\n\n// The spec says:\n// > At the top level of a function, or script, function declarations are\n// > treated like var declarations rather than like lexical declarations.\npp$3.treatFunctionsAsVarInScope = function(scope) {\n  return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n};\n\npp$3.declareName = function(name, bindingType, pos) {\n  var redeclared = false;\n  if (bindingType === BIND_LEXICAL) {\n    var scope = this.currentScope();\n    redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    scope.lexical.push(name);\n    if (this.inModule && (scope.flags & SCOPE_TOP))\n      { delete this.undefinedExports[name]; }\n  } else if (bindingType === BIND_SIMPLE_CATCH) {\n    var scope$1 = this.currentScope();\n    scope$1.lexical.push(name);\n  } else if (bindingType === BIND_FUNCTION) {\n    var scope$2 = this.currentScope();\n    if (this.treatFunctionsAsVar)\n      { redeclared = scope$2.lexical.indexOf(name) > -1; }\n    else\n      { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n    scope$2.functions.push(name);\n  } else {\n    for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n      var scope$3 = this.scopeStack[i];\n      if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n          !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n        redeclared = true;\n        break\n      }\n      scope$3.var.push(name);\n      if (this.inModule && (scope$3.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n      if (scope$3.flags & SCOPE_VAR) { break }\n    }\n  }\n  if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n};\n\npp$3.checkLocalExport = function(id) {\n  // scope.functions must be empty as Module code is always strict.\n  if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1) {\n    this.undefinedExports[id.name] = id;\n  }\n};\n\npp$3.currentScope = function() {\n  return this.scopeStack[this.scopeStack.length - 1]\n};\n\npp$3.currentVarScope = function() {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & SCOPE_VAR) { return scope }\n  }\n};\n\n// Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\npp$3.currentThisScope = function() {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n  }\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$2 = Parser.prototype;\n\npp$2.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$2.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$2.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$2.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\npp$2.copyNode = function(node) {\n  var newNode = new Node(this, node.start, this.startLoc);\n  for (var prop in node) { newNode[prop] = node[prop]; }\n  return newNode\n};\n\n// This file contains Unicode properties extracted from the ECMAScript\n// specification. The lists are extracted like so:\n// $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n// #table-binary-unicode-properties\nvar ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\nvar ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\nvar ecma11BinaryProperties = ecma10BinaryProperties;\nvar ecma12BinaryProperties = ecma11BinaryProperties + \" EBase EComp EMod EPres ExtPict\";\nvar ecma13BinaryProperties = ecma12BinaryProperties;\nvar unicodeBinaryProperties = {\n  9: ecma9BinaryProperties,\n  10: ecma10BinaryProperties,\n  11: ecma11BinaryProperties,\n  12: ecma12BinaryProperties,\n  13: ecma13BinaryProperties\n};\n\n// #table-unicode-general-category-values\nvar unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n// #table-unicode-script-values\nvar ecma9ScriptValues = \"Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\nvar ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\nvar ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\nvar ecma12ScriptValues = ecma11ScriptValues + \" Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi\";\nvar ecma13ScriptValues = ecma12ScriptValues + \" Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith\";\nvar unicodeScriptValues = {\n  9: ecma9ScriptValues,\n  10: ecma10ScriptValues,\n  11: ecma11ScriptValues,\n  12: ecma12ScriptValues,\n  13: ecma13ScriptValues\n};\n\nvar data = {};\nfunction buildUnicodeData(ecmaVersion) {\n  var d = data[ecmaVersion] = {\n    binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n    nonBinary: {\n      General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n      Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n    }\n  };\n  d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n  d.nonBinary.gc = d.nonBinary.General_Category;\n  d.nonBinary.sc = d.nonBinary.Script;\n  d.nonBinary.scx = d.nonBinary.Script_Extensions;\n}\n\nfor (var i = 0, list = [9, 10, 11, 12, 13]; i < list.length; i += 1) {\n  var ecmaVersion = list[i];\n\n  buildUnicodeData(ecmaVersion);\n}\n\nvar pp$1 = Parser.prototype;\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\") + (parser.options.ecmaVersion >= 13 ? \"d\" : \"\");\n  this.unicodeProperties = data[parser.options.ecmaVersion >= 13 ? 13 : parser.options.ecmaVersion];\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\n\nRegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n};\n\nRegExpValidationState.prototype.raise = function raise (message) {\n  this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at (i, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1\n  }\n  var c = s.charCodeAt(i);\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c\n  }\n  var next = s.charCodeAt(i + 1);\n  return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l\n  }\n  var c = s.charCodeAt(i), next;\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n      (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n    return i + 1\n  }\n  return i + 2\n};\n\nRegExpValidationState.prototype.current = function current (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  return this.at(this.pos, forceU)\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  return this.at(this.nextIndex(this.pos, forceU), forceU)\n};\n\nRegExpValidationState.prototype.advance = function advance (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  this.pos = this.nextIndex(this.pos, forceU);\n};\n\nRegExpValidationState.prototype.eat = function eat (ch, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  if (this.current(forceU) === ch) {\n    this.advance(forceU);\n    return true\n  }\n  return false\n};\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$1.validateRegExpFlags = function(state) {\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this.raise(state.start, \"Duplicate regular expression flag\");\n    }\n  }\n};\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$1.validateRegExpPattern = function(state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$1.regexp_pattern = function(state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$1.regexp_disjunction = function(state) {\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    this.regexp_alternative(state);\n  }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$1.regexp_alternative = function(state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state))\n    { }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$1.regexp_eatTerm = function(state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$1.regexp_eatAssertion = function(state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true\n    }\n  }\n\n  state.pos = start;\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$1.regexp_eatQuantifier = function(state, noError) {\n  if ( noError === void 0 ) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$1.regexp_eatQuantifierPrefix = function(state, noError) {\n  return (\n    state.eat(0x2A /* * */) ||\n    state.eat(0x2B /* + */) ||\n    state.eat(0x3F /* ? */) ||\n    this.regexp_eatBracedQuantifier(state, noError)\n  )\n};\npp$1.regexp_eatBracedQuantifier = function(state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0, max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$1.regexp_eatAtom = function(state) {\n  return (\n    this.regexp_eatPatternCharacters(state) ||\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state)\n  )\n};\npp$1.regexp_eatReverseSolidusAtomEscape = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatUncapturingGroup = function(state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatCapturingGroup = function(state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$1.regexp_eatExtendedAtom = function(state) {\n  return (\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state) ||\n    this.regexp_eatInvalidBracedQuantifier(state) ||\n    this.regexp_eatExtendedPatternCharacter(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$1.regexp_eatInvalidBracedQuantifier = function(state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$1.regexp_eatSyntaxCharacter = function(state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isSyntaxCharacter(ch) {\n  return (\n    ch === 0x24 /* $ */ ||\n    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n    ch === 0x2E /* . */ ||\n    ch === 0x3F /* ? */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$1.regexp_eatPatternCharacters = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$1.regexp_eatExtendedPatternCharacter = function(state) {\n  var ch = state.current();\n  if (\n    ch !== -1 &&\n    ch !== 0x24 /* $ */ &&\n    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n    ch !== 0x2E /* . */ &&\n    ch !== 0x3F /* ? */ &&\n    ch !== 0x5B /* [ */ &&\n    ch !== 0x5E /* ^ */ &&\n    ch !== 0x7C /* | */\n  ) {\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// GroupSpecifier ::\n//   [empty]\n//   `?` GroupName\npp$1.regexp_groupSpecifier = function(state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise(\"Duplicate capture group name\");\n      }\n      state.groupNames.push(state.lastStringValue);\n      return\n    }\n    state.raise(\"Invalid group\");\n  }\n};\n\n// GroupName ::\n//   `<` RegExpIdentifierName `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$1.regexp_eatGroupName = function(state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false\n};\n\n// RegExpIdentifierName ::\n//   RegExpIdentifierStart\n//   RegExpIdentifierName RegExpIdentifierPart\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$1.regexp_eatRegExpIdentifierName = function(state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n    }\n    return true\n  }\n  return false\n};\n\n// RegExpIdentifierStart ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\npp$1.regexp_eatRegExpIdentifierStart = function(state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n}\n\n// RegExpIdentifierPart ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\n//   <ZWNJ>\n//   <ZWJ>\npp$1.regexp_eatRegExpIdentifierPart = function(state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$1.regexp_eatAtomEscape = function(state) {\n  if (\n    this.regexp_eatBackReference(state) ||\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state) ||\n    (state.switchN && this.regexp_eatKGroupName(state))\n  ) {\n    return true\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false\n};\npp$1.regexp_eatBackReference = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true\n    }\n    if (n <= state.numCapturingParens) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatKGroupName = function(state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$1.regexp_eatCharacterEscape = function(state) {\n  return (\n    this.regexp_eatControlEscape(state) ||\n    this.regexp_eatCControlLetter(state) ||\n    this.regexp_eatZero(state) ||\n    this.regexp_eatHexEscapeSequence(state) ||\n    this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||\n    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n    this.regexp_eatIdentityEscape(state)\n  )\n};\npp$1.regexp_eatCControlLetter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatZero = function(state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$1.regexp_eatControlEscape = function(state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$1.regexp_eatControlLetter = function(state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isControlLetter(ch) {\n  return (\n    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n  if ( forceU === void 0 ) forceU = false;\n\n  var start = state.pos;\n  var switchU = forceU || state.switchU;\n\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true\n    }\n    if (\n      switchU &&\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatHexDigits(state) &&\n      state.eat(0x7D /* } */) &&\n      isValidUnicode(state.lastIntValue)\n    ) {\n      return true\n    }\n    if (switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n\n  return false\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$1.regexp_eatIdentityEscape = function(state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true\n    }\n    return false\n  }\n\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$1.regexp_eatDecimalEscape = function(state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$1.regexp_eatCharacterClassEscape = function(state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return true\n  }\n\n  if (\n    state.switchU &&\n    this.options.ecmaVersion >= 9 &&\n    (ch === 0x50 /* P */ || ch === 0x70 /* p */)\n  ) {\n    state.lastIntValue = -1;\n    state.advance();\n    if (\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatUnicodePropertyValueExpression(state) &&\n      state.eat(0x7D /* } */)\n    ) {\n      return true\n    }\n    state.raise(\"Invalid property name\");\n  }\n\n  return false\n};\nfunction isCharacterClassEscape(ch) {\n  return (\n    ch === 0x64 /* d */ ||\n    ch === 0x44 /* D */ ||\n    ch === 0x73 /* s */ ||\n    ch === 0x53 /* S */ ||\n    ch === 0x77 /* w */ ||\n    ch === 0x57 /* W */\n  )\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$1.regexp_eatUnicodePropertyValueExpression = function(state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return true\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n    return true\n  }\n  return false\n};\npp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n  if (!hasOwn(state.unicodeProperties.nonBinary, name))\n    { state.raise(\"Invalid property name\"); }\n  if (!state.unicodeProperties.nonBinary[name].test(value))\n    { state.raise(\"Invalid property value\"); }\n};\npp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n  if (!state.unicodeProperties.binary.test(nameOrValue))\n    { state.raise(\"Invalid property name\"); }\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$1.regexp_eatUnicodePropertyName = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$1.regexp_eatUnicodePropertyValue = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n  return this.regexp_eatUnicodePropertyValue(state)\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$1.regexp_eatCharacterClass = function(state) {\n  if (state.eat(0x5B /* [ */)) {\n    state.eat(0x5E /* ^ */);\n    this.regexp_classRanges(state);\n    if (state.eat(0x5D /* ] */)) {\n      return true\n    }\n    // Unreachable since it threw \"unterminated regular expression\" error before.\n    state.raise(\"Unterminated character class\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$1.regexp_classRanges = function(state) {\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$1.regexp_eatClassAtom = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n\n  var ch = state.current();\n  if (ch !== 0x5D /* ] */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$1.regexp_eatClassEscape = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true\n  }\n\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true\n  }\n\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  return (\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$1.regexp_eatClassControlLetter = function(state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$1.regexp_eatHexEscapeSequence = function(state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$1.regexp_eatDecimalDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$1.regexp_eatHexDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isHexDigit(ch) {\n  return (\n    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n  )\n}\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */)\n  }\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */)\n  }\n  return ch - 0x30 /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$1.regexp_eatOctalDigit = function(state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true\n  }\n  state.lastIntValue = 0;\n  return false\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$1.regexp_eatFixedHexDigits = function(state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp = Parser.prototype;\n\n// Move to the next token\n\npp.next = function(ignoreEscapeSequenceInKeyword) {\n  if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n    { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp[Symbol.iterator] = function() {\n    var this$1$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1$1.getToken();\n        return {\n          done: token.type === types$1.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types$1.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xdc00) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00\n};\n\npp.skipBlockComment = function() {\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    for (var nextBreak = (void 0), pos = start; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1;) {\n      ++this.curLine;\n      pos = this.lineStart = nextBreak;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp.skipLineComment = function(startSkip) {\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this.input.charCodeAt(++this.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp.skipSpace = function() {\n  loop: while (this.pos < this.input.length) {\n    var ch = this.input.charCodeAt(this.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this.pos;\n      break\n    case 13:\n      if (this.input.charCodeAt(this.pos + 1) === 10) {\n        ++this.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this.pos;\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this.input.charCodeAt(this.pos + 1)) {\n      case 42: // '*'\n        this.skipBlockComment();\n        break\n      case 47:\n        this.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types$1.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types$1.dot)\n  }\n};\n\npp.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.slash, 1)\n};\n\npp.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types$1.star : types$1.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types$1.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types$1.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (this.options.ecmaVersion >= 12) {\n      var next2 = this.input.charCodeAt(this.pos + 2);\n      if (next2 === 61) { return this.finishOp(types$1.assign, 3) }\n    }\n    return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2)\n  }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1)\n};\n\npp.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.bitwiseXOR, 1)\n};\n\npp.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types$1.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.plusMin, 1)\n};\n\npp.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types$1.assign, size + 1) }\n    return this.finishOp(types$1.bitShift, size)\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n      this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types$1.relational, size)\n};\n\npp.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types$1.arrow)\n  }\n  return this.finishOp(code === 61 ? types$1.eq : types$1.prefix, 1)\n};\n\npp.readToken_question = function() { // '?'\n  var ecmaVersion = this.options.ecmaVersion;\n  if (ecmaVersion >= 11) {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 46) {\n      var next2 = this.input.charCodeAt(this.pos + 2);\n      if (next2 < 48 || next2 > 57) { return this.finishOp(types$1.questionDot, 2) }\n    }\n    if (next === 63) {\n      if (ecmaVersion >= 12) {\n        var next2$1 = this.input.charCodeAt(this.pos + 2);\n        if (next2$1 === 61) { return this.finishOp(types$1.assign, 3) }\n      }\n      return this.finishOp(types$1.coalesce, 2)\n    }\n  }\n  return this.finishOp(types$1.question, 1)\n};\n\npp.readToken_numberSign = function() { // '#'\n  var ecmaVersion = this.options.ecmaVersion;\n  var code = 35; // '#'\n  if (ecmaVersion >= 13) {\n    ++this.pos;\n    code = this.fullCharCodeAtPos();\n    if (isIdentifierStart(code, true) || code === 92 /* '\\' */) {\n      return this.finishToken(types$1.privateId, this.readWord1())\n    }\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp.getTokenFromCode = function(code) {\n  switch (code) {\n  // The interpretation of a dot depends on whether it is followed\n  // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n  // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types$1.parenL)\n  case 41: ++this.pos; return this.finishToken(types$1.parenR)\n  case 59: ++this.pos; return this.finishToken(types$1.semi)\n  case 44: ++this.pos; return this.finishToken(types$1.comma)\n  case 91: ++this.pos; return this.finishToken(types$1.bracketL)\n  case 93: ++this.pos; return this.finishToken(types$1.bracketR)\n  case 123: ++this.pos; return this.finishToken(types$1.braceL)\n  case 125: ++this.pos; return this.finishToken(types$1.braceR)\n  case 58: ++this.pos; return this.finishToken(types$1.colon)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types$1.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n\n  // Anything else beginning with a digit is an integer, octal\n  // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n  // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n  // Operators are parsed inline in tiny state machines. '=' (61) is\n  // often referred to. `finishOp` simply skips the amount of\n  // characters it is given as second argument, and returns a token\n  // of the type given by its first argument.\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 63: // '?'\n    return this.readToken_question()\n\n  case 126: // '~'\n    return this.finishOp(types$1.prefix, 1)\n\n  case 35: // '#'\n    return this.readToken_numberSign()\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\npp.readRegexp = function() {\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n    var ch = this.input.charAt(this.pos);\n    if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) { this.unexpected(flagsStart); }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types$1.regexp, {pattern: pattern, flags: flags, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {\n  // `len` is used for character escape sequences. In that case, disallow separators.\n  var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n\n  // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)\n  // and isn't fraction part nor exponent part. In that case, if the first digit\n  // is zero then disallow separators.\n  var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n\n  var start = this.pos, total = 0, lastCode = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {\n    var code = this.input.charCodeAt(this.pos), val = (void 0);\n\n    if (allowSeparators && code === 95) {\n      if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\"); }\n      if (lastCode === 95) { this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\"); }\n      if (i === 0) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\"); }\n      lastCode = code;\n      continue\n    }\n\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    lastCode = code;\n    total = total * radix + val;\n  }\n\n  if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\"); }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\nfunction stringToNumber(str, isLegacyOctalNumericLiteral) {\n  if (isLegacyOctalNumericLiteral) {\n    return parseInt(str, 8)\n  }\n\n  // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\n  return parseFloat(str.replace(/_/g, \"\"))\n}\n\nfunction stringToBigInt(str) {\n  if (typeof BigInt !== \"function\") {\n    return null\n  }\n\n  // `BigInt(value)` throws syntax error if the string contains numeric separators.\n  return BigInt(str.replace(/_/g, \"\"))\n}\n\npp.readRadixNumber = function(radix) {\n  var start = this.pos;\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n    val = stringToBigInt(this.input.slice(start, this.pos));\n    ++this.pos;\n  } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types$1.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp.readNumber = function(startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, \"Invalid number\"); }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n  var next = this.input.charCodeAt(this.pos);\n  if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n    var val$1 = stringToBigInt(this.input.slice(start, this.pos));\n    ++this.pos;\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types$1.num, val$1)\n  }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var val = stringToNumber(this.input.slice(start, this.pos), octal);\n  return this.finishToken(types$1.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\npp.readString = function(quote) {\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(false);\n      chunkStart = this.pos;\n    } else if (ch === 0x2028 || ch === 0x2029) {\n      if (this.options.ecmaVersion < 10) { this.raise(this.start, \"Unterminated string constant\"); }\n      ++this.pos;\n      if (this.options.locations) {\n        this.curLine++;\n        this.lineStart = this.pos;\n      }\n    } else {\n      if (isNewLine(ch)) { this.raise(this.start, \"Unterminated string constant\"); }\n      ++this.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types$1.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp.readTmplToken = function() {\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'\n      if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {\n        if (ch === 36) {\n          this.pos += 2;\n          return this.finishToken(types$1.dollarBraceL)\n        } else {\n          ++this.pos;\n          return this.finishToken(types$1.backQuote)\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos);\n      return this.finishToken(types$1.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(true);\n      chunkStart = this.pos;\n    } else if (isNewLine(ch)) {\n      out += this.input.slice(chunkStart, this.pos);\n      ++this.pos;\n      switch (ch) {\n      case 13:\n        if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      chunkStart = this.pos;\n    } else {\n      ++this.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp.readInvalidTemplateToken = function() {\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this.input[this.pos]) {\n    case \"\\\\\":\n      ++this.pos;\n      break\n\n    case \"$\":\n      if (this.input[this.pos + 1] !== \"{\") {\n        break\n      }\n\n    // falls through\n    case \"`\":\n      return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos))\n\n    // no default\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  case 56:\n  case 57:\n    if (this.strict) {\n      this.invalidStringToken(\n        this.pos - 1,\n        \"Invalid escape sequence\"\n      );\n    }\n    if (inTemplate) {\n      var codePos = this.pos - 1;\n\n      this.invalidStringToken(\n        codePos,\n        \"Invalid escape sequence in template string\"\n      );\n\n      return null\n    }\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      this.pos += octalStr.length - 1;\n      ch = this.input.charCodeAt(this.pos);\n      if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n        this.invalidStringToken(\n          this.pos - 1 - octalStr.length,\n          inTemplate\n            ? \"Octal literal in template string\"\n            : \"Octal literal in strict mode\"\n        );\n      }\n      return String.fromCharCode(octal)\n    }\n    if (isNewLine(ch)) {\n      // Unicode new line characters after \\ get removed from output in both\n      // template literals and strings\n      return \"\"\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp.readWord1 = function() {\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this.containsEsc = true;\n      word += this.input.slice(chunkStart, this.pos);\n      var escStart = this.pos;\n      if (this.input.charCodeAt(++this.pos) !== 117) // \"u\"\n        { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this.pos;\n      var esc = this.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString(esc);\n      chunkStart = this.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp.readWord = function() {\n  var word = this.readWord1();\n  var type = types$1.name;\n  if (this.keywords.test(word)) {\n    type = keywords[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n\nvar version = \"8.8.1\";\n\nParser.acorn = {\n  Parser: Parser,\n  version: version,\n  defaultOptions: defaultOptions,\n  Position: Position,\n  SourceLocation: SourceLocation,\n  getLineInfo: getLineInfo,\n  Node: Node,\n  TokenType: TokenType,\n  tokTypes: types$1,\n  keywordTypes: keywords,\n  TokContext: TokContext,\n  tokContexts: types,\n  isIdentifierChar: isIdentifierChar,\n  isIdentifierStart: isIdentifierStart,\n  Token: Token,\n  isNewLine: isNewLine,\n  lineBreak: lineBreak,\n  lineBreakG: lineBreakG,\n  nonASCIIwhitespace: nonASCIIwhitespace\n};\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return Parser.parse(input, options)\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  return Parser.parseExpressionAt(input, pos, options)\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return Parser.tokenizer(input, options)\n}\n\nexport { Node, Parser, Position, SourceLocation, TokContext, Token, TokenType, defaultOptions, getLineInfo, isIdentifierChar, isIdentifierStart, isNewLine, keywords as keywordTypes, lineBreak, lineBreakG, nonASCIIwhitespace, parse, parseExpressionAt, types as tokContexts, types$1 as tokTypes, tokenizer, version };\n", "\n/**\n * @import\n */\nimport { Parser, tokTypes } from 'acorn';\n\n// \"quantum\" isn't anymore treated as a keyword\n//keywordTypes.quantum = new TokenType( 'quantum', { keyword: 'quantum', prefix: true } );\n//tokTypes._quantum = keywordTypes.quantum;\n\nexport default Parser.extend( function( Parser ) {\n    return class extends Parser {\n\n        static parse( input, options ) {\n            if (!options.ecmaVersion) {\n                options = { ...options, ecmaVersion: 'latest' };\n            }\n            const ast = super.parse( input, options );\n            ast.isQuantumProgram = options.executionMode !== 'RegularProgram';\n            ast.originalSource = input;\n            return ast;\n        }\n\n        constructor( ...args ) {\n            super( ...args );\n            // \"quantum\" isn't anymore treated as a keyword\n            //this.keywords = new RegExp( this.keywords.source.replace( '|', '|quantum|' ), this.keywords.flags );\n            //this.useQuabtumDirectiveStack = [ this.options.executionMode !== 'RegularProgram' ];\n            this.isQuantumFunction = false;\n            this.functionStack = [];\n        }\n\n        isQuantumToekn() {\n            return this.value === 'quantum';\n            // \"quantum\" isn't anymore treated as a keyword\n            //return this.type === tokTypes._quantum;\n        }\n\n        nextToken() {\n            const ctx = this.type;\n            super.nextToken();\n            // Capture \"async\" followed by \"quantum\" and make \"quantum\" invisible\n            if ( this.type === tokTypes.name && this.value === 'async' && this.input.slice( this.pos ).trim().startsWith( 'quantum' ) ) {\n                /**\n                 * function declaration: \"async quantum\" function name() { ... }\n                 * named function expression; f = \"async quantum\" function name() { ... }\n                 * annonymous function expression; f = \"async quantum\" function() { ... }\n                 * object method; o = { \"async quantum\" name() { ... }, }\n                 * object property; o = { name: \"async quantum\" function name() { ... }, }\n                 * class method; o = { \"async quantum\" name() { ... } }\n                 * static class method; o = { static \"async quantum\" name() { ... } }\n                 * class property; o = { name = \"async quantum\" function name() { ... }; }\n                 * static class property; o = { static name = \"async quantum\" function name() { ... }; }\n                 */\n                if ( ctx === tokTypes.name ) {\n                    // \"static async quantum\" methods\n                    this.functionStack[ 0 ].isQuantumFunction = true;\n                } else {\n                    // Other\n                    this.isQuantumFunction = true;\n                }\n                const { type, value, start, end, startLoc, endLoc } = this;\n                super.nextToken(); // Advance away from \"quantum\"\n                // But retain \"async\" token for internal methods to see\n                Object.assign( this, { type, value, start, end, startLoc, endLoc } );\n            }\n            // Capture \"quantum\" followed by \"function\" and make \"quantum\" invisible\n            else if ( this.isQuantumToekn() && this.input.slice( this.pos ).trim().startsWith( 'function' ) ) {\n                /**\n                 * function declaration: \"quantum function\" name() { ... }\n                 * named function expression; f = \"quantum function\" name() { ... }\n                 * annonymous function expression; f = \"quantum function\"() { ... }\n                 * object property; o = { name: \"quantum function\" name() { ... }, }\n                 * class property; o = { name = \"quantum function\" name() { ... }; }\n                 * static class property; o = { static name = \"quantum function\" name() { ... }; }\n                 */\n                // Advance away from \"quantum\" to tokenType \"name\", which parseFunction() sees\n                super.nextToken();\n                this.isQuantumFunction = true;\n            }\n            // \"static quantum\" methods\n            else if ( ctx === tokTypes.name && this.functionStack[ 0 ]?.type === 'classElement' && this.isQuantumToekn() ) {\n                /**\n                 * o = class { \"static quantum\" name() { ... }; }\n                 */\n                // Advance away from \"quantum\"\n                super.nextToken();\n                // Annotate this.functionStack[ 0 ] as QuantumFunction for parseClassElement() to see\n                this.functionStack[ 0 ].isQuantumFunction = true;\n            }\n            // \"quantum\" arrow function\n            else if ( this.isQuantumToekn() && /^(\\(|[\\w$]+(\\s+)?=>)/.test( this.input.slice( this.pos ).trim() ) ) {\n                // Advance away from \"quantum\"\n                super.nextToken();\n                this.isQuantumFunction = true;\n            }\n\n            // Support starstar notation\n            else if ( this.type === tokTypes.starstar ) {\n                if ( ctx === tokTypes._function ) {\n                    // parseFunction() is yet to be called\n                    // Advance away from \"starstar\" to tokenType \"name\", which parseFunction() sees\n                    if ( !this.isQuantumFunction ) {\n                        super.nextToken();\n                        // Annotate tokenType \"name\" as QuantumFunction for parseFunction() to see\n                        this.isQuantumFunction = true;\n                    }\n                } else if ( [ 'property', 'classElement' ].includes( this.functionStack[ 0 ]?.type ) ) {\n                    // parseProperty() or parseClassElement() has been called but \"starstar\" wasn't the first token\n                    // Annotate token in context as QuantumFunction which parseProperty() or parseClassElement() is seeing\n                    if ( !this.functionStack[ 0 ].isQuantumFunction ) {\n                        this.functionStack[ 0 ].isQuantumFunction = true;\n                        super.nextToken(); // Advance away from \"starstar\"\n                    }\n                }\n            }\n        }\n\n        /*\n        parseFunctionBody( ...args ) {\n            this.useQuabtumDirectiveStack.unshift( /^([`'\"])use\\squantum\\1/.test( this.input.slice( this.pos ).trim() ) );\n            const node = super.parseFunctionBody( ...args );\n            this.useQuabtumDirectiveStack.shift();\n            return node;\n        }\n        */\n\n        parseArrowExpression( ...args ) {\n            // Check and normalize flag\n            const isQuantumFunction = this.isQuantumFunction;\n            this.isQuantumFunction = false;\n            // Handle\n            this.functionStack.unshift( { type: 'arrowFunction', isQuantumFunction } ); // Push stack\n            // -------------------\n            const node = super.parseArrowExpression( ...args );\n            // -------------------\n            if ( this.functionStack[ 0 ].isQuantumFunction ) {\n                node.isQuantumFunction = true;\n            }\n            this.functionStack.shift(); // Pop stack\n            return node;\n        }\n\n        parseFunction( node, statement, allowExpressionBody, isAsync, forInit ) {\n            // Check and normalize flag\n            const isQuantumFunction = this.isQuantumFunction;\n            this.isQuantumFunction = false;\n            // Handle\n            this.functionStack.unshift( { type: 'function', isQuantumFunction } ); // Push stack\n            if ( this.functionStack[ 0 ].isQuantumFunction ) {\n                node.isQuantumFunction = true;\n            }\n            // -------------------\n            const _node = super.parseFunction( node, statement, allowExpressionBody, isAsync, forInit );\n            // -------------------\n            this.functionStack.shift(); // Pop stack\n            return _node;\n        }\n\n        parseProperty( isPattern, refDestructuringErrors ) {\n            // Check and normalize flag\n            const isQuantumFunction = this.isQuantumFunction;\n            this.isQuantumFunction = false;\n            // Handle\n            this.functionStack.unshift( { type: 'property', isQuantumFunction } ); // Push stack\n            if ( this.type === tokTypes.starstar || this.isQuantumToekn() ) {\n                this.functionStack[ 0 ].isQuantumFunction = true;\n                super.nextToken();\n            }\n            // -------------------\n            const node = super.parseProperty( isPattern, refDestructuringErrors );\n            // -------------------\n            if ( this.functionStack[ 0 ].isQuantumFunction ) {\n                node.value.isQuantumFunction = true;\n            }\n            this.functionStack.shift(); // Pop stack\n            return node;\n        }\n\n        parseClassElement( constructorAllowsSuper ) {\n            // Check and normalize flag\n            const isQuantumFunction = this.isQuantumFunction;\n            this.isQuantumFunction = false;\n            // Handle\n            this.functionStack.unshift( { type: 'classElement', isQuantumFunction } ); // Push stack\n            if ( this.type === tokTypes.starstar || this.isQuantumToekn() ) {\n                this.functionStack[ 0 ].isQuantumFunction = true;\n                super.nextToken();\n            }\n            // -------------------\n            const node = super.parseClassElement( constructorAllowsSuper );\n            // -------------------\n            if ( this.functionStack[ 0 ].isQuantumFunction ) {\n                node.value.isQuantumFunction = true;\n            }\n            this.functionStack.shift(); // Pop stack\n            return node;\n        }\n\n    }\n} );\n", "// Astring is a tiny and fast JavaScript code generator from an ESTree-compliant AST.\n//\n// Astring was written by David Bonnet and released under an MIT license.\n//\n// The Git repository for Astring is available at:\n// https://github.com/davidbonnet/astring.git\n//\n// Please use the GitHub bug tracker to report issues:\n// https://github.com/davidbonnet/astring/issues\n\nconst { stringify } = JSON\n\n/* c8 ignore if */\nif (!String.prototype.repeat) {\n  /* c8 ignore next */\n  throw new Error(\n    'String.prototype.repeat is undefined, see https://github.com/davidbonnet/astring#installation',\n  )\n}\n\n/* c8 ignore if */\nif (!String.prototype.endsWith) {\n  /* c8 ignore next */\n  throw new Error(\n    'String.prototype.endsWith is undefined, see https://github.com/davidbonnet/astring#installation',\n  )\n}\n\nconst OPERATOR_PRECEDENCE = {\n  '||': 3,\n  '&&': 4,\n  '|': 5,\n  '??': 5,\n  '^': 6,\n  '&': 7,\n  '==': 8,\n  '!=': 8,\n  '===': 8,\n  '!==': 8,\n  '<': 9,\n  '>': 9,\n  '<=': 9,\n  '>=': 9,\n  in: 9,\n  instanceof: 9,\n  '<<': 10,\n  '>>': 10,\n  '>>>': 10,\n  '+': 11,\n  '-': 11,\n  '*': 12,\n  '%': 12,\n  '/': 12,\n  '**': 13,\n}\n\n// Enables parenthesis regardless of precedence\nexport const NEEDS_PARENTHESES = 17\n\nexport const EXPRESSIONS_PRECEDENCE = {\n  // Definitions\n  ArrayExpression: 20,\n  TaggedTemplateExpression: 20,\n  ThisExpression: 20,\n  Identifier: 20,\n  PrivateIdentifier: 20,\n  Literal: 18,\n  TemplateLiteral: 20,\n  Super: 20,\n  SequenceExpression: 20,\n  // Operations\n  MemberExpression: 19,\n  ChainExpression: 19,\n  CallExpression: 19,\n  NewExpression: 19,\n  // Other definitions\n  ArrowFunctionExpression: NEEDS_PARENTHESES,\n  ClassExpression: NEEDS_PARENTHESES,\n  FunctionExpression: NEEDS_PARENTHESES,\n  ObjectExpression: NEEDS_PARENTHESES,\n  // Other operations\n  UpdateExpression: 16,\n  UnaryExpression: 15,\n  AwaitExpression: 15,\n  BinaryExpression: 14,\n  LogicalExpression: 13,\n  ConditionalExpression: 4,\n  AssignmentExpression: 3,\n  YieldExpression: 2,\n  RestElement: 1,\n}\n\nfunction formatSequence(state, nodes) {\n  /*\n  Writes into `state` a sequence of `nodes`.\n  */\n  const { generator } = state\n  state.write('(')\n  if (nodes != null && nodes.length > 0) {\n    generator[nodes[0].type](nodes[0], state)\n    const { length } = nodes\n    for (let i = 1; i < length; i++) {\n      const param = nodes[i]\n      state.write(', ')\n      generator[param.type](param, state)\n    }\n  }\n  state.write(')')\n}\n\nfunction expressionNeedsParenthesis(state, node, parentNode, isRightHand) {\n  const nodePrecedence = state.expressionsPrecedence[node.type]\n  if (nodePrecedence === NEEDS_PARENTHESES) {\n    return true\n  }\n  const parentNodePrecedence = state.expressionsPrecedence[parentNode.type]\n  if (nodePrecedence !== parentNodePrecedence) {\n    // Different node types\n    return (\n      (!isRightHand &&\n        nodePrecedence === 15 &&\n        parentNodePrecedence === 14 &&\n        parentNode.operator === '**') ||\n      nodePrecedence < parentNodePrecedence\n    )\n  }\n  if (nodePrecedence !== 13 && nodePrecedence !== 14) {\n    // Not a `LogicalExpression` or `BinaryExpression`\n    return false\n  }\n  if (node.operator === '**' && parentNode.operator === '**') {\n    // Exponentiation operator has right-to-left associativity\n    return !isRightHand\n  }\n  if (isRightHand) {\n    // Parenthesis are used if both operators have the same precedence\n    return (\n      OPERATOR_PRECEDENCE[node.operator] <=\n      OPERATOR_PRECEDENCE[parentNode.operator]\n    )\n  }\n  return (\n    OPERATOR_PRECEDENCE[node.operator] <\n    OPERATOR_PRECEDENCE[parentNode.operator]\n  )\n}\n\nfunction formatExpression(state, node, parentNode, isRightHand) {\n  /*\n  Writes into `state` the provided `node`, adding parenthesis around if the provided `parentNode` needs it. If `node` is a right-hand argument, the provided `isRightHand` parameter should be `true`.\n  */\n  const { generator } = state\n  if (expressionNeedsParenthesis(state, node, parentNode, isRightHand)) {\n    state.write('(')\n    generator[node.type](node, state)\n    state.write(')')\n  } else {\n    generator[node.type](node, state)\n  }\n}\n\nfunction reindent(state, text, indent, lineEnd) {\n  /*\n  Writes into `state` the `text` string reindented with the provided `indent`.\n  */\n  const lines = text.split('\\n')\n  const end = lines.length - 1\n  state.write(lines[0].trim())\n  if (end > 0) {\n    state.write(lineEnd)\n    for (let i = 1; i < end; i++) {\n      state.write(indent + lines[i].trim() + lineEnd)\n    }\n    state.write(indent + lines[end].trim())\n  }\n}\n\nfunction formatComments(state, comments, indent, lineEnd) {\n  /*\n  Writes into `state` the provided list of `comments`, with the given `indent` and `lineEnd` strings.\n  Line comments will end with `\"\\n\"` regardless of the value of `lineEnd`.\n  Expects to start on a new unindented line.\n  */\n  const { length } = comments\n  for (let i = 0; i < length; i++) {\n    const comment = comments[i]\n    state.write(indent)\n    if (comment.type[0] === 'L') {\n      // Line comment\n      state.write('// ' + comment.value.trim() + '\\n', comment)\n    } else {\n      // Block comment\n      state.write('/*')\n      reindent(state, comment.value, indent, lineEnd)\n      state.write('*/' + lineEnd)\n    }\n  }\n}\n\nfunction hasCallExpression(node) {\n  /*\n  Returns `true` if the provided `node` contains a call expression and `false` otherwise.\n  */\n  let currentNode = node\n  while (currentNode != null) {\n    const { type } = currentNode\n    if (type[0] === 'C' && type[1] === 'a') {\n      // Is CallExpression\n      return true\n    } else if (type[0] === 'M' && type[1] === 'e' && type[2] === 'm') {\n      // Is MemberExpression\n      currentNode = currentNode.object\n    } else {\n      return false\n    }\n  }\n}\n\nfunction formatVariableDeclaration(state, node) {\n  /*\n  Writes into `state` a variable declaration.\n  */\n  const { generator } = state\n  const { declarations } = node\n  state.write(node.kind + ' ')\n  const { length } = declarations\n  if (length > 0) {\n    generator.VariableDeclarator(declarations[0], state)\n    for (let i = 1; i < length; i++) {\n      state.write(', ')\n      generator.VariableDeclarator(declarations[i], state)\n    }\n  }\n}\n\nlet ForInStatement,\n  FunctionDeclaration,\n  RestElement,\n  BinaryExpression,\n  ArrayExpression,\n  BlockStatement\n\nexport const GENERATOR = {\n  /*\n  Default generator.\n  */\n  Program(node, state) {\n    const indent = state.indent.repeat(state.indentLevel)\n    const { lineEnd, writeComments } = state\n    if (writeComments && node.comments != null) {\n      formatComments(state, node.comments, indent, lineEnd)\n    }\n    const statements = node.body\n    const { length } = statements\n    for (let i = 0; i < length; i++) {\n      const statement = statements[i]\n      if (writeComments && statement.comments != null) {\n        formatComments(state, statement.comments, indent, lineEnd)\n      }\n      state.write(indent)\n      this[statement.type](statement, state)\n      state.write(lineEnd)\n    }\n    if (writeComments && node.trailingComments != null) {\n      formatComments(state, node.trailingComments, indent, lineEnd)\n    }\n  },\n  BlockStatement: (BlockStatement = function (node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    const statementIndent = indent + state.indent\n    state.write('{')\n    const statements = node.body\n    if (statements != null && statements.length > 0) {\n      state.write(lineEnd)\n      if (writeComments && node.comments != null) {\n        formatComments(state, node.comments, statementIndent, lineEnd)\n      }\n      const { length } = statements\n      for (let i = 0; i < length; i++) {\n        const statement = statements[i]\n        if (writeComments && statement.comments != null) {\n          formatComments(state, statement.comments, statementIndent, lineEnd)\n        }\n        state.write(statementIndent)\n        this[statement.type](statement, state)\n        state.write(lineEnd)\n      }\n      state.write(indent)\n    } else {\n      if (writeComments && node.comments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.comments, statementIndent, lineEnd)\n        state.write(indent)\n      }\n    }\n    if (writeComments && node.trailingComments != null) {\n      formatComments(state, node.trailingComments, statementIndent, lineEnd)\n    }\n    state.write('}')\n    state.indentLevel--\n  }),\n  ClassBody: BlockStatement,\n  StaticBlock(node, state) {\n    state.write('static ')\n    this.BlockStatement(node, state)\n  },\n  EmptyStatement(node, state) {\n    state.write(';')\n  },\n  ExpressionStatement(node, state) {\n    const precedence = state.expressionsPrecedence[node.expression.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      (precedence === 3 && node.expression.left.type[0] === 'O')\n    ) {\n      // Should always have parentheses or is an AssignmentExpression to an ObjectPattern\n      state.write('(')\n      this[node.expression.type](node.expression, state)\n      state.write(')')\n    } else {\n      this[node.expression.type](node.expression, state)\n    }\n    state.write(';')\n  },\n  IfStatement(node, state) {\n    state.write('if (')\n    this[node.test.type](node.test, state)\n    state.write(') ')\n    this[node.consequent.type](node.consequent, state)\n    if (node.alternate != null) {\n      state.write(' else ')\n      this[node.alternate.type](node.alternate, state)\n    }\n  },\n  LabeledStatement(node, state) {\n    this[node.label.type](node.label, state)\n    state.write(': ')\n    this[node.body.type](node.body, state)\n  },\n  BreakStatement(node, state) {\n    state.write('break')\n    if (node.label != null) {\n      state.write(' ')\n      this[node.label.type](node.label, state)\n    }\n    state.write(';')\n  },\n  ContinueStatement(node, state) {\n    state.write('continue')\n    if (node.label != null) {\n      state.write(' ')\n      this[node.label.type](node.label, state)\n    }\n    state.write(';')\n  },\n  WithStatement(node, state) {\n    state.write('with (')\n    this[node.object.type](node.object, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  SwitchStatement(node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    state.indentLevel++\n    const caseIndent = indent + state.indent\n    const statementIndent = caseIndent + state.indent\n    state.write('switch (')\n    this[node.discriminant.type](node.discriminant, state)\n    state.write(') {' + lineEnd)\n    const { cases: occurences } = node\n    const { length: occurencesCount } = occurences\n    for (let i = 0; i < occurencesCount; i++) {\n      const occurence = occurences[i]\n      if (writeComments && occurence.comments != null) {\n        formatComments(state, occurence.comments, caseIndent, lineEnd)\n      }\n      if (occurence.test) {\n        state.write(caseIndent + 'case ')\n        this[occurence.test.type](occurence.test, state)\n        state.write(':' + lineEnd)\n      } else {\n        state.write(caseIndent + 'default:' + lineEnd)\n      }\n      const { consequent } = occurence\n      const { length: consequentCount } = consequent\n      for (let i = 0; i < consequentCount; i++) {\n        const statement = consequent[i]\n        if (writeComments && statement.comments != null) {\n          formatComments(state, statement.comments, statementIndent, lineEnd)\n        }\n        state.write(statementIndent)\n        this[statement.type](statement, state)\n        state.write(lineEnd)\n      }\n    }\n    state.indentLevel -= 2\n    state.write(indent + '}')\n  },\n  ReturnStatement(node, state) {\n    state.write('return')\n    if (node.argument) {\n      state.write(' ')\n      this[node.argument.type](node.argument, state)\n    }\n    state.write(';')\n  },\n  ThrowStatement(node, state) {\n    state.write('throw ')\n    this[node.argument.type](node.argument, state)\n    state.write(';')\n  },\n  TryStatement(node, state) {\n    state.write('try ')\n    this[node.block.type](node.block, state)\n    if (node.handler) {\n      const { handler } = node\n      if (handler.param == null) {\n        state.write(' catch ')\n      } else {\n        state.write(' catch (')\n        this[handler.param.type](handler.param, state)\n        state.write(') ')\n      }\n      this[handler.body.type](handler.body, state)\n    }\n    if (node.finalizer) {\n      state.write(' finally ')\n      this[node.finalizer.type](node.finalizer, state)\n    }\n  },\n  WhileStatement(node, state) {\n    state.write('while (')\n    this[node.test.type](node.test, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  DoWhileStatement(node, state) {\n    state.write('do ')\n    this[node.body.type](node.body, state)\n    state.write(' while (')\n    this[node.test.type](node.test, state)\n    state.write(');')\n  },\n  ForStatement(node, state) {\n    state.write('for (')\n    if (node.init != null) {\n      const { init } = node\n      if (init.type[0] === 'V') {\n        formatVariableDeclaration(state, init)\n      } else {\n        this[init.type](init, state)\n      }\n    }\n    state.write('; ')\n    if (node.test) {\n      this[node.test.type](node.test, state)\n    }\n    state.write('; ')\n    if (node.update) {\n      this[node.update.type](node.update, state)\n    }\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  },\n  ForInStatement: (ForInStatement = function (node, state) {\n    state.write(`for ${node.await ? 'await ' : ''}(`)\n    const { left } = node\n    if (left.type[0] === 'V') {\n      formatVariableDeclaration(state, left)\n    } else {\n      this[left.type](left, state)\n    }\n    // Identifying whether node.type is `ForInStatement` or `ForOfStatement`\n    state.write(node.type[3] === 'I' ? ' in ' : ' of ')\n    this[node.right.type](node.right, state)\n    state.write(') ')\n    this[node.body.type](node.body, state)\n  }),\n  ForOfStatement: ForInStatement,\n  DebuggerStatement(node, state) {\n    state.write('debugger;', node)\n  },\n  FunctionDeclaration: (FunctionDeclaration = function (node, state) {\n    state.write(\n      (node.async ? 'async ' : '') +\n        (node.generator ? 'function* ' : 'function ') +\n        (node.id ? node.id.name : ''),\n      node,\n    )\n    formatSequence(state, node.params)\n    state.write(' ')\n    this[node.body.type](node.body, state)\n  }),\n  FunctionExpression: FunctionDeclaration,\n  VariableDeclaration(node, state) {\n    formatVariableDeclaration(state, node)\n    state.write(';')\n  },\n  VariableDeclarator(node, state) {\n    this[node.id.type](node.id, state)\n    if (node.init != null) {\n      state.write(' = ')\n      this[node.init.type](node.init, state)\n    }\n  },\n  ClassDeclaration(node, state) {\n    state.write('class ' + (node.id ? `${node.id.name} ` : ''), node)\n    if (node.superClass) {\n      state.write('extends ')\n      const { superClass } = node\n      const { type } = superClass\n      const precedence = state.expressionsPrecedence[type]\n      if (\n        (type[0] !== 'C' || type[1] !== 'l' || type[5] !== 'E') &&\n        (precedence === NEEDS_PARENTHESES ||\n          precedence < state.expressionsPrecedence.ClassExpression)\n      ) {\n        // Not a ClassExpression that needs parentheses\n        state.write('(')\n        this[node.superClass.type](superClass, state)\n        state.write(')')\n      } else {\n        this[superClass.type](superClass, state)\n      }\n      state.write(' ')\n    }\n    this.ClassBody(node.body, state)\n  },\n  ImportDeclaration(node, state) {\n    state.write('import ')\n    const { specifiers } = node\n    const { length } = specifiers\n    // TODO: Once babili is fixed, put this after condition\n    // https://github.com/babel/babili/issues/430\n    let i = 0\n    if (length > 0) {\n      for (; i < length; ) {\n        if (i > 0) {\n          state.write(', ')\n        }\n        const specifier = specifiers[i]\n        const type = specifier.type[6]\n        if (type === 'D') {\n          // ImportDefaultSpecifier\n          state.write(specifier.local.name, specifier)\n          i++\n        } else if (type === 'N') {\n          // ImportNamespaceSpecifier\n          state.write('* as ' + specifier.local.name, specifier)\n          i++\n        } else {\n          // ImportSpecifier\n          break\n        }\n      }\n      if (i < length) {\n        state.write('{')\n        for (;;) {\n          const specifier = specifiers[i]\n          const { name } = specifier.imported\n          state.write(name, specifier)\n          if (name !== specifier.local.name) {\n            state.write(' as ' + specifier.local.name)\n          }\n          if (++i < length) {\n            state.write(', ')\n          } else {\n            break\n          }\n        }\n        state.write('}')\n      }\n      state.write(' from ')\n    }\n    this.Literal(node.source, state)\n    state.write(';')\n  },\n  ImportExpression(node, state) {\n    state.write('import(')\n    this[node.source.type](node.source, state)\n    state.write(')')\n  },\n  ExportDefaultDeclaration(node, state) {\n    state.write('export default ')\n    this[node.declaration.type](node.declaration, state)\n    if (\n      state.expressionsPrecedence[node.declaration.type] != null &&\n      node.declaration.type[0] !== 'F'\n    ) {\n      // All expression nodes except `FunctionExpression`\n      state.write(';')\n    }\n  },\n  ExportNamedDeclaration(node, state) {\n    state.write('export ')\n    if (node.declaration) {\n      this[node.declaration.type](node.declaration, state)\n    } else {\n      state.write('{')\n      const { specifiers } = node,\n        { length } = specifiers\n      if (length > 0) {\n        for (let i = 0; ; ) {\n          const specifier = specifiers[i]\n          const { name } = specifier.local\n          state.write(name, specifier)\n          if (name !== specifier.exported.name) {\n            state.write(' as ' + specifier.exported.name)\n          }\n          if (++i < length) {\n            state.write(', ')\n          } else {\n            break\n          }\n        }\n      }\n      state.write('}')\n      if (node.source) {\n        state.write(' from ')\n        this.Literal(node.source, state)\n      }\n      state.write(';')\n    }\n  },\n  ExportAllDeclaration(node, state) {\n    if (node.exported != null) {\n      state.write('export * as ' + node.exported.name + ' from ')\n    } else {\n      state.write('export * from ')\n    }\n    this.Literal(node.source, state)\n    state.write(';')\n  },\n  MethodDefinition(node, state) {\n    if (node.static) {\n      state.write('static ')\n    }\n    const kind = node.kind[0]\n    if (kind === 'g' || kind === 's') {\n      // Getter or setter\n      state.write(node.kind + ' ')\n    }\n    if (node.value.async) {\n      state.write('async ')\n    }\n    if (node.value.generator) {\n      state.write('*')\n    }\n    if (node.computed) {\n      state.write('[')\n      this[node.key.type](node.key, state)\n      state.write(']')\n    } else {\n      this[node.key.type](node.key, state)\n    }\n    formatSequence(state, node.value.params)\n    state.write(' ')\n    this[node.value.body.type](node.value.body, state)\n  },\n  ClassExpression(node, state) {\n    this.ClassDeclaration(node, state)\n  },\n  ArrowFunctionExpression(node, state) {\n    state.write(node.async ? 'async ' : '', node)\n    const { params } = node\n    if (params != null) {\n      // Omit parenthesis if only one named parameter\n      if (params.length === 1 && params[0].type[0] === 'I') {\n        // If params[0].type[0] starts with 'I', it can't be `ImportDeclaration` nor `IfStatement` and thus is `Identifier`\n        state.write(params[0].name, params[0])\n      } else {\n        formatSequence(state, node.params)\n      }\n    }\n    state.write(' => ')\n    if (node.body.type[0] === 'O') {\n      // Body is an object expression\n      state.write('(')\n      this.ObjectExpression(node.body, state)\n      state.write(')')\n    } else {\n      this[node.body.type](node.body, state)\n    }\n  },\n  ThisExpression(node, state) {\n    state.write('this', node)\n  },\n  Super(node, state) {\n    state.write('super', node)\n  },\n  RestElement: (RestElement = function (node, state) {\n    state.write('...')\n    this[node.argument.type](node.argument, state)\n  }),\n  SpreadElement: RestElement,\n  YieldExpression(node, state) {\n    state.write(node.delegate ? 'yield*' : 'yield')\n    if (node.argument) {\n      state.write(' ')\n      this[node.argument.type](node.argument, state)\n    }\n  },\n  AwaitExpression(node, state) {\n    state.write('await ', node)\n    formatExpression(state, node.argument, node)\n  },\n  TemplateLiteral(node, state) {\n    const { quasis, expressions } = node\n    state.write('`')\n    const { length } = expressions\n    for (let i = 0; i < length; i++) {\n      const expression = expressions[i]\n      const quasi = quasis[i]\n      state.write(quasi.value.raw, quasi)\n      state.write('${')\n      this[expression.type](expression, state)\n      state.write('}')\n    }\n    const quasi = quasis[quasis.length - 1]\n    state.write(quasi.value.raw, quasi)\n    state.write('`')\n  },\n  TemplateElement(node, state) {\n    state.write(node.value.raw, node)\n  },\n  TaggedTemplateExpression(node, state) {\n    formatExpression(state, node.tag, node)\n    this[node.quasi.type](node.quasi, state)\n  },\n  ArrayExpression: (ArrayExpression = function (node, state) {\n    state.write('[')\n    if (node.elements.length > 0) {\n      const { elements } = node,\n        { length } = elements\n      for (let i = 0; ; ) {\n        const element = elements[i]\n        if (element != null) {\n          this[element.type](element, state)\n        }\n        if (++i < length) {\n          state.write(', ')\n        } else {\n          if (element == null) {\n            state.write(', ')\n          }\n          break\n        }\n      }\n    }\n    state.write(']')\n  }),\n  ArrayPattern: ArrayExpression,\n  ObjectExpression(node, state) {\n    const indent = state.indent.repeat(state.indentLevel++)\n    const { lineEnd, writeComments } = state\n    const propertyIndent = indent + state.indent\n    state.write('{')\n    if (node.properties.length > 0) {\n      state.write(lineEnd)\n      if (writeComments && node.comments != null) {\n        formatComments(state, node.comments, propertyIndent, lineEnd)\n      }\n      const comma = ',' + lineEnd\n      const { properties } = node,\n        { length } = properties\n      for (let i = 0; ; ) {\n        const property = properties[i]\n        if (writeComments && property.comments != null) {\n          formatComments(state, property.comments, propertyIndent, lineEnd)\n        }\n        state.write(propertyIndent)\n        this[property.type](property, state)\n        if (++i < length) {\n          state.write(comma)\n        } else {\n          break\n        }\n      }\n      state.write(lineEnd)\n      if (writeComments && node.trailingComments != null) {\n        formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n      }\n      state.write(indent + '}')\n    } else if (writeComments) {\n      if (node.comments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.comments, propertyIndent, lineEnd)\n        if (node.trailingComments != null) {\n          formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n        }\n        state.write(indent + '}')\n      } else if (node.trailingComments != null) {\n        state.write(lineEnd)\n        formatComments(state, node.trailingComments, propertyIndent, lineEnd)\n        state.write(indent + '}')\n      } else {\n        state.write('}')\n      }\n    } else {\n      state.write('}')\n    }\n    state.indentLevel--\n  },\n  Property(node, state) {\n    if (node.method || node.kind[0] !== 'i') {\n      // Either a method or of kind `set` or `get` (not `init`)\n      this.MethodDefinition(node, state)\n    } else {\n      if (!node.shorthand) {\n        if (node.computed) {\n          state.write('[')\n          this[node.key.type](node.key, state)\n          state.write(']')\n        } else {\n          this[node.key.type](node.key, state)\n        }\n        state.write(': ')\n      }\n      this[node.value.type](node.value, state)\n    }\n  },\n  PropertyDefinition(node, state) {\n    if (node.static) {\n      state.write('static ')\n    }\n    this[node.key.type](node.key, state)\n    if (node.value == null) {\n      return\n    }\n    state.write(' = ')\n    this[node.value.type](node.value, state)\n  },\n  ObjectPattern(node, state) {\n    state.write('{')\n    if (node.properties.length > 0) {\n      const { properties } = node,\n        { length } = properties\n      for (let i = 0; ; ) {\n        this[properties[i].type](properties[i], state)\n        if (++i < length) {\n          state.write(', ')\n        } else {\n          break\n        }\n      }\n    }\n    state.write('}')\n  },\n  SequenceExpression(node, state) {\n    formatSequence(state, node.expressions)\n  },\n  UnaryExpression(node, state) {\n    if (node.prefix) {\n      const {\n        operator,\n        argument,\n        argument: { type },\n      } = node\n      state.write(operator)\n      const needsParentheses = expressionNeedsParenthesis(state, argument, node)\n      if (\n        !needsParentheses &&\n        (operator.length > 1 ||\n          (type[0] === 'U' &&\n            (type[1] === 'n' || type[1] === 'p') &&\n            argument.prefix &&\n            argument.operator[0] === operator &&\n            (operator === '+' || operator === '-')))\n      ) {\n        // Large operator or argument is UnaryExpression or UpdateExpression node\n        state.write(' ')\n      }\n      if (needsParentheses) {\n        state.write(operator.length > 1 ? ' (' : '(')\n        this[type](argument, state)\n        state.write(')')\n      } else {\n        this[type](argument, state)\n      }\n    } else {\n      // FIXME: This case never occurs\n      this[node.argument.type](node.argument, state)\n      state.write(node.operator)\n    }\n  },\n  UpdateExpression(node, state) {\n    // Always applied to identifiers or members, no parenthesis check needed\n    if (node.prefix) {\n      state.write(node.operator)\n      this[node.argument.type](node.argument, state)\n    } else {\n      this[node.argument.type](node.argument, state)\n      state.write(node.operator)\n    }\n  },\n  AssignmentExpression(node, state) {\n    this[node.left.type](node.left, state)\n    state.write(' ' + node.operator + ' ')\n    this[node.right.type](node.right, state)\n  },\n  AssignmentPattern(node, state) {\n    this[node.left.type](node.left, state)\n    state.write(' = ')\n    this[node.right.type](node.right, state)\n  },\n  BinaryExpression: (BinaryExpression = function (node, state) {\n    const isIn = node.operator === 'in'\n    if (isIn) {\n      // Avoids confusion in `for` loops initializers\n      state.write('(')\n    }\n    formatExpression(state, node.left, node, false)\n    state.write(' ' + node.operator + ' ')\n    formatExpression(state, node.right, node, true)\n    if (isIn) {\n      state.write(')')\n    }\n  }),\n  LogicalExpression: BinaryExpression,\n  ConditionalExpression(node, state) {\n    const { test } = node\n    const precedence = state.expressionsPrecedence[test.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence <= state.expressionsPrecedence.ConditionalExpression\n    ) {\n      state.write('(')\n      this[test.type](test, state)\n      state.write(')')\n    } else {\n      this[test.type](test, state)\n    }\n    state.write(' ? ')\n    this[node.consequent.type](node.consequent, state)\n    state.write(' : ')\n    this[node.alternate.type](node.alternate, state)\n  },\n  NewExpression(node, state) {\n    state.write('new ')\n    const precedence = state.expressionsPrecedence[node.callee.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.CallExpression ||\n      hasCallExpression(node.callee)\n    ) {\n      state.write('(')\n      this[node.callee.type](node.callee, state)\n      state.write(')')\n    } else {\n      this[node.callee.type](node.callee, state)\n    }\n    formatSequence(state, node['arguments'])\n  },\n  CallExpression(node, state) {\n    const precedence = state.expressionsPrecedence[node.callee.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.CallExpression\n    ) {\n      state.write('(')\n      this[node.callee.type](node.callee, state)\n      state.write(')')\n    } else {\n      this[node.callee.type](node.callee, state)\n    }\n    if (node.optional) {\n      state.write('?.')\n    }\n    formatSequence(state, node['arguments'])\n  },\n  ChainExpression(node, state) {\n    this[node.expression.type](node.expression, state)\n  },\n  MemberExpression(node, state) {\n    const precedence = state.expressionsPrecedence[node.object.type]\n    if (\n      precedence === NEEDS_PARENTHESES ||\n      precedence < state.expressionsPrecedence.MemberExpression\n    ) {\n      state.write('(')\n      this[node.object.type](node.object, state)\n      state.write(')')\n    } else {\n      this[node.object.type](node.object, state)\n    }\n    if (node.computed) {\n      if (node.optional) {\n        state.write('?.')\n      }\n      state.write('[')\n      this[node.property.type](node.property, state)\n      state.write(']')\n    } else {\n      if (node.optional) {\n        state.write('?.')\n      } else {\n        state.write('.')\n      }\n      this[node.property.type](node.property, state)\n    }\n  },\n  MetaProperty(node, state) {\n    state.write(node.meta.name + '.' + node.property.name, node)\n  },\n  Identifier(node, state) {\n    state.write(node.name, node)\n  },\n  PrivateIdentifier(node, state) {\n    state.write(`#${node.name}`, node)\n  },\n  Literal(node, state) {\n    if (node.raw != null) {\n      // Non-standard property\n      state.write(node.raw, node)\n    } else if (node.regex != null) {\n      this.RegExpLiteral(node, state)\n    } else if (node.bigint != null) {\n      state.write(node.bigint + 'n', node)\n    } else {\n      state.write(stringify(node.value), node)\n    }\n  },\n  RegExpLiteral(node, state) {\n    const { regex } = node\n    state.write(`/${regex.pattern}/${regex.flags}`, node)\n  },\n}\n\nconst EMPTY_OBJECT = {}\n\n/*\nDEPRECATED: Alternate export of `GENERATOR`.\n*/\nexport const baseGenerator = GENERATOR\n\nclass State {\n  constructor(options) {\n    const setup = options == null ? EMPTY_OBJECT : options\n    this.output = ''\n    // Functional options\n    if (setup.output != null) {\n      this.output = setup.output\n      this.write = this.writeToStream\n    } else {\n      this.output = ''\n    }\n    this.generator = setup.generator != null ? setup.generator : GENERATOR\n    this.expressionsPrecedence =\n      setup.expressionsPrecedence != null\n        ? setup.expressionsPrecedence\n        : EXPRESSIONS_PRECEDENCE\n    // Formating setup\n    this.indent = setup.indent != null ? setup.indent : '  '\n    this.lineEnd = setup.lineEnd != null ? setup.lineEnd : '\\n'\n    this.indentLevel =\n      setup.startingIndentLevel != null ? setup.startingIndentLevel : 0\n    this.writeComments = setup.comments ? setup.comments : false\n    // Source map\n    if (setup.sourceMap != null) {\n      this.write =\n        setup.output == null ? this.writeAndMap : this.writeToStreamAndMap\n      this.sourceMap = setup.sourceMap\n      this.line = 1\n      this.column = 0\n      this.lineEndSize = this.lineEnd.split('\\n').length - 1\n      this.mapping = {\n        original: null,\n        // Uses the entire state to avoid generating ephemeral objects\n        generated: this,\n        name: undefined,\n        source: setup.sourceMap.file || setup.sourceMap._file,\n      }\n    }\n  }\n\n  write(code) {\n    this.output += code\n  }\n\n  writeToStream(code) {\n    this.output.write(code)\n  }\n\n  writeAndMap(code, node) {\n    this.output += code\n    this.map(code, node)\n  }\n\n  writeToStreamAndMap(code, node) {\n    this.output.write(code)\n    this.map(code, node)\n  }\n\n  map(code, node) {\n    if (node != null) {\n      const { type } = node\n      if (type[0] === 'L' && type[2] === 'n') {\n        // LineComment\n        this.column = 0\n        this.line++\n        return\n      }\n      if (node.loc != null) {\n        const { mapping } = this\n        mapping.original = node.loc.start\n        mapping.name = node.name\n        this.sourceMap.addMapping(mapping)\n      }\n      if (\n        (type[0] === 'T' && type[8] === 'E') ||\n        (type[0] === 'L' && type[1] === 'i' && typeof node.value === 'string')\n      ) {\n        // TemplateElement or Literal string node\n        const { length } = code\n        let { column, line } = this\n        for (let i = 0; i < length; i++) {\n          if (code[i] === '\\n') {\n            column = 0\n            line++\n          } else {\n            column++\n          }\n        }\n        this.column = column\n        this.line = line\n        return\n      }\n    }\n    const { length } = code\n    const { lineEnd } = this\n    if (length > 0) {\n      if (\n        this.lineEndSize > 0 &&\n        (lineEnd.length === 1\n          ? code[length - 1] === lineEnd\n          : code.endsWith(lineEnd))\n      ) {\n        this.line += this.lineEndSize\n        this.column = 0\n      } else {\n        this.column += length\n      }\n    }\n  }\n\n  toString() {\n    return this.output\n  }\n}\n\nexport function generate(node, options) {\n  /*\n  Returns a string representing the rendered code of the provided AST `node`.\n  The `options` are:\n\n  - `indent`: string to use for indentation (defaults to `\u2423\u2423`)\n  - `lineEnd`: string to use for line endings (defaults to `\\n`)\n  - `startingIndentLevel`: indent level to start from (defaults to `0`)\n  - `comments`: generate comments if `true` (defaults to `false`)\n  - `output`: output stream to write the rendered code to (defaults to `null`)\n  - `generator`: custom code generator (defaults to `GENERATOR`)\n  - `expressionsPrecedence`: custom map of node types and their precedence level (defaults to `EXPRESSIONS_PRECEDENCE`)\n  */\n  const state = new State(options)\n  // Travel through the AST node and generate the code\n  state.generator[node.type](node, state)\n  return state.output\n}\n", "\nexport default class $qIdentifier {\n\n    type = 'Identifier';\n    whitelist = [];\n    blacklist = [];\n\n    constructor( name ) {\n        this.whitelist[ 0 ] = name;\n    }\n\n    get name() { return this.whitelist[ 0 ]; }\n\n    noConflict( name ) {\n        const i = this.whitelist.indexOf( name );\n        if ( i === -1 ) return false;\n        this.blacklist.push( this.whitelist.splice( i, 1 ) );\n        if ( !this.whitelist.length ) {\n            this.whitelist = this.blacklist.map( name => {\n                let newVar;\n                do {\n                    let randChar = String.fromCharCode( 0 | Math.random() *26 +97 );\n                    newVar = `${ name }${ randChar }`;\n                } while ( this.blacklist.includes( newVar ) );\n                return newVar;\n            });\n        }\n    }\n\n}", "\nexport default {\n\n    // Statements & Clauses\n    throwStmt( argument ) { return { type: 'ThrowStatement', argument }; },\n    tryStmt( block, handler, finalizer, guardedHandlers ) { return { type: 'TryStatement', block, handler, finalizer, guardedHandlers }; },\n    catchClause( param, body ) { return { type: 'CatchClause', param, body }; },\n    exprStmt( expression ) { return { type: 'ExpressionStatement', expression, }; },\n    blockStmt( body ) { return { type: 'BlockStatement', body }; },\n    labeledStmt( label, body ) { return { type: 'LabeledStatement', label, body }; },\n    withStmt( object, body ) { return { type: 'WithStatement', object, body }; },\n    ifStmt( test, consequent, alternate ) { return this.conditionalExpr(test, consequent, alternate, 'IfStatement'); },\n    switchStmt( discriminant, cases, lexical = false ) { return { type: 'SwitchStatement', discriminant, cases, /*lexical*/ /* Failing tests and seems to be SpiderMonkey-specific*/ }; },\n    switchCase( test, consequent ) { return { type: 'SwitchCase', test, consequent }; },\n    whileStmt( test, body ) { return { type: 'WhileStatement', test, body }; },\n    doWhileStmt( test, body ) { return { type: 'DoWhileStatement', test, body }; },\n    forStmt( init, test, update, body ) { return { type: 'ForStatement', init, test, update, body }; },\n    forInStmt( left, right, body ) { return { type: 'ForInStatement', left, right, body }; },\n    forOfStmt( left, right, body ) { return { type: 'ForOfStatement', left, right, body }; },\n    breakStmt( label = null ) { return { type: 'BreakStatement', label }; },\n    continueStmt( label = null ) { return { type: 'ContinueStatement', label }; },\n    returnStmt( argument ) { return { type: 'ReturnStatement', argument }; },\n    yieldExpr( argument, delegate = false ) { return { type: 'YieldExpression', argument, delegate }; },\n    awaitExpr( argument ) { return { type: 'AwaitExpression', argument }; },\n\n    // Declarations\n    varDeclaration( kind, declarations ) { return { type: 'VariableDeclaration', kind, declarations } },\n    varDeclarator( id, init = null ) { return { type: 'VariableDeclarator', id, init } },\n    funcDeclaration( id, params, body, async = false, expression = false, generator = false ) {\n        return this.func( 'FunctionDeclaration', ...arguments );\n    },\n\n    // Expressions\n    sequenceExpr( expressions ) { return { type: 'SequenceExpression', expressions }; },\n    parensExpr( expression ) { return { type: 'ParenthesizedExpression', expression }; },\n    logicalExpr( operator, left, right ) { return { type: 'LogicalExpression', operator, left, right, }; },\n    binaryExpr( operator, left, right ) { return { type: 'BinaryExpression', operator, left, right, }; },\n    unaryExpr( operator, argument, prefix = true ) { return { type: 'UnaryExpression', operator, argument, prefix }; },\n    updateExpr( operator, argument, prefix = false ) { return { type: 'UpdateExpression', operator, argument, prefix }; },\n    assignmentExpr( left, right, operator = '=' ) { return { type: 'AssignmentExpression', operator, left, right }; },\n    assignmentPattern( left, right ) { return { type: 'AssignmentPattern', left, right }; },\n    thisExpr() { return { type: 'ThisExpression' }; },\n    conditionalExpr( test, consequent, alternate, type = 'ConditionalExpression' ) { return { type, test, consequent, alternate }; },\n    arrayExpr( elements ) { return { type: 'ArrayExpression', elements }; },\n    arrayPattern( elements ) { return { type: 'ArrayPattern', elements }; },\n    objectExpr( properties ) { return { type: 'ObjectExpression', properties }; },\n    objectPattern( properties ) { return { type: 'ObjectPattern', properties }; },\n    chainExpr( expression ) { return { type: 'ChainExpression', expression }; },\n    callExpr( callee, args, optional = false ) { return { type: 'CallExpression', callee, arguments: args, optional }; },\n    newExpr( callee, args ) { return { type: 'NewExpression', callee, arguments: args }; },\n    taggedTemplateExpr( tag, quasi ) { return { type: 'TaggedTemplateExpression', tag, quasi }; },\n    memberExpr( object, property, computed = false, optional = false ) {\n        return { type: 'MemberExpression', object, property, computed, optional };\n    },\n    funcExpr( id, params, body, async = false, expression = false, generator = false ) {\n        return this.func( 'FunctionExpression', ...arguments );\n    },\n    arrowFuncExpr( id, params, body, async = false, expression = false, generator = false ) {\n        return this.func( 'ArrowFunctionExpression', ...arguments );\n    },\n    // Other\n    func( type, id, params, body, async = false, expression = false, generator = false ) {\n        return { type, id, params, body, async, expression, generator, };\n    },\n    identifier( name ) { return { type: 'Identifier', name }; },\n    property( key, value, kind = 'init', shorthand = false, computed = false, method = false ) { return { type: 'Property', key, value, kind, shorthand, computed, method }; },\n\n    classDeclaration( id, body, superClass = null ) { return this.class( 'ClassDeclaration', ...arguments ); },\n    classExpression( id, body, superClass = null ) { return this.class( 'ClassExpression', ...arguments ); },\n    class( type, id, body, superClass = null ) { return { type, id, body, superClass }; },\n    methodDefinition( key, value, kind = 'method', $static = false, computed = false ) { return { type: 'MethodDefinition', key, value, kind, static: $static, computed }; },\n    propertyDefinition( key, value, $static = false, computed = false ) { return { type: 'PropertyDefinition', key, value, static: $static, computed }; },\n    \n    spreadElement( argument ) { return { type: 'SpreadElement', argument }; },\n    literal( value ) {\n        if ( typeof value === 'object' && !( 'name' in value )  && !( 'value' in value ) ) throw new Error( `Objects that convert to literals must have a \"name\" or \"value\" property.` );\n        return typeof value === 'object' ? { type: 'Literal', get value() { return 'name' in value ? value.name : value.value } } : { type: 'Literal', value };\n    },\n    templateLiteral( quasis, expressions ) { return { type: 'TemplateLiteral', quasis, expressions }; },\n\n    comments( comments ) {\n        const valueObject = {};\n        Object.defineProperty( valueObject, 'toString', { value: () => comments } );\n        Object.defineProperty( valueObject, 'trim', { value: function() {\n            return this.toString();\n        } } );\n        return [ { type: 'Line', value: valueObject, } ];\n    },\n\n    withLoc( target, ...sources ) {\n        [ 'start', 'end' ].forEach( offset => {\n            const sourceNode = offset === 'start' ? sources[ 0 ] : sources[ sources.length - 1 ];\n            target[ offset ] = sourceNode[ offset ];\n            if ( sourceNode.loc ) {\n                target.loc = target.loc || {};\n                target.loc[ offset ] = sourceNode.loc?.[ offset ];\n            }\n        } );\n        return target;\n    },\n\n    // Util\n    invert( expr ) { return this.unaryExpr( '!', expr ); },\n    clone( expr ) {\n        expr = { ...expr };\n        delete expr.start;\n        delete expr.end;\n        return expr;\n    },\n\n}", "import Node from \"./Node.js\";\n\nexport default class $qDownstream {\n\n    type = 'BlockStatement';\n    $body = [];\n    \n    constructor( nodes ) { this.body = nodes; }\n\n    get body() { return this.$body; }\n    set body( nodes ) {\n        this.$body = nodes;\n        Node.withLoc( this, ...nodes );\n    }\n\n}", "/**\n * @imports\n */\nimport $qIdentifier from \"./$qIdentifier.js\";\nimport Node from './Node.js';\n\n/**\n * @Scope\n */\nexport default class Scope {\n\n    constructor( context, { type } ) {\n        this.context = context;\n        Object.assign( this, { type } );\n        this.vars = new Set;\n        this.$qIdentifiers = new Map;\n        this.$qIdentifiersCursors = { ...( this.context?.$qIdentifiersCursors || {} ) };\n        this.locations = [];\n    }\n\n    index( node, withLineColumn = false ) {\n        if ( !this.type.includes( 'Function' ) && this.context ) return this.context.index( ...arguments );\n        const locations = [ 'start', 'end' ].map( offset => {\n            const elements = [ Node.literal( node[ offset ] ) ];\n            if ( withLineColumn && node.loc ) {\n                elements.push( Node.literal( node.loc[ offset ].line ) );\n                elements.push( Node.literal( node.loc[ offset ].column ) );\n            }\n            return Node.arrayExpr( elements );\n        } );\n        this.locations.push( Node.arrayExpr( locations ) );\n        return Node.literal( this.locations.length - 1 );\n    }\n\n    get$qIdentifier( name, globally = true, random = false ) {\n        let identifer = this.$qIdentifiers.get( name );\n        if ( !identifer ) {\n            if ( globally && this.context ) return this.context.get$qIdentifier( name, globally );\n            if ( random ) {\n                if ( typeof this.$qIdentifiersCursors[ name ] === 'undefined' ) { this.$qIdentifiersCursors[ name ] = 0; }\n                name += ( this.$qIdentifiersCursors[ name ] ++ );\n            }\n            this.$qIdentifiers.set( name, identifer = new $qIdentifier( name ) );\n        }\n        return identifer;\n    }\n\n    getRandomIdentifier( name, globally = true ) {\n        return this.get$qIdentifier( name, globally, true );\n    }\n\n    $qIdentifiersNoConflict( name ) {\n        for ( let [ , identifer ] of this.$qIdentifiers ) { identifer.noConflict( name );  }\n        this.context && this.context.$qIdentifiersNoConflict( name );\n    }\n\n    push( identifier, type, willUpdate = false ) {\n        let def;\n        if ( [ 'var', 'update' ].includes( type ) && ( def = this.find( identifier, false ) ) && def.type !== 'const' ) {\n            def.willUpdate = true;\n        } else if ( type !== 'update' || !this.context ) {\n            if ( !( identifier instanceof $qIdentifier ) ) {\n                this.$qIdentifiersNoConflict( identifier.name + '' );\n            }\n            this.vars.add( { identifier, type, willUpdate: willUpdate || type === 'update' } );\n        }\n        if ( this.context && ( type === 'update' || ( type === 'var' && !this.type.includes( 'Function' ) ) ) ) {\n            return this.context.push( identifier, type );\n        }\n        return true;\n    }\n\n    find( identifier, globally = true ) {\n        let def;\n        for ( const _var of this.vars ) {\n            if ( _var.identifier.name + '' === identifier.name + '' ) { def = _var; break; }\n        }\n        if ( !def && globally ) return this.context?.find( identifier, globally );\n        return def;\n    }\n\n}\n", "\n/**\n * @imports\n */\nimport { generate as astringGenerate } from 'astring';\nimport $qIdentifier from './$qIdentifier.js';\nimport $qDownstream from './$qDownstream.js';\nimport Scope from './Scope.js';\nimport Node from './Node.js';\n\n/**\n * NICE TO HAVES: leaner output via heuristics\n */\nexport default class Compiler {\n\n    history = [];\n    scopes = [];\n    functionTypes = [ 'FunctionDeclaration', 'FunctionExpression', 'ArrowFunctionExpression' ];\n    loopTypes = [ 'DoWhileStatement', 'WhileStatement', 'ForStatement', 'ForOfStatement', 'ForInStatement' ];\n    labeledTypes = [ 'SwitchStatement', 'LabeledStatement' ];\n    topLevelAwait = false;\n    topLevelArgsKeyword = false;\n\n    constructor( params = {} ) {\n        this.params = params;\n    }\n\n    pushScope( scopeData, callback ) {\n        const scope = new Scope( this.currentScope, scopeData );\n        this.scopes.unshift( scope );\n        const returnValue = callback();\n        this.scopes.shift();\n        return returnValue;\n    }\n\n    get currentScope() { return this.scopes[ 0 ]; }\n\n    pushHistory( state, callback ) {\n        this.history.unshift( state );\n        const returnValue = callback();\n        this.history.shift();\n        return returnValue;\n    }\n\n    get currentEntry() { return this.history[ 0 ]; }\n\n    /* ------------------------------ */\n\n    serialize( ast, params = {} ) { return astringGenerate( ast, { comments: true, ...params } ); }\n\n    transform( ast ) {\n        if ( ast.type !== 'Program' ) throw new Error( 'AST must be of type \"Program\".' );\n        return this.pushScope( ast, () => {\n            const body = this.transformNodes( ast.body, { static: !ast.isQuantumProgram } );\n            const newAst = { ...ast, body };\n            // -------------\n            // Program body comment\n            if ( newAst.body.length ) { newAst.body[ 0 ].comments = Node.comments( 'Program body' ); }\n            // Location data and comment\n            const locationsAssignment = Node.exprStmt( Node.assignmentExpr( this.$path( 'locations' ), Node.arrayExpr( this.currentScope.locations ) ) );\n            locationsAssignment.comments = Node.comments( 'Location data' );\n            newAst.body.unshift( locationsAssignment );\n            // -------------\n            if ( this.exports.size ) {\n                // Render all exports\n                this.exports.forEach( args => { newAst.body.push( Node.exprStmt( this.$call( 'export', ...args ) ) ); } );\n                // Insert an \"await exports.promises\" statement after all exports\n                const promiseAll = Node.memberExpr( Node.identifier( 'Promise' ), Node.identifier( 'all' ) );\n                newAst.body.push( Node.exprStmt( Node.awaitExpr( Node.callExpr( promiseAll, [ this.$path( '$promises.exports' ) ] ) ) ) );\n            }\n            const identifier = this.currentScope.get$qIdentifier( '$q' ).name;\n            const compiledSource = this.serialize( newAst, { startingIndentLevel: this.params.startingIndentLevel } );\n            const compiledSourceBase64 = this.params.base64 ? btoa( this.params.base64.replace( '%0', identifier + '' ).replace( '%1', compiledSource ) ) : '';\n            return {\n                identifier,\n                compiledSource,\n                compiledSourceBase64,\n                originalSource: ast.originalSource,\n                isQuantumProgram: ast.isQuantumProgram,\n                topLevelAwait: this.topLevelAwait,\n                toString( base64 = undefined )  { return base64 === 'base64' ? this.compiledSourceBase64 : this.compiledSource; },\n            };\n        } );\n    }\n\n    transformNodes( nodes, state = {} ) {\n        const total = ( nodes = nodes.filter( s => s ) ).length;\n        // Hoist FunctionDeclarations and ImportDeclaration\n        const [ imports, functions, other ] = nodes.reduce( ( [ imports, functions, other ], node ) => {\n            return node?.type === 'ImportDeclaration' ? [ imports.concat( node ), functions, other ] : (\n                node?.type === 'FunctionDeclaration' ? [ imports, functions.concat( node ), other ] : [ imports, functions, other.concat( node ) ]\n            );\n        }, [ [], [], [] ] );\n        // Back together...\n        nodes = [ ...imports, ...functions, ...other ];\n        // Process now...\n        return ( function eat( build, i ) {\n            if ( i === total ) return build;\n            // Generate...\n            const [ $node_s, $state ] = this.transformNode( nodes[ i ], state, true );\n            build = build.concat( $node_s || []/* exports are often not returned */ );\n            if ( i === imports.length - 1 ) {\n                // Insert an \"await imports.promises\" statement after all imports\n                const promiseAll = Node.memberExpr( Node.identifier( 'Promise' ), Node.identifier( 'all' ) );\n                build = build.concat( Node.exprStmt( Node.awaitExpr( Node.callExpr( promiseAll, [ this.$path( '$promises.imports' ) ] ) ) ) );\n            }\n            // Skip rest code after return, break, or continue\n            if ( [ 'ReturnStatement', 'BreakStatement', 'ContinueStatement' ].includes( nodes[ i ].type ) ) return build;\n            // Construct \"rest\" block\n            if ( $state.flowControl?.size && $state.node.type === 'IfStatement' ) {\n                const restNodes = nodes.slice( i + 1 );\n                if ( restNodes.length ) {\n                    const downstream = new $qDownstream( restNodes );\n                    return build.concat( this.transformNode( downstream ) );\n                }\n            }\n            return eat.call( this, build, i + 1 );\n        } ).call( this, [], 0 );\n        \n    }\n\n    transformNode( node, state = {}, getState = false ) {\n        if ( typeof node !== 'object' || !node ) return node;\n        const historyData = {\n            static: this.currentEntry?.static,\n            mode: this.currentEntry?.mode,\n            ...state,\n            parentNode: this.currentEntry?.node,\n            node,\n            hoistedAwaitKeyword: false,\n            flowControl: new Map,\n        };\n        const $node = this.pushHistory( historyData, () => {\n            if ( this[ `transform${ node.type }` ] ) {\n                return this[ `transform${ node.type }` ].call( this, node );\n            }\n            return Object.keys( node ).reduce( ( $node, key ) => {\n                const value = Array.isArray( node[ key ] )\n                    ? this.transformNodes( node[ key ], state )\n                    : this.transformNode( node[ key ], state );\n                return { ...$node, [ key ]: value };\n            }, {} );\n        } );\n        return getState ? [ $node, historyData ] : $node;\n    }\n\n    /* HELPERS */\n\n    $serial( node ) { return this.currentScope.index( node, this.params.locations ); }\n \n    $path( path ) { return  path.split( '.' ).reduce( ( obj, prop ) => Node.memberExpr( obj, Node.identifier( prop ) ), this.currentScope.get$qIdentifier( '$q' ) ); }\n    \n    $trail() { return this.currentEntry.trail ? [ Node.literal( this.currentEntry.trail ) ] : []; }\n\n    $call( callee, ...args ) { return Node.callExpr( this.$path( callee ), args ); }\n\n    $typed( as, value, name = null ) {\n        const $namePart = name ? [ Node.literal( name ) ] : [];\n        return this.$call( 'typed', Node.literal( as ), value, ...$namePart );\n    }\n\n    $obj( obj ) {\n        const entries = Object.entries( obj ).map( ( [ name, value ] ) => Node.property( Node.identifier( name ), Array.isArray( value ) ? Node.arrayExpr( value ) : value ) );\n        return Node.objectExpr( entries );\n    }\n\n    $closure( ...args ) {\n        let body = args.pop(), params = args.pop() || [];\n        if ( body.type === 'EmptyStatement' ) body = Node.blockStmt( [] );\n        return Node.arrowFuncExpr( null, params, body, this.currentEntry.hoistedAwaitKeyword );\n    }\n\n    $var( kind, $serial, id, init, ...$rest ) {\n        const closure = init ? this.$closure( [ this.currentScope.get$qIdentifier( '$q' ) ], init ) : Node.identifier( 'undefined' );\n        let autorunExpr = this.$call( kind, Node.literal( id ), $serial, closure, ...$rest );\n        if ( closure.async ) { autorunExpr = Node.awaitExpr( autorunExpr ); }\n        return Node.exprStmt( autorunExpr );\n    }\n\n    $update( left, right, ...$rest ) {\n        const closure = this.$closure( right );\n        return this.$call( 'update', Node.literal( left.name ), closure, ...$rest );\n    }\n\n    $autorun( type, ...rest ) {\n        const body = rest.pop();\n        const $serial = rest.pop();\n        const spec = rest.pop() || {};\n        const $spec = Object.keys( spec ).length ? [ this.$obj( spec ) ] : [];;\n        const closure = this.$closure( [ this.currentScope.get$qIdentifier( '$q' ) ], body );\n        let autorunExpr = this.$call( 'autorun', Node.literal( type ), ...$spec, $serial, closure );\n        if ( closure.async ) { autorunExpr = Node.awaitExpr( autorunExpr ); }\n        return Node.exprStmt( autorunExpr );\n    }\n\n    $iteration( kind, $serial, body ) {\n        const $kind = Node.literal( kind );\n        const label = this.currentEntry.parentNode?.label ? Node.literal( this.currentEntry.parentNode.label.name ) : Node.identifier( 'null' );\n        const spec = { kind: $kind, label };\n        const $body = Node.blockStmt( body );\n        return this.$autorun( 'iteration', spec, $serial, $body );\n    }\n\n    /* FLOW CONTROL */\n\n    hoistAwaitKeyword() {\n        for ( const entry of this.history ) {\n            entry.hoistedAwaitKeyword = true;\n            if ( entry.node.type.includes( 'Function' ) ) return;\n        }\n        this.topLevelAwait = true;\n    }\n\n    hoistArgumentsKeyword() {\n        const keywordScopes = [ 'FunctionDeclaration', 'FunctionExpression' ];\n        if ( this.history.some( e => keywordScopes.includes( e.node.type ) ) ) return;\n        this.topLevelArgsKeyword = true;\n        return true;\n    }\n\n    hoistExitStatement( cmd, arg = {} ) {\n        for ( const entry of this.history ) {\n            const isTargetSwitch = () => entry.node?.type === 'SwitchStatement' && cmd.value === 'break' && arg.name === 'null';\n            const isTargetLabel = () => entry.parentNode?.type === 'LabeledStatement' && this.loopTypes.includes( entry.parentNode.body.type ) && arg.value === entry.parentNode.label.name;\n            const isBareExit = () => this.loopTypes.includes( entry.node.type ) && arg.name === 'null';\n            if ( isTargetSwitch() ) { return entry.node; }\n            if ( isTargetLabel() || isBareExit() ) {\n                entry.flowControl.set( cmd, { ...arg, endpoint: true } );\n                return entry.node;\n            }\n            if ( entry.node.type.includes( 'Function' ) ) return;\n            entry.flowControl.set( cmd, arg );\n        }\n    }\n\n    /* FUNCTIONS */\n\n    transformFunctionDeclaration( node ) { return this.transformFunction( Node.funcDeclaration, ...arguments ) }\n    transformFunctionExpression( node ) { return this.transformFunction( Node.funcExpr, ...arguments ) }\n    transformArrowFunctionExpression( node ) { return this.transformFunction( Node.arrowFuncExpr, ...arguments ) }\n    transformFunction( transform, node ) {\n        if ( node.generator && node.isQuantumFunction ) {\n            throw new Error( `Generator functions cannot be quantum functions.` );\n        }\n        const $serial = this.$serial( node );\n        let { id, params, body } = node;\n        // Note the static/non-static mode switch\n        [ id, params, body ] = this.pushScope( node, () => {\n            const $body = [];\n            // Function name\n            if ( id ) { this.currentScope.push( id, 'self' ); } // Before anything\n            // Params\n            const $params = params.map( param => {\n                if ( param.type === 'AssignmentPattern' && node.isQuantumFunction ) {\n                    const $rand = this.currentScope.getRandomIdentifier( '$rand', false );\n                    const $param = this.transformSignal( $rand, 'param' ); // Must be registered as a param before line below\n                    const declaration = Node.varDeclarator( param.left, Node.withLoc( Node.logicalExpr( '||', $rand, param.right ), param ) );\n                    $body.push( ...this.transformNode( Node.varDeclaration( 'let', [ Node.withLoc( declaration, param ) ] ), { static: !node.isQuantumFunction } ) );\n                    return $param;\n                }\n                return this.transformSignal( param, 'param' );\n            } );\n            // Body\n            const $$body = this.transformNodes( body.type === 'BlockStatement' ? body.body : [ Node.returnStmt( body ) ], { static: !node.isQuantumFunction } );\n            $body.push( ...$$body );\n            // -------------\n            // Function body comment\n            if ( $body.length ) { $body[ 0 ].comments = Node.comments( 'Function body' ); }\n            // Location data and comment\n            const locationsAssignment = Node.exprStmt( Node.assignmentExpr( this.$path( 'locations' ), Node.arrayExpr( this.currentScope.locations ) ) );\n            locationsAssignment.comments = Node.comments( 'Location data' );\n            $body.unshift( locationsAssignment );\n            // -------------\n            // Result\n            return [ id, $params, Node.blockStmt( $body ), ];\n        } );\n\n        const $qIdentifier = this.currentScope.get$qIdentifier( '$q' );\n        const closure = this.$closure( [ $qIdentifier ], body );\n\n        const executionMode = Node.literal( node.isQuantumFunction ? 'QuantumFunction' : (node.isHandler ? 'HandlerFunction' : (node.isFinalizer ? 'FinalizerFunction' : 'RegularFunction')) );\n        const functionKind = Node.literal( node.type === 'FunctionDeclaration' ? 'Declaration' : 'Expression' );\n        const $body = Node.blockStmt( [ Node.returnStmt( this.$call( 'runtime.spawn', executionMode, Node.thisExpr(), closure, $qIdentifier/*Lexical context*/ ) ) ] );\n\n        const metarisation = reference => this.$call( 'function', executionMode, functionKind, $serial, reference/* reference to the declaration */ );\n        let resultNode = transform.call( Node, id, params, $body, node.async, node.expresion, node.generator );\n        if ( node.type === 'FunctionDeclaration' ) {\n            this.currentScope.push( id, 'static' ); // On outer scope\n            resultNode = [ resultNode, Node.exprStmt( metarisation( id ) ) ];\n            // Is export?\n            if ( this.currentEntry.isExport ) {\n                const spec = [ Node.literal( id ), $serial ];\n                if ( this.currentEntry.isExport === 'as-default' ) {\n                    spec.push( Node.literal( 'default' ) );\n                }\n                this.exports.add( [ Node.arrayExpr( spec ) ] );\n            }\n        } else if ( !this.currentEntry.isMethod ) { resultNode = metarisation( resultNode ); }\n        \n        return resultNode;\n    }\n\n    /* CLASSES */\n\n    transformClassDeclaration( node ) { return this.transformClass( Node.classDeclaration, ...arguments ); }\n    transformClassExpression( node ) { return this.transformClass( Node.classExpression, ...arguments ); }\n    transformClass( transform, node ) {\n        let { id, body, superClass } = node;\n        if ( superClass ) { superClass = this.transformNode( superClass ); }\n        const methods = new Set;\n        body = this.pushScope( node, () => {\n            // On the inner scope\n            if ( id ) { this.currentScope.push( id, 'self' ); } // Before anything\n            return this.transformNode( body, { methods } );\n        } );\n        const classKind = Node.literal( node.type === 'ClassDeclaration' ? 'Declaration' : 'Expression' );\n        const metarisation = reference => {\n            const methodsSpec = Node.arrayExpr( [ ...methods ].map( m => this.$obj( m ) ) );\n            return this.$call( 'class', classKind, reference/* reference to the declaration */, methodsSpec );\n        };\n        let resultNode = transform.call( Node, id, body, superClass );\n        if ( node.type === 'ClassDeclaration' ) {\n            this.currentScope.push( id, 'static' ); // On the outer scope\n            resultNode = [ resultNode, Node.exprStmt( metarisation( id ) ) ];\n            // Is export?\n            if ( this.currentEntry.isExport ) {\n                const spec = [ Node.literal( id ), this.$serial( node ) ];\n                if ( this.currentEntry.isExport === 'as-default' ) {\n                    spec.push( Node.literal( 'default' ) );\n                }\n                this.exports.add( [ Node.arrayExpr( spec ) ] );\n            }\n        } else { resultNode = metarisation( resultNode ); }\n\n        return resultNode;\n    }\n\n    transformMethodDefinition( node ) {\n        let { key, value } = node;\n        if ( node.computed ) { key = this.transformNode( key ); }\n        const $value = this.transformNode( value, { static: true, isMethod: true } );\n        this.currentEntry.methods.add( {\n            name: node.computed ? key : Node.literal( key ),\n            static: Node.identifier( node.static ),\n            isQuantumFunction: Node.identifier( value.isQuantumFunction || false ),\n            serial: this.$serial( node ),\n        } );\n        return Node.methodDefinition( key, $value, node.kind, node.static, node.computed );\n    }\n\n    transformPropertyDefinition( node ) {\n        let { key, value } = node;\n        if ( node.computed ) { key = this.transformNode( key ); }\n        value = this.transformNode( value );\n        return Node.exprStmt( Node.propertyDefinition( key, value, node.static, node.computed ) );\n    }\n\n    /** IMPORTS & EXPORTS */\n\n    exports = new Set;\n    transformExportDefaultDeclaration( node ) { return this.handleExports( ...arguments ); }\n    transformExportNamedDeclaration( node ) { return this.handleExports( ...arguments ); }\n    transformExportAllDeclaration( node ) { return this.handleExports( ...arguments ); }\n    handleExports( node ) {\n        // ExportAllDeclaration: has \"source\" and \"exported\". (The equivalen of spec.type === 'ImportNamespaceSpecifier' above.)\n        if ( node.type === 'ExportAllDeclaration' ) {\n            const spec = [ Node.literal( '*' ), this.$serial( node.exported || node ), Node.literal( node.exported?.name || node.exported?.value || '' ) ];\n            this.exports.add( [ Node.arrayExpr( spec ), this.$obj( { source: node.source, serial: this.$serial( node ) } ) ] );\n            return;\n        }\n        // Specifiers helper\n        const specifiers = specs => specs.map( spec => {\n            const $spec = [ Node.literal( spec.local.name ), this.$serial( spec ) ];\n            const alias = spec.exported.name || spec.exported.value;\n            if ( alias !== spec.local.name ) $spec.push( Node.literal( alias ) );\n            return Node.arrayExpr( $spec );\n        } );\n        // ExportNamedDeclaration: may have a \"source\" and \"specifiers\"\n        if ( node.source ) {\n            this.exports.add( specifiers( node.specifiers ).concat( this.$obj( { source: node.source, serial: this.$serial( node ) } ) ) );\n            return;\n        }\n        // Now we're left with local exports! First we deal with specifiers of type \"identifier\"...\n        if ( node.type === 'ExportNamedDeclaration' && node.specifiers.length ) {\n            this.exports.add( specifiers( node.specifiers ) );\n            return;\n        }\n        if ( node.type === 'ExportDefaultDeclaration' && [ 'Identifier', 'ThisExpression' ].includes( node.declaration.type ) ) {  \n            const spec = [ Node.literal( node.declaration.name || 'this' ), this.$serial( node ), Node.literal( 'default' ) ];\n            this.exports.add( [ Node.arrayExpr( spec ) ] );\n            return;\n        }\n        // Next we deal with declarations; which for ExportNamedDeclaration may be any sort of declaration\n        // while for ExportDefaultDeclaration may be any sort of declaration other than variables\n        return this.transformNode( node.declaration, { isExport: node.type === 'ExportDefaultDeclaration' ? 'as-default' : true } );\n    }\n\n    transformImportDeclaration( node ) {\n        const specifiers = node.specifiers.map( spec => {\n            let { imported, local } = spec;\n            this.transformSignal( local, 'import' );\n            if ( spec.type === 'ImportNamespaceSpecifier' ) { imported = Node.identifier( '*' ); }\n            else if ( spec.type === 'ImportDefaultSpecifier' ) { imported = Node.identifier( 'default' ); }\n            const $imported = imported.name || imported.value || '';\n            const $spec = [ Node.literal( $imported ), this.$serial( spec ) ];\n            if ( $imported !== spec.local.name ) $spec.push( Node.literal( spec.local.name ) );\n            return Node.arrayExpr( $spec );\n        } );\n        return Node.exprStmt( this.$call( 'import', ...specifiers.concat( this.$obj( { source: node.source, serial: this.$serial( node ) } ) ) ) );\n    }\n\n    transformImportExpression( node ) {\n        return this.$call( 'import', this.$obj( { source: node.source, isDynamic: Node.identifier( 'true' ), serial: this.$serial( node ) } ) );\n    }\n\n    /* IDENTIFIERS & PATHS */\n\n    transformSignal( node, mode, signals = null ) {\n        if ( node.type === 'Identifier' ) {\n            this.currentScope.push( node, mode, [ 'let', 'param' ].includes( mode ) );\n            signals?.add( node );\n            return node;\n        }\n        // A pattern\n        return this.transformNode( node, { mode, static: true, signals } );\n    }\n\n    transformThisExpression( node ) { return this.transformIdentifier( ...arguments ); }\n    transformIdentifier( node ) {\n        const ref = this.currentScope.find( node );\n        if ( !ref && node.name ) { this.currentScope.$qIdentifiersNoConflict( node.name ); }\n        const hintArg = [];\n        if ( node.hint ) { hintArg.push( this.$obj( { [ node.hint ]: Node.identifier( true ) } ) ); }\n        else if ( this.currentEntry.mode === 'callee' ) {\n            //hintArg.push( this.$obj( { funCall: Node.identifier( true ) } ) );\n        }\n        // Static mode?\n        if ( node.type === 'ThisExpression' || [ 'param', 'self' ].includes( ref?.type ) || [ 'arguments' ].includes( node.name ) ) {\n            if ( this.currentEntry.trail ) return this.$call( 'obj', node, ...this.$trail(), ...hintArg );\n            return node;\n        }\n        // We're now dealing with an identifier or path that can change\n        this.history.forEach( state => state.refs?.add( node ) );\n        return this.$call( 'ref', Node.literal( node ), ...this.$trail(), ...hintArg );\n    }\n\n    transformMemberExpression( node ) {\n        let { object, property, computed, optional } = node;\n        if ( computed ) { property = this.transformNode( property ); }\n        let $object = this.transformNode( object, { trail: ( this.currentEntry.trail || 0 ) + 1 } );\n        if ( object.typed ) {\n            $object = this.$typed( object.typed, $object, Node.literal( property ) );\n        }\n        return Node.memberExpr( $object, property, computed, optional );\n    }\n\n    /* DECLARATIONS & MUTATIONS (SIGNALS) */\n\n    transformVariableDeclaration( node ) {\n        const isExport = this.currentEntry.isExport;\n        // Expanded declarations?\n        const entries = node.declarations.reduce( ( decs, dec ) => {\n            if ( [ 'ObjectPattern', 'ArrayPattern' ].includes( dec.id.type ) ) {\n                return decs.concat( this.expandPattern( dec.id, dec.init ) );\n            }\n            return decs.concat( dec );\n        }, [] );\n        // Dynamic assignment construct\n        return entries.reduce( ( stmts, dec ) => {\n            const $serial = this.$serial( dec );\n            let $init = this.transformNode( dec.init );\n            this.transformSignal( dec.id, node.kind, this.currentEntry.signals );\n            let $rest = [];\n            if ( dec.restOf ) {\n                $init = this.$typed( dec.init.typed, $init );\n                $rest.push( this.$obj( { restOf: dec.restOf, type: Node.literal( dec.init.typed === 'iterable' ? 'array' : 'object' ) } ) );\n            }\n            const $stmts = stmts.concat( this.$var( node.kind, $serial, dec.id, $init, ...$rest ) );\n            // Is export?\n            if ( isExport && !( dec.id instanceof $qIdentifier ) ) {\n                const spec = [ Node.literal( dec.id ), $serial ];\n                this.exports.add( [ Node.arrayExpr( spec ) ] );\n            }\n            return $stmts;\n        }, [] );\n    }\n\n    transformAssignmentExpression( node ) {\n        const staticMode = this.currentEntry.static;\n        const expandableAsStatements = !staticMode && this.history[ 1 ].node.type === 'ExpressionStatement';\n        let { left, right } = node;\n\n        // Regular assignmentExpr\n        const assignmentExpr = ( left, right ) => {\n            right = this.transformNode( right );\n            left = this.transformNode( left );\n            return Node.assignmentExpr( left, right, node.operator );\n        };\n\n        // Property mutation?\n        if ( [ 'MemberExpression', 'ChainExpression'  ].includes( left.type ) ) { return assignmentExpr( left, right ); }\n\n        // Expanded declarations?\n        if ( [ 'ObjectPattern', 'ArrayPattern' ].includes( left.type ) ) {\n            let potentialNewRight = right;\n            const declarations = this.expandPattern( left, right, expandableAsStatements ).reduce( ( stmts, dec ) => {\n                // Was \"right\" simplified? We'll need the new reference\n                if ( dec.id.originalB ) { potentialNewRight = dec.id; }\n                // An assignment?\n                if ( dec.type === 'AssignmentExpression' ) {\n                    return stmts.concat( assignmentExpr( dec.left, dec.right ) );\n                }\n                // Actual operation\n                let $init = this.transformNode( dec.init );\n                // As intermediate variable?\n                if ( dec.id instanceof $qIdentifier ) {\n                    const $serial = this.$serial( dec );\n                    return stmts.concat( this.$var( 'let', $serial, dec.id, $init ) );\n                }\n                // As update!\n                this.transformSignal( dec.id, 'update', this.currentEntry.signals ); // An identifier\n                let $rest = [];\n                // A Rest parameter?\n                if ( dec.restOf ) {\n                    $init = this.$typed( dec.init.typed, $init );\n                    $rest.push( this.$obj( { restOf: dec.restOf, type: Node.literal( dec.init.typed === 'iterable' ? 'array' : 'object' ) } ) );\n                }\n                return stmts.concat( this.$update( dec.id, $init, ...$rest ) );\n            }, [] );\n            // As individual statements?\n            if ( expandableAsStatements ) return declarations;\n            // As sequence!\n            return Node.sequenceExpr( declarations.concat( potentialNewRight ) );\n        }\n\n        // Other: left is an identifier\n        right = this.transformNode( right );\n        this.transformSignal( left, 'update', this.currentEntry.signals );\n        const currentValueLocalIdentifier = this.currentScope.getRandomIdentifier( '$current', false );\n        return this.$call( 'update', Node.literal( left ), this.$closure( [ currentValueLocalIdentifier ], Node.assignmentExpr( currentValueLocalIdentifier, right, node.operator.replace( '====', '' ) ) ) );\n    }\n\n    transformAssignmentPattern( node ) {\n        let { left, right } = node;\n        right = this.transformNode( right );\n        if ( [ 'MemberExpression', 'ChainExpression' ].includes( left.type ) ) {\n            left = this.transformNode( left, { static: true } );\n        } else/* Identifier/Object/ArrayPattern */ {\n            left = this.transformSignal( left, this.currentEntry.mode, this.currentEntry.signals );\n        }\n        return Node.assignmentPattern( left, right );\n    }\n\n    /*\n    NO-MORE\n    transformObjectPattern( node ) {\n        const properties = node.properties.map( property => {\n            let { key, value } = property;\n            if ( property.computed && key.type !== 'Literal' ) {\n                key = this.transformNode( key );\n            }\n            value = this.transformSignal( value, this.currentEntry.mode, this.currentEntry.signals );\n            return Node.property( key, value, property.kind, property.shorthand, property.computed, property.method );\n        } );\n        return Node.objectPattern( properties );\n    }\n    \n    transformArrayPattern( node ) {\n        const elements = node.elements.map( element => {\n            if ( [ 'MemberExpression', 'ChainExpression' ].includes( element.type ) ) {\n                return this.transformNode( element, { static: true } );\n            }\n            // Identifier/Object/ArrayPattern\n            return this.transformSignal( element, this.currentEntry.mode, this.currentEntry.signals );\n        } );\n        return Node.arrayPattern( elements );\n    }\n    */\n    \n    expandPattern( a, b, withIntermediates = true ) {\n        const declarations = [], _this = this;\n        if ( ![ 'Identifier', 'Literal' ].includes( b.type ) && withIntermediates ) {\n            const intermediateLocalIdentifier = Node.withLoc( _this.currentScope.getRandomIdentifier( '$rand', false ), b );\n            intermediateLocalIdentifier.originalB = true;\n            b.typed = a.type === 'ObjectPattern' ? 'desctructurable' : 'iterable';\n            declarations.push( Node.withLoc( Node.varDeclarator( intermediateLocalIdentifier, b ), b ) );\n            b = intermediateLocalIdentifier;\n        }\n        ( function expand( patternEntries, $init, isObjectType ) {\n            $init.typed = isObjectType ? 'desctructurable' : 'iterable';\n            const localIdentifiers = [];\n            for ( let i = 0; i < patternEntries.length; i ++ ) {\n                let entry = patternEntries[ i ], key = i, value = entry;\n                if ( entry === null ) {\n                    localIdentifiers.push( i );\n                    continue;\n                }\n                if ( entry.type === 'RestElement' ) {\n                    const dec = Node.withLoc( Node.varDeclarator( entry.argument, $init ), entry );\n                    dec.restOf = localIdentifiers.map( v => Node.literal( v ) );\n                    declarations.push( dec );\n                    continue;\n                }\n                if ( isObjectType ) { ( { key, value } = entry ); }\n                else { key = Node.literal( key ); }\n                // Obtain default value and local identifier\n                let defaultValue, localIdentifier;\n                if ( value.type === 'AssignmentPattern' ) {\n                    defaultValue = value.right;\n                    if ( value.left.type === 'Identifier' ) { localIdentifier = value.left; }\n                    else { value = value.left; }\n                } else if ( value.type === 'Identifier' ) {\n                    localIdentifier = value;\n                }\n                // Generate for let and var\n                let init = Node.memberExpr( $init, key, isObjectType ? entry.computed : true );\n                if ( defaultValue ) { init = Node.logicalExpr( '||', init, defaultValue ); }\n                if ( localIdentifier ) {\n                    declarations.push( Node.withLoc( Node.varDeclarator( localIdentifier, init ), entry ) );\n                    localIdentifiers.push( key );\n                } else if ( value.type === 'MemberExpression' || ( value.type === 'ChainExpression' && ( value = value.expression ) ) ) {\n                    declarations.push( Node.withLoc( Node.assignmentExpr( value, init ), entry ) );\n                } else if ( value.elements || value.properties ) {\n                    const numDeclarationsAtLevel = ( value.properties ? value.properties : value.elements ).length > 1;\n                    if ( withIntermediates && numDeclarationsAtLevel ) {\n                        const intermediateLocalIdentifier = _this.currentScope.getRandomIdentifier( '$rand', false );\n                        declarations.push( Node.withLoc( Node.varDeclarator( intermediateLocalIdentifier, init ), entry ) );\n                        init = intermediateLocalIdentifier;\n                    }\n                    expand( ( value.elements || value.properties ), init, value.properties && true );\n                }\n            }\n        } )( ( a.elements || a.properties ), b, a.properties && true );\n        return declarations;\n    }\n\n    transformUpdateExpression( node ) {\n        if ( node.argument.type === 'Identifier' ) {\n            this.transformSignal( node.argument, 'update', this.currentEntry.signals );\n            const currentValueLocalIdentifier = this.currentScope.getRandomIdentifier( '$current', false );\n            const expr = Node.binaryExpr( node.operator === '--' ? '-' : '+', currentValueLocalIdentifier, Node.literal( 1 ), true/* being now a bare value */ );\n            const kind = ( node.prefix ? 'pre' : 'post' ) + ( node.operator === '--' ? 'dec' : 'inc' );\n            return this.$call( 'update', Node.literal( node.argument.name ), this.$closure( [ currentValueLocalIdentifier ], expr ), this.$obj( { kind: Node.literal( kind ) } ) );\n        }\n        return Node.updateExpr( node.operator, this.transformNode( node.argument ), node.prefix );\n    }\n\n    transformUnaryExpression( node ) {\n        if ( node.operator === 'typeof' && node.argument.type === 'Identifier' ) {\n            node.argument.hint = 'isTypeCheck';\n        }\n        return Node.unaryExpr( node.operator, this.transformNode( node.argument ) );\n    }\n\n    /* FLOW CONTROL */\n\n    transformIfStatement( node ) {\n        const $serial = this.$serial( node );\n        let { test, consequent, alternate } = node;\n        // test\n        test = this.transformNode( node.test );\n        // consequent and alternate\n        consequent = this.pushScope( node, () => this.transformNodes( consequent.type === 'BlockStatement' ? consequent.body : [ consequent ] ) );\n        if ( alternate ) alternate = [].concat( this.transformNode( alternate ) )[ 0 ];\n        const construct = Node.ifStmt( test, Node.blockStmt( consequent ), alternate );\n        return this.$autorun( 'block', { static: Node.identifier( this.currentEntry.static ) }, $serial, Node.blockStmt( [ construct ] ) );\n    }\n\n    transformSwitchStatement( node ) {\n        const $serial = this.$serial( node );\n        return this.pushScope( node, () => {\n            const discriminant = this.transformNode( node.discriminant );\n            const cases = node.cases.map( caseNode => {\n                const test = this.transformNode( caseNode.test );\n                const consequent = this.transformNodes( caseNode.consequent );\n                return Node.switchCase( test, consequent );\n            } );\n            const construct = Node.switchStmt( discriminant, cases );\n             return this.$autorun( 'switch', { static: Node.identifier( this.currentEntry.static ) }, $serial, Node.blockStmt( [ construct ] ) );\n        } );\n    }\n\n    transformTryStatement( node ) {\n        return this.pushScope( node, () => {\n            const $serial = this.$serial( node );\n            const { block, handler, finalizer } = node;\n            const body = this.transformNodes( block.body );\n            const spec = {};\n            if ( handler ) {\n                const { start, end } = handler;\n                const $handler = Node.arrowFuncExpr( null, [ handler.param ], handler.body, );\n                spec.handler = this.transformNode( { ...$handler, isHandler: true, start, end }, { static: true } );\n            }\n            if ( finalizer ) {\n                const { start, end } = finalizer;\n                const $finalizer = Node.arrowFuncExpr( null, [], finalizer.body, );\n                spec.finalizer = this.transformNode( { ...$finalizer, isFinalizer: true, start, end }, { static: true } );\n            }\n            return this.$autorun( 'block', spec, $serial, Node.blockStmt( body ) );\n        });\n    }\n\n    /* LOOPS */\n\n    transformWhileStatement( node ) { return this.transformLoopStmtA( Node.whileStmt, ...arguments ); }\n    transformDoWhileStatement( node ) { return this.transformLoopStmtA( Node.doWhileStmt, ...arguments ); }\n    transformForStatement( node ) { return this.transformLoopStmtA( Node.forStmt, ...arguments ); }\n    transformLoopStmtA( transform, node ) {\n        const kind = node.type === 'WhileStatement' ? 'while' : ( node.type === 'DoWhileStatement' ? 'do-while' : 'for' );\n        const $serial = this.$serial( node );\n        return this.pushScope( node, () => {\n            const $qIdentifier = this.currentScope.get$qIdentifier( '$q' );\n            let createNodeCallback;\n            const spec = {\n                kind: Node.literal( kind ),\n                label: this.currentEntry.parentNode?.label ? Node.literal( this.currentEntry.parentNode.label.name ) : Node.identifier( 'null' ),\n                static: Node.identifier( this.currentEntry.static ),\n            };\n            if ( kind === 'for' ) {\n                const init = Node.blockStmt( [].concat( this.transformNode( node.init ) || [] ) );\n                spec.init = this.$closure( [ $qIdentifier ], init );\n                const test = this.transformNode( node.test );\n                spec.test = this.$closure( [ $qIdentifier ], test );\n                const update = this.transformNode( node.update );\n                spec.advance = this.$closure( [ $qIdentifier ], update );\n                createNodeCallback = $body => transform.call( Node, init, test, update, $body );\n            } else {\n                const test = this.transformNode( node.test );\n                spec.test = this.$closure( [ $qIdentifier ], test );\n                createNodeCallback = $body => transform.call( Node, test, $body );\n            }\n            const $body = Node.blockStmt( this.transformNodes( node.body.type === 'BlockStatement' ? node.body.body : [ node.body ] ) );\n            return this.$autorun( 'iteration', spec, $serial, $body );\n        } );\n    }\n\n    transformForOfStatement( node ) { return this.transformLoopStmtB( Node.forOfStmt, ...arguments ); }\n    transformForInStatement( node ) { return this.transformLoopStmtB( Node.forInStmt, ...arguments ); }\n    transformLoopStmtB( transform, node ) {\n        const kind = node.type === 'ForInStatement' ? 'for-in' : 'for-of';\n        const $serial = this.$serial( node );\n        const right = this.transformNode( node.right );\n        return this.pushScope( node, () => {\n            // Iteration driver\n            const $qIdentifier = this.currentScope.get$qIdentifier( '$q' );\n            const production = this.currentScope.get$qIdentifier( kind === 'for-of' ? '$val' : '$key', false );\n            const spec = {\n                kind: Node.literal( kind ),\n                label: this.currentEntry.parentNode?.label ? Node.literal( this.currentEntry.parentNode.label.name ) : Node.identifier( 'null' ),\n                parameters: this.$closure( [ $qIdentifier ], Node.arrayExpr( [ Node.literal( production ), right ] ) ),\n                static: Node.identifier( this.currentEntry.static ),\n            };\n            // Iteration round...\n            let originalLeft;\n            if ( node.left.type === 'VariableDeclaration' ) {\n                const declarator = Node.withLoc( Node.varDeclarator( node.left.declarations[ 0 ].id, production ), node.left );\n                originalLeft = Node.varDeclaration( node.left.kind, [ declarator ] )\n            } else {\n                originalLeft = Node.withLoc( Node.assignmentExpr( node.left, production ), node.left );\n            }\n            const $body = Node.blockStmt( this.transformNodes( [ originalLeft ].concat( node.body.type === 'BlockStatement' ? node.body.body : node.body ) ) );\n            return this.$autorun( 'iteration', spec, $serial, $body );\n        } );\n    }\n\n    transformBreakStatement( node ) { return this.transformExitStmt( Node.breakStmt, ...arguments ); }\n    transformContinueStatement( node ) { return this.transformExitStmt( Node.continueStmt, ...arguments ); }\n    transformExitStmt( transform, node ) {\n        const keyword = node.type === 'BreakStatement' ? 'break' : 'continue';\n        const cmd = Node.literal( keyword );\n        const label = node.label ? Node.literal( node.label.name ) : Node.identifier( 'null' );\n        // Hoisting...\n        this.hoistExitStatement( cmd, label );\n        if ( this.currentEntry.parentNode?.type === 'SwitchStatement' ) {\n            return transform.call( Node );\n        }\n        return Node.exprStmt( this.$call( keyword, label ), );\n    }\n\n    transformReturnStatement( node ) {\n        const refs = new Set;\n        const argument = this.transformNode( node.argument, { refs } );\n        const cmd = Node.literal( 'return' );\n        const args = argument ? [ cmd, argument ] : [ cmd ];\n        this.hoistExitStatement( ...args );\n\n        const hoisting = this.$call( 'return', ...args.slice( 1 ) );\n        if ( !refs.size ) return Node.exprStmt( hoisting );\n\n        // Return statement hoisting\n        const $serial = this.$serial( node );\n        return this.$autorun( 'return', $serial, hoisting );\n    }\n\n    /* GENERAL */\n\n    transformBlockStatement( node ) {\n        const $serial = this.$serial( node );\n        if ( node instanceof $qDownstream ) {\n            const body = this.transformNodes( node.body, { static: false } );\n            return this.$autorun( 'downstream', $serial, Node.blockStmt( body ) );\n        }\n        return this.pushScope( node, () => {\n            const body = Node.blockStmt( this.transformNodes( node.body ) );\n            return this.$autorun( 'block', { static: Node.identifier( this.currentEntry.static ) }, $serial, body );\n        } );\n    }\n\n    transformLabeledStatement( node ) {\n        this.currentScope.push( node.label, 'const' ); // Before\n        const body = [].concat( this.transformNode( node.body ) );\n        return [ Node.labeledStmt( node.label, body.shift() ), ...body ];\n    }\n\n    transformExpressionStatement( node ) {\n        const $serial = this.$serial( node );\n        const expression = this.transformNode( node.expression );\n        const expression_s = [].concat( expression || [] );\n        return expression_s.reduce( ( stmts, expression ) => {\n            if ( expression.type === 'VariableDeclaration' || expression.type.endsWith( 'Statement' ) ) {\n                return stmts.concat( expression );\n            }\n            return stmts.concat( this.$autorun( 'stmt', { static: Node.identifier( this.currentEntry.static ) }, $serial, expression ) );\n        }, [] );\n    }\n\n    transformAwaitExpression( node ) {\n        this.hoistAwaitKeyword();\n        const argument = this.transformNode( node.argument );\n        return Node.awaitExpr( argument );\n    }\n\n    transformSequenceExpression( node ) {\n        const expresions = node.expressions.reduce( ( exprs, expr, i ) => {\n            return exprs.concat( this.transformNode( expr, { trail: i === node.expressions.length - 1 ? this.currentEntry.trail : undefined } ) );\n        }, [] );\n        if ( this.history[ 1 ].node.type === 'ExpressionStatement' ) return expresions;\n        return Node.sequenceExpr( expresions );\n    }\n\n    transformConditionalExpression( node ) {\n        let { test, consequent, alternate } = node;\n        test = this.transformNode( test );\n        consequent = this.transformNode( consequent, { trail: this.currentEntry.trail } );\n        alternate = this.transformNode( alternate, { trail: this.currentEntry.trail } );\n        return Node.conditionalExpr( test, consequent, alternate );\n    }\n\n    transformLogicalExpression( node ) {\n        let { left, right } = node;\n        left = this.transformNode( left, { trail: this.currentEntry.trail } );\n        right = this.transformNode( right, { trail: this.currentEntry.trail } );\n        return Node.logicalExpr( node.operator, left, right );\n    }\n\n    transformBinaryExpression( node ) {\n        let { left, right } = node;\n        left = this.transformNode( left );\n        right = this.transformNode( right );\n        const expr = Node.binaryExpr( node.operator, left, right );\n        // Object mode?\n        if ( this.currentEntry.trail ) { return this.$call( 'obj', expr, ...this.$trail() ); }\n        return expr;\n    }\n\n    transformCallExpression( node ) { return this.transformCallExpr( Node.callExpr, ...arguments ); }\n    transformNewExpression( node ) { return this.transformCallExpr( Node.newExpr, ...arguments ); }\n    transformCallExpr( transform, node ) {\n        // The ongoing reference must be used for callee\n        const callee = this.transformNode( node.callee, { mode: 'callee' } );\n        const args = node.arguments.map( argument => this.transformNode( argument ) );\n        const expr = transform.call( Node, callee, args, node.optional );\n        // Object mode?\n        if ( this.currentEntry.trail ) { return this.$call( 'obj', expr, ...this.$trail() ); }\n        return expr;\n    }\n\n    transformObjectExpression( node ) {\n        const expr = Node.objectExpr( node.properties.map( property => this.transformNode( property ) ) );\n        // Object mode?\n        if ( this.currentEntry.trail ) { return this.$call( 'obj', expr, ...this.$trail() ); }\n        return expr;\n    }\n\n    transformProperty( node ) {\n        let { key, value } = node;\n        if ( node.computed ) { key = this.transformNode( key ); }\n        value = this.transformNode( value );\n        return Node.property( key, value, node.kind, false/* node.shorthand. due to the transformation */, node.computed, false/* node.method. due to the transformation */ );\n    }\n\n    transformArrayExpression( node ) {\n        const expr = Node.arrayExpr( node.elements.map( element => this.transformNode( element ) ) );\n        // Object mode?\n        if ( this.currentEntry.trail ) { return this.$call( 'obj', expr, ...this.$trail() ); }\n        return expr;\n    }\n\n    transformTaggedTemplateExpression( node ) {\n        const [ tag, quasi ] = this.transformNodes( [ node.tag, node.quasi ] );\n        const expr = Node.taggedTemplateExpr( tag, quasi );\n        // Object mode?\n        if ( this.currentEntry.trail ) { return this.$call( 'obj', expr, ...this.$trail() ); }\n        return expr;\n    }\n \n    transformTemplateLiteral( node ) {\n        const expressions = node.expressions.map( expression => this.transformNode( expression ) );\n        const expr = Node.templateLiteral( node.quasis, expressions );\n        // Object mode?\n        if ( this.currentEntry.trail ) { return this.$call( 'obj', expr, ...this.$trail() ); }\n        return expr;\n    }\n\n}\n", "\n/**\n * @imports\n */\nimport Parser from './Parser.js';\nimport Compiler from './Compiler.js';\n\n/**\n * @parse\n */\n\n// Parser\nconst parseCache = new Map;\nexport function parse( source, params = {} ) {\n    const cacheKey = `${ source }${ JSON.stringify( params ) }`;\n    let ast = parseCache.get( cacheKey );\n    if ( !ast ) {\n        try { ast = Parser.parse( source, params ); }\n        catch( e ) {\n            const message = `${ e.message || e }`;\n            const { pos, loc: { line, column } = {} } = e;\n            const expr = source.slice( Math.max( 0, pos - 15 ), pos + 15 );\n            const cause = [ { expr, line, column }, { source } ];\n            if ( params.inBrowser ) console.error( cause );\n            throw new ( globalThis[ e.name ] || Error )( message, { cause } );\n        }\n        parseCache.set( cacheKey, ast );\n    }\n    return ast;\n}\n\n// Compiler\nexport function compile( ast, params = {} ) {\n    const compiler = new Compiler( params );\n    return compiler.transform( ast );\n}\n\n// Serialize\nexport function serialize( ast, params = {} ) {\n    const compiler = new Compiler( params );\n    return compiler.serialize( ast );\n}\n", "\n/**\n * @exports\n */\nexport function resolveParams( ...extensions ) {\n    let extension, params = { runtimeParams, compilerParams, parserParams };\n    while( extension = extensions.shift() ) {\n        const {\n            runtimeParams: _runtimeParams = {},\n            compilerParams: { globalsNoObserve: _globalsNoObserve = [], globalsOnlyPathsExcept: _globalsOnlyPathsExcept = [], ..._compilerParams } = {},\n            parserParams: _parserParams = {},\n        } = extension;\n        params = {\n            runtimeParams: { ...params.runtimeParams, ..._runtimeParams },\n            compilerParams: { ...params.compilerParams, globalsNoObserve: [ ...params.compilerParams.globalsNoObserve, ..._globalsNoObserve ], globalsOnlyPathsExcept: [ ...params.compilerParams.globalsOnlyPathsExcept, ..._globalsOnlyPathsExcept ], ..._compilerParams },\n            parserParams: { ...params.parserParams, ..._parserParams },\n        };\n        if ( extensions.devMode ) { /* shortcut for devMode configs */ }\n    }\n    return params;\n}\nexport const parserParams = {\n    ecmaVersion: 'latest',\n    allowReturnOutsideFunction: true,\n    allowAwaitOutsideFunction: false,\n    allowSuperOutsideMethod: false,\n    preserveParens: false,\n    locations: true,\n};\nexport const compilerParams = {\n    globalsNoObserve: [ 'arguments', 'debugger', ],\n    globalsOnlyPathsExcept: [],\n    originalSource: true,\n    locations: true,\n    compact: 2,\n};\nexport const runtimeParams = {\n    apiVersion: 3,\n};\n", "\n/**\n * The modules registry\n */\nexport const registry = Object.create( null );", "/**\n * @imports\n */\nimport { env } from \"../util.js\";\n\nexport default class _EventTarget extends EventTarget {\n\n    managedAlways = new Set;\n    managedOnce = new Set;\n\n    constructor() {\n        super();\n        env.setMaxListeners?.( 0, this );\n    }\n\n    fire( evenName ) { return this.dispatchEvent( new Event( evenName, { cancelable: true } ) ); }\n\n    on( ...args ) {\n        this.addEventListener( ...args );\n        return () => this.removeEventListener( ...args );\n    }\n\n    abort( total = false ) {\n        this.managedAlways.forEach( x => x.abort ? x.abort( total ) : x( total ) );\n        this.managedOnce.forEach( x => x.abort ? x.abort( total ) : x( total ) );\n        this.managedOnce.clear();\n        this.fire( 'abort' );\n    }\n\n    manage( x ) { this.managedAlways.add( x ); }\n    once( x ) { this.managedOnce.add( x ); }\n\n}", "\n/**\n * @import\n */\nimport Observer from '@webqit/observer';\nimport { _isTypeObject } from '../util.js';\nimport EventTarget from './EventTarget.js';\n\nexport default class Signal extends EventTarget {\n\n    subscribers = new Set;\n    signals = new Map;\n\n    constructor( context, type, state ) {\n        super();\n        this.context = context;\n        this.context?.once( () => this.abort() );\n        this.once( () => this.watchMode( false ) );\n        this.type = type;\n        this.state = state;\n    }\n\n    get name() { return [ ...this.context?.signals.keys() || [] ].find( k => this.context.signals.get( k ) === this ); }\n   \n    signal( name, type = 'prop' ) {\n        let signal = this.signals.get( name );\n        if ( !signal ) {\n            // Initialization\n            signal = new Signal(\n                this,\n                type,\n                type === 'object' ? name : ( _isTypeObject( this.state ) ? Observer.get( this.state, name ) : undefined )\n            );\n            this.signals.set( name, signal );\n            // Self-start\n            if ( this.signals.size === 1 ) { this.watchMode(); }\n            // Cleanup\n            signal.once( () => {\n                // On being killed, auto-delete\n                this.signals.delete( name );\n                // On empty self-kill\n                if ( !this.signals.size ) { this.watchMode( false ); }\n            } );\n        }\n        return signal;\n    }\n\n    subscribe( autorun ) {\n        this.subscribers.add( autorun );\n        autorun.once( () => {\n            // Cleanup\n            this.subscribers.delete( autorun );\n            // On empty self-kill\n            if ( !this.subscribers.size ) { this.abort(); }\n        } );\n    }\n\n    watchMode( flag = true ) {\n        this.mutationsWatch?.abort();\n        if ( !flag || !this.signals.size || !_isTypeObject( this.state ) ) return;\n        this.mutationsWatch = Observer.observe( this.state, mutations => {\n            // Find subscribers and organize them by target runtime\n            const groupings = { map: new Map, add( autoruns, mutation ) {\n                for ( const autorun of autoruns ) {\n                    if ( autorun.spec.beforeSchedule?.( mutation ) === false ) continue;\n                    if ( !this.map.has( autorun.runtime ) ) { this.map.set( autorun.runtime, new Set ); }\n                    this.map.get( autorun.runtime ).add( autorun );\n                }\n            } };\n            for ( const mutation of mutations ) {\n                const signal = this.signals.get( mutation.key );\n                if ( !signal ) continue;\n                groupings.add( signal.subscribers, mutation );\n                signal.refresh( mutation.value );\n            }\n            // Dispatch to runtimes...\n            const runtimesMap = !groupings.map.size ? groupings.map : [ ...groupings.map ].sort( ( a, b ) => a.$serial > b.$serial ? -1 : 1 );\n            //const runtimesMap = groupings.map;\n            for ( const [ runtime, autoruns ] of runtimesMap ) {\n                if ( runtime.state === 'aborted' ) continue;\n                runtime.schedule( ...autoruns );\n            }\n        }, { recursions: 'force-sync' } );\n    }\n\n    refresh( newState ) {\n        this.state = newState;\n        for ( const [ name, signal ] of this.signals ) {\n            signal.refresh( Observer.get( this.state ?? {}, name ) );\n        }\n        this.watchMode();\n    }\n\n}", "\n/**\n * @import\n */\nimport Signal from './Signal.js';\n\nexport default class Scope extends Signal {\n\n    symbols = new Map;\n    constructor( context, type, state = undefined ) {\n        super( context, type, state || Object.create( null ) );\n    }\n\n}", "\n/**\n * @import\n */\nimport Observer from '@webqit/observer';\nimport { _await, _call } from '../util.js';\nimport EventTarget from './EventTarget.js';\nimport Scope from './Scope.js';\n\nexport default class Autorun extends EventTarget {\n\n    state;\n\n    constructor( context, type, spec, serial, scope, closure ) {\n        super();\n        // We are to be managed by context\n        context?.once( this );\n        this.context = context;\n        this.type = type;\n        this.spec = spec || {};\n        this.scope = scope;\n        if ( context?.scope !== scope ) {\n            // It's own scope, so we manage it\n            this.manage( scope );\n        }\n        this.serial = serial;\n        if ( closure ) { this.closure = closure; }\n        if ( context?.type === 'iteration' ) { this.path = context.path.concat( this.spec.index ); }\n        else if ( context?.type === 'round' ) { this.path = context.path.concat( this.serial ); }\n        else { this.path = ( context?.path || [] ).slice( 0, -1 ).concat( this.serial ); }\n        this.flowControl = new Map;\n    }\n\n    get runtime() { return this.context.runtime; }\n\n    contains( node ) { return this === node.context || ( node.context && this.contains( node.context ) ); }\n\n    order( node ) {\n        if ( !node ) return this;\n        const [ a, b ] = node.path.length < this.path.length ? [ node, this ] : [ this, node ];\n        return a.path.reduce( ( prev, key, i ) => {\n            return prev && key <= b.path[ i ];\n        }, true ) && a || b;\n    }\n\n    beforeExecute() {\n        this.state = 'running';\n        // Get record and reset\n        const flowControlBefore = this.flowControl;\n        this.flowControl = new Map;\n        return flowControlBefore;\n    }\n\n    execute( callback = null ) {\n        this.runtime.thread.unshift( this );\n        return _await( this.beforeExecute(), stateBefore => {\n            return _call( this.closure, this, this, ( returnValue, exception ) => {\n                if ( exception ) return this.throw( exception, [ this.serial, this.context?.serial ], exception.code );\n                if ( this.spec.complete ) { returnValue = this.spec.complete( returnValue, this ); }\n                this.afterExecute( stateBefore );\n                this.runtime.thread.shift();\n                return callback ? callback( returnValue, this ) : returnValue;\n            } );\n        } );\n    }\n\n    throw( e, serials, errorCode ) {\n        if ( this.type === 'function' && [ 'HandlerFunction', 'FinalizerFunction' ].includes( this.$params.executionMode ) ) {\n            // Hoist control further above the context that handed it to us\n            return this.$params.lexicalContext.throw( e, serials, errorCode );\n        } else if ( this.spec.handler ) return this.spec.handler( e );\n        else if ( this.type !== 'function' && this.context ) return this.context.throw( e, serials, errorCode );\n        if ( e.cause ) throw e;\n        // Message\n        const message = `${ e.message || e }`;\n        const $message = errorCode !== null ? `[${ errorCode }]: ${ message }` : message;\n        // Cause\n        const cause = serials.map( serial => serial !== -1 && this.extractSource( serial, true ) ).filter( x => x );\n        cause.push( { source: this.runtime.$params.originalSource } );\n        // Type\n        const ErrorClass = globalThis[ e.name ];\n        const error = new ( ErrorClass || Error )( $message, { cause } );\n        // File\n        const fileName = this.runtime.$params.sourceType === 'module' && this.$params.experimentalFeatures !== false && this.$params.exportNamespace || this.$params.fileName;\n        if ( fileName ) { error.fileName = fileName; }\n        if ( errorCode ) { error.code = errorCode; }\n        throw error;\n    }\n\n    afterExecute( flowControlBefore ) {\n        this.state = 'complete';\n        // Compare records... and hoist differences\n        const flowControlAfter = this.flowControl;\n        if ( this.spec.finalizer ) this.spec.finalizer();\n        // Handle downstream\n        this.handleDownstream( flowControlAfter.size, flowControlBefore.size );\n        this.handleRightstream( flowControlAfter.size, flowControlBefore.size );\n        for ( const cmd of [ 'break', 'continue', 'return' ] ) {\n            if ( flowControlAfter.has( cmd ) && !flowControlAfter.get( cmd ).endpoint ) { this.hoistFlowControl( cmd, flowControlAfter.get( cmd ).arg ); }\n            else if ( flowControlBefore.has( cmd ) && !flowControlBefore.get( cmd ).endpoint ) { this.hoistFlowControl( cmd, flowControlBefore.get( cmd ).arg, true ); }\n        }\n    }\n\n    typed( as, value, name = undefined ) {\n        const valueType = Array.isArray( value ) ? 'array' : ( value === null ? 'null' : typeof value );\n        if ( valueType === as || ( as === 'iterable' && value?.[ Symbol.iterator ] ) || ( as === 'desctructurable' && ![ 'undefined', 'null' ].includes( valueType ) ) ) return value;\n        if ( as === 'iterable' ) { throw new Error( `value is not iterable.` ); }\n        if ( as === 'desctructurable' ) { throw new Error( ( name ? `Cannot access ${ name }; ` : '' ) + `object not desctructurable.` ); }\n        throw new Error( `value must be of type ${ as }.` );\n    }\n\n    let( name, serial, closure, spec = {} ) { return this.var( name, serial, closure, { ...spec, kind: 'let' } ); }\n\n    const( name, serial, closure, spec = {} ) { return this.var( name, serial, closure, { ...spec, kind: 'const' } ); }\n\n    var( name, serial, closure, spec = {} ) {\n        spec = { kind: 'var'/* as default */, ...spec };\n        // Uninitialized declarations like: let a;\n        if ( !closure ) closure = () => undefined;\n        const $closure = !spec.restOf ? closure : ( ...args ) => {\n            try { return closure( ...args ); }\n            catch( e ) { throw new Error( `Cannot declare ${ name }; ${ e.message }` ); }\n        };\n        const complete = ( returnValue, autorun ) => {\n            let scope = autorun.scope;\n            if ( spec.kind === 'var' ) {\n                //let scope = this.runtime.scope;\n                // For plain scripts, hoist all the way to the global scope... or somewhere before where its been defined\n                while ( ![ 'module', 'function' ].includes( scope.type ) && !Observer.has( scope.state, name ) && scope.context ) {\n                    scope = scope.context;\n                }\n            } else if ( scope.type === 'this' && scope.context ) {\n                // We're in a script or module program. scope.context is either going to be 'env' or 'module'\n                scope = scope.context;\n            }\n            let symbolState = scope.symbols.get( name );\n            if ( symbolState && ( symbolState.kind !== spec.kind || ( spec.kind === 'let' && symbolState.serial !== serial ) ) ) {\n                throw new Error( `Identifier \"${ name }\" has already been declared.` );\n            }\n            symbolState?.reader?.abort(); // Any previous reader? Type \"var\" cannot rely on autorun lifecycle cleanup\n            symbolState = { serial, kind: spec.kind }; // New state!\n            let assignedValue = returnValue;\n            if ( spec.restOf ) {\n                if ( spec.type === 'array' ) {\n                    assignedValue = [];\n                } else { assignedValue = {}; }\n                symbolState.reader = Observer.map( returnValue, assignedValue, { except: spec.restOf, spread: spec.type === 'array' } );\n                autorun.once( symbolState.reader ); // Lifecycle cleanup\n            }\n            scope.symbols.set( name, symbolState );\n            Observer.set( scope.state, name, assignedValue );\n            return assignedValue;\n        };\n        return this.autorun( spec.kind, { complete, ...spec }, serial, $closure );\n    }\n\n    update( name, closure, spec = {} ) {\n        // Find lexical scope\n        let lexicalScope = this.scope;\n        while( lexicalScope && !Observer.has( lexicalScope.state, name ) ) { lexicalScope = lexicalScope.context; }\n        // Validation\n        if ( !lexicalScope ) { throw new ReferenceError( `${ name } is not defined.` ); }\n        let symbolState = lexicalScope.symbols.get( name );\n        if ( symbolState?.kind === 'const' ) { throw new ReferenceError( `Assignment to constant variable \"${ name }\".` ); }\n        const valueBefore = Observer.get( lexicalScope.state, name );\n        const $closure = !spec.restOf ? closure : ( ...args ) => {\n            try { return closure( ...args ); }\n            catch( e ) { throw new Error( `Cannot update ${ name }; ${ e.message }` ); }\n        };\n        return _call( $closure, undefined, valueBefore, ( returnValue, exception ) => {\n            if ( exception ) return this.throw( exception, [ this.serial ] );\n            // Operation\n            symbolState?.reader?.abort(); // Any previous reader?\n            let assignedValue = returnValue;\n            if ( spec.restOf ) {\n                symbolState = symbolState || {}; // New state!\n                if ( spec.type === 'array' ) {\n                    assignedValue = [];\n                } else { assignedValue = {}; }\n                symbolState.reader = Observer.map( returnValue, assignedValue, { except: spec.restOf, spread: spec.type === 'array' } );\n                this.once( symbolState.reader ); // Lifecycle cleanup\n            }\n            Observer.set( lexicalScope.state, name, assignedValue );\n            return [ 'postinc', 'postdec' ].includes( spec.kind ) ? valueBefore : assignedValue;\n        } );\n    }\n\n    ref( name, ...rest ) {\n        let depth = 0, hint = {};\n        if ( typeof rest[ 0 ] === 'number' ) {\n            depth = rest.shift();\n            hint = rest.shift() || {};\n        } else if ( typeof rest[ 0 ] === 'object' ) {\n            hint = rest.shift();\n        }\n        // Find lexical scope\n        let lexicalScope = this.scope;\n        while( lexicalScope && !Observer.has( lexicalScope.state, name ) ) {\n            lexicalScope = lexicalScope.context;\n        }\n        // Not found?\n        if ( !lexicalScope ) {\n            if ( hint.isTypeCheck ) return;\n            throw new Error( `${ name } is not defined.` );\n        }\n        // Bind now?\n        const kind = lexicalScope.symbols.get( name )?.kind;\n        const baseSignal = lexicalScope.signal( name, kind );\n        if ( hint.typed ) { this.typed( hint.typed, baseSignal.state, name ); }\n        return this.autobind( baseSignal, depth, hint );\n    }\n\n    obj( val, ...rest ) {\n        let depth = 0, hint = {};\n        if ( typeof rest[ 0 ] === 'number' ) {\n            depth = rest.shift();\n            hint = rest.shift() || {};\n        } else if ( typeof rest[ 0 ] === 'object' ) {\n            hint = rest.shift();\n        }\n        return this.autobind( this.runtime.$objects.signal( val, 'object' ), depth, hint );\n    }\n\n    autobind( baseSignal, depth, hint ) {\n        const quantumMode = [ 'QuantumProgram', 'QuantumFunction' ].includes( this.runtime.$params.executionMode );\n        const isConst = baseSignal.type  === 'const';\n        const isRuntime = this === this.runtime;\n        const isAborted = this.state === 'aborted';\n        const isStatic = this.spec.static;\n        const nowRunning = this;\n        return ( function proxy( signal, depth ) {\n            // Do bindings first\n            if ( quantumMode && !isStatic && !isConst && !isRuntime && !isAborted ) {\n                signal.subscribe( nowRunning );\n            }\n            // Return bare value here?\n            if ( !depth || !signal.state || typeof signal.state !== 'object' ) {\n                let returnValue = signal.state;\n                if ( typeof signal.state === 'function' && !/^class\\s?/.test(Function.prototype.toString.call(signal.state)) ) {\n                    // We're returning a proxy for functions instead of: signal.context.state[ signal.name ].bind( signal.context.state );\n                    returnValue = Observer.proxy( signal.state, { membrane: signal } );\n                }\n                return returnValue;\n            }\n            // Return dynamic value\n            let propertyAlreadyBound;\n            return Observer.proxy( signal.state, {}, traps => ( {\n                ...traps,\n                get( target, name, receiver = null ) {\n                    // Constructs are always going to for one property access: ref('a').b, and we need to prevent .c from creating a binding\n                    if ( propertyAlreadyBound ) { return traps.get( target, name, receiver ); }\n                    propertyAlreadyBound = true;\n                    return proxy( signal.signal( name ), depth - 1 );\n                },\n            } ) );\n        } )( baseSignal, depth );\n    }\n\n    autorun( type, ...rest ) {\n        let closure = rest.pop();\n        const serial = rest.pop();\n        const spec = rest.pop() || {};\n        // Handle certain types with their own class\n        let AutorunClass = Autorun, scope = this.scope;\n        if ( type === 'iteration' ) {\n            const staticDefs = this.runtime.constructor;\n            AutorunClass = closure.constructor.name === 'AsyncFunction' ? staticDefs.AutoAsyncIterator : staticDefs.AutoIterator;\n        }\n        if ( [ 'block', 'switch', 'iteration' ].includes( type ) ) { scope = new Scope( scope, type ); }\n        // Instantiate\n        const autorun = new AutorunClass( this, type, spec, serial, scope, closure );\n        if ( type === 'downstream' ) {\n            // Declare a \"downstream\" for the context\n            this.downstream = autorun;\n            // For now\n            if ( this.flowControlApplied() ) return;\n        } else if ( this.type === 'switch' && this.breakpoint ) {\n            return;\n        }\n        // Push stack and execute\n        return autorun.execute();\n    }\n\n    function( executionMode, functionKind, serial, $qFunction ) {\n        // Declare in current scope\n        if ( functionKind === 'Declaration' ) {\n            Observer.set( this.scope.state, $qFunction.name, $qFunction );\n        }\n        // Metarise function\n        const _this = this;\n        Object.defineProperty( $qFunction, 'toString', { value: function( $qSource = false ) {\n            if ( $qSource && executionMode === 'QuantumFunction' ) return Function.prototype.toString.call( $qFunction );\n            const originalSource = _this.runtime.extractSource( serial );\n            return originalSource.startsWith( 'static ' ) ? originalSource.replace( 'static ', '' ) : originalSource;\n        } } );\n        return $qFunction;\n    }\n\n    class( classKind, $class, methodsSpec ) {\n        // Declare in current scope\n        if ( classKind === 'Declaration' ) {\n            Observer.set( this.scope.state, $class.name, $class );\n        }\n        // Metarise methods\n        methodsSpec.forEach( ( { name, isQuantumFunction, static: isStatic, serial } ) => {\n            this.function( isQuantumFunction && 'QuantumFunction' || 'RegularFunction', 'Expression', serial, isStatic ? $class[ name ] : $class.prototype[ name ] )\n        } );\n        return $class;\n    }\n\n    async import( ...args ) { return this.runtime.import( ...args ); }\n\n    async export( ...args ) { return this.runtime.export( ...args ); }\n\n    continue( label ) { return this.applyFlowControl( 'continue', label ); }\n\n    break( label ) { return this.applyFlowControl( 'break', label ); }\n\n    return( arg ) { return this.applyFlowControl( 'return', arg ); }\n\n    applyFlowControl( cmd, arg, unset = false ) {\n        const sizeBefore = this.flowControl.size;\n        if ( unset ) { this.flowControl.delete( cmd ); }\n        else { this.flowControl.set( cmd, { arg } ); }\n        if ( this.type === 'round' ) { this.context.breakpoint = this; }\n        if ( this.type === 'round' && [ 'break', 'continue' ].includes( cmd ) && arg === this.context?.spec.label ) {\n            if ( !unset ) { this.flowControl.get( cmd ).endpoint = true; }\n            if ( this.state !== 'running' ) { this.handleRightstream( this.flowControl.size, sizeBefore ); }\n            return;\n        }\n        if ( this.context?.type === 'switch' && cmd === 'break' && !arg ) {\n            if ( !unset ) { this.flowControl.get( cmd ).endpoint = true; }\n            this.context.breakpoint = this;\n            return;\n        }\n        // Notice that no hoisting and no \"downstream\" handling if in active scope\n        // as that would be done at after() hook!\n        if ( this.state !== 'running' ) {\n            this.handleDownstream( this.flowControl.size, sizeBefore );\n            this.hoistFlowControl( ...arguments );\n        }\n    }\n\n    hoistFlowControl( ...args ) { return this.context?.applyFlowControl( ...args ); }\n\n    flowControlApplied( cmd, arg ) {\n        if ( !arguments.length ) return this.flowControl.size || false;\n        if ( arguments.length === 1 ) return this.flowControl.has( cmd );\n        return this.flowControl.get( cmd )?.arg === arg;\n    }\n\n    handleDownstream( sizeAfter, sizeBefore ) {\n        let downstream;\n        if ( ![ 'block' ].includes( this.type ) // If this is \"downstream\", the \"downstream\" you see from parent scope will be self\n        || !( downstream = this.context?.downstream ) ) return;\n        if ( sizeAfter ) { downstream.abort(); }\n        else if ( sizeBefore ) {\n            downstream.state = 'resuming'; // Just something other than \"aborted\"\n            this.runtime.schedule( downstream );\n        }\n    }\n\n    handleRightstream( sizeAfter, sizeBefore ) {\n        if ( this.type !== 'round' ) return;\n        let nextRound = this, returnees = new Set;\n        while( nextRound = nextRound.nextRound ) {\n            if ( sizeAfter ) { nextRound.abort(); }\n            else if ( sizeBefore && nextRound.state !== 'inert' ) {\n                nextRound.state = 'resuming'; // Just something other than \"aborted\"\n                returnees.add( nextRound );\n            }\n        }\n        if ( returnees.size ) { this.runtime.schedule( ...returnees ); }\n        if ( !sizeAfter && sizeBefore ) {\n            this.runtime.on( 'reflection', () => {\n                if ( this.context.iterating ) return;\n                this.context.iterate();\n            }, { once: true } );\n        }\n    }\n\n    abort( total = false ) {\n        if ( total ) {\n            if ( this.context?.breakpoint === this ) { delete this.context.breakpoint; }\n            this.flowControl.clear();\n        }\n        this.state = total ? 'inert' : 'aborted';\n        return super.abort( total );\n    }\n    \n}", "\n/**\n * @import\n */\nimport { _await } from '../util.js';\nimport Observer from '@webqit/observer';\nimport Autorun from './Autorun.js';\nimport Scope from './Scope.js';\n\nexport default class AutoIterator extends Autorun {\n\n    rounds = new Map;\n\n    constructor( context, type, spec, serial, scope, closure ) {\n        spec.$closure = closure;\n        super( context, type, spec, serial, scope );\n        this.manage( () => {\n            delete this.breakpoint;\n            this.rounds.clear();\n        } );\n    }\n\n    pseudorun( callback ) {\n        this.runtime.iThread.unshift( this );\n        return _await( callback(), returnValue => {\n            this.runtime.iThread.pop();\n            return returnValue;\n        } );\n    }\n\n    createIterator() {\n        if ( this.spec.kind === 'for-in' ) return ( function* () { for ( let key in this.iteratee ) yield key; } ).call( this );\n        if ( this.spec.kind === 'for-of' ) return ( function* () { for ( let val of this.iteratee ) yield val; } ).call( this );\n        return { next: () => ({ done: !this.pseudorun( () => this.spec.test( this ) ), }), };\n    }\n\n    closure() {\n        if ( [ 'for-of', 'for-in' ].includes( this.spec.kind ) ) {\n            [ this.production, this.iteratee ] = this.spec.parameters( this );\n            this.iterator = this.createIterator();\n            this.iterator.original = true;\n            this.watchMode();\n        } else {\n            if ( this.spec.kind === 'for' ) { this.spec.init( this ); }\n            this.iterator = this.createIterator();\n        }\n        this.iterate();\n    }\n\n    terminated() { return this.breakpoint && !this.breakpoint.flowControlApplied( 'continue', this.spec.label ) && this.breakpoint.flowControlApplied(); }\n    advance() { if ( this.spec.kind === 'for' ) { this.pseudorun( () => this.spec.advance( this ) ); } }\n\n    iterate() {\n        this.iterating = true;\n        const $test = () => !this.terminated()/* must come before */ && !( this.cursor = this.iterator.next() ).done;\n        const $round = () => {\n            const round = this.createRound( this.cursor.value );\n            round.execute();\n            this.advance();\n        };\n        if ( this.spec.kind === 'do-while' ) { do $round(); while ( $test() ); }\n        else { while ( $test() ) $round(); }\n        this.iterating = false;\n    }\n\n    createRound( production ) {\n        const index = this.rounds.size, spec = { index };\n        // The scope instance starts life with the variables that the iteration round should see.\n        const state = [ 'for-in', 'for-of' ].includes( this.spec.kind ) ? { [ this.production ]: production } : { ...this.scope.state };\n        const scope = new Scope( this.scope, 'round', state );\n        this.scope.symbols.forEach( ( meta, name ) => { scope.symbols.set( name, meta ); } );\n        const round = new Autorun( this, 'round', spec, this.serial, scope, this.spec.$closure );\n        const key = this.spec.kind === 'for-in' ? production : index;\n        this.rounds.set( key, round );\n        if ( this.lastRound ) {\n            this.lastRound.nextRound = round;\n            round.prevRound = this.lastRound;\n        }\n        this.lastRound = round;\n        return round;\n    }\n\n    watchMode() {\n        if ( this.spec.static ) return;\n        const handleMutations = ( mutations, currentCursor ) => {\n            const deletions = new Set, extension = new Set;\n            for ( const mutation of mutations ) {\n                if ( Array.isArray( this.iteratee ) && mutation.key === 'length' ) continue;\n                const production = this.spec.kind === 'for-in' ? mutation.key : mutation.value;\n                const key = this.spec.kind === 'for-in' ? mutation.key : parseInt( mutation.key );\n                const existingRound = this.rounds.get( key ); // Note that we're not using has()\n                if ( existingRound ) {\n                    // This is an existing round\n                    Observer.set( existingRound.scope.state, this.production, production );\n                    if ( mutation.type === 'delete' ) {\n                        this.rounds.set( key, undefined ); // No actual deletions here as this.rounds.size is our index\n                        if ( existingRound.prevRound ) { existingRound.prevRound.nextRound = existingRound.nextRound; }\n                        if ( existingRound.nextRound ) { existingRound.nextRound.prevRound = existingRound.prevRound; }\n                        // Fired above for the last time and now should die\n                        deletions.add( existingRound );\n                    }\n                } else if ( mutation.type !== 'delete' && !mutation.isUpdate ) {\n                    // This is a brand new entry\n                    // Deletions and updates that didn't have an existing round above are obviously awaiting visit from a paused loop\n                    if ( this.spec.kind === 'for-of' && this.iterator.original && !currentCursor.done ) continue; // A live iteration is going on\n                    extension.add( production );\n                }\n            }\n            this.runtime.on( 'reflection', () => {\n                deletions.forEach( deletion => deletion.abort( true ) );\n            }, { once: true } );\n            if ( extension.size ) {\n                this.iterator = ( function* ( parent ) {\n                    yield* parent;\n                    yield* extension;\n                } )( this.iterator );\n                if ( currentCursor.done ) { this.iterate(); }\n            }\n        };\n        this.once( Observer.observe( this.iteratee, mutations => {\n            _await( this.cursor, currentCursor => handleMutations( mutations, currentCursor ) );\n        } ) );\n    }\n    \n}", "\n/**\n * @import\n */\nimport AutoIterator from './AutoIterator.js';\n\nexport default class AutoAsyncIterator extends AutoIterator {\n\n    async createIterator() {\n        if ( this.spec.kind === 'for-in' ) return ( function* () { for ( let key in this.iteratee ) yield key; } ).call( this );\n        if ( this.spec.kind === 'for-of' ) return ( function* () { for ( let val of this.iteratee ) yield val; } ).call( this );\n        return { next: async () => ({ done: !( await this.pseudorun( () => this.spec.test( this ) ) ), }), };\n    }\n\n    async closure() {\n        if ( [ 'for-of', 'for-in' ].includes( this.spec.kind ) ) {\n            [ this.production, this.iteratee ] = await this.spec.parameters( this );\n            this.iterator = await this.createIterator();\n            this.iterator.original = true;\n            this.watchMode();\n        } else {\n            if ( this.spec.kind === 'for' ) { await this.spec.init( this ); }\n            this.iterator = await this.createIterator();\n        }\n        await this.iterate();\n    }\n\n    async iterate() {\n        let cursor; this.iterating = true;\n        const $test = async () => ( !this.terminated()/* must come before */ && ( this.cursor = this.iterator.next() ) && ( cursor = await this.cursor ) && !cursor.done );\n        const $round = async () => {\n            const round = this.createRound( cursor.value );\n            await round.execute();\n            await this.advance();\n        };\n        if ( this.spec.kind === 'do-while' ) { do await $round(); while ( await $test() ); }\n        else { while ( await $test() ) await $round(); }\n        this.iterating = false;\n    }\n\n}", "\n/**\n * @imports\n */\nimport Observer from \"@webqit/observer\";\n\nexport default class State {\n\n    constructor( runtime ) {\n        Object.defineProperty( this, 'runtime', { value: runtime } );\n        const events = { statechange: () => { Observer.defineProperty( this, 'value', { value: runtime.flowControl.get( 'return' )?.arg, enumerable: true, configurable: true } ); }, };\n        for ( const name in events ) {\n            runtime.on( name, events[ name ] );\n            events[ name ]();\n        }\n        if ( runtime.$params.sourceType === 'module' ) {\n            Object.defineProperty( this, 'exports', { value: runtime.exports } );\n        }\n    }\n    \n    dispose() { return this.runtime.abort( true ); }\n\n}\n", "import Observer from '@webqit/observer';\nimport { _await } from '../util.js';\nimport { registry } from './hot-module-registry.js';\nimport AutoAsyncIterator from './AutoAsyncIterator.js';\nimport AutoIterator from './AutoIterator.js';\nimport Autorun from './Autorun.js';\nimport Scope from './Scope.js';\nimport State from './State.js';\n\nexport default class Runtime extends Autorun {\n\n    static AutoAsyncIterator = AutoAsyncIterator;\n    static AutoIterator = AutoIterator;\n\n    locations = [];\n    queue = new Set;\n    thread = [];\n    iThread = [];\n\n    constructor( context, type, params, scope, closure ) {\n        const { $serial = 0, spec, ...$params } = params;\n        super( context, type, spec, -1, scope, closure );\n        this.$serial = $serial;\n        this.$params = $params;\n        // Random object\n        this.$objects = new Scope( undefined, 'objects' );\n        this.manage( this.$objects );\n        // Imports/exports\n        this.exports = Object.create( null );\n        this.$promises = { imports: [], exports: [] };\n        this.manage( () => {\n            Observer.deleteProperties( this.exports, Object.keys( this.exports ) );\n            this.$promises.imports.splice( 0 );\n            this.$promises.exports.splice( 0 );\n        } );\n    }\n\n    extractSource( serial, full = false ) {\n        const [ [ locStart, line, column ], [ locEnd ] ] = this.locations[ serial ];\n        const expr = this.$params.originalSource.slice( locStart, locEnd );\n        return full ? { expr, line, column } : expr;\n    }\n\n    get runtime() { return this; }\n\n    get nowRunning() { return this.thread[ 0 ]; }\n\n    schedule( ...autoruns ) {\n        // Determine if active beforehand\n        const isActive = this.queue.size;\n        for ( const autorun of autoruns ) { this.queue.add( autorun ); }\n        if ( isActive ) return;\n        // Event Loop\n        this.flowControlDirty = false;\n        return ( function nextTick( prevReturn, current ) {\n            // Find following...\n            let following;\n            for ( const autorun of this.queue ) {\n                // If autorun is higher in source ignore\n                // Or a parent autorun has already been run in this event loop which started by aborting all descendants\n                // Or the unique situation with \"for\" loops where \"test\" and \"update\" expressions tend to self-schedule the AutoIteration instance.\n                if ( current && current.order( autorun ) !== current || [ 'aborted', 'running' ].includes( autorun.state ) || this.iThread[ 0 ]?.contains( autorun ) ) {\n                    this.queue.delete( autorun ); continue;\n                }\n                // Get $autorun to be very next to _this.currentMicro\n                following = following ? following.order( autorun ) : autorun;\n                if ( !current ) { current = following; }\n            }\n            // Fire events\n            if ( !following ) {\n                this.fire( 'reflection' );\n                if ( this.flowControlApplied() ) { this.fire( 'statechange' ); }\n                return prevReturn;\n            }\n            // Execute following...\n            following.abort();\n            // Evaluate and possibly await...\n            return following.execute( returnValue => {\n                // Remove from queue\n                this.queue.delete( following );\n                // Next tick\n                return nextTick.call( this, returnValue, following );\n            } );\n        } ).call( this, undefined, this.nowRunning );\n    }\n\n    execute( callback = null ) {\n        return super.execute( returnValue => {\n            const quantumMode = [ 'QuantumProgram', 'QuantumFunction' ].includes( this.$params.executionMode );\n            const actualReturnValue = quantumMode\n                ? new State( this )\n                : this.flowControl.get( 'return' )?.arg;//returnValue;\n            return callback ? callback( actualReturnValue, this ) : actualReturnValue;\n        } );\n    }\n\n    spawn( executionMode, thisContext, closure, lexicalContext = null ) {\n        const context = this.nowRunning || lexicalContext || this;\n        const params = { ...this.$params, $serial: this.$serial + 1, executionMode, lexicalContext };\n        const scope = new Scope( context.scope, 'function', { [ 'this' ]: thisContext } );\n        const subRuntime = new this.constructor( context, 'function', params, scope, closure );\n        return subRuntime.execute();\n    }\n\n    async import( ...args ) {\n        const source = args.pop();\n        const $source = typeof source === 'string' ? { source } : source;\n        const onload = modules => {\n            if ( $source.forExport || $source.isDynamic ) return modules;\n            this.assignModules( args, this.scope.state, modules, source.serial );\n        };\n        if ( this.$params.experimentalFeatures !== false && registry[ $source.source ] ) {\n            return onload( registry[ $source.source ] );\n        }\n        const promise = ( async () => {\n            const moduleName = this.$params.sourceType === 'module' && this.$params.experimentalFeatures !== false && this.$params.exportNamespace || this.$params.fileName;\n            try { return onload( { ...await import( $source.source ) } ); } catch( e ) {\n                if ( e.code === 'ERR_MODULE_NOT_FOUND' ) { this.throw( new Error( `Cannot find module \"${ $source.source }\"${ moduleName ? ` imported at \"${ moduleName }\"` : '' }.` ), [ $source.serial ], e.code ); }\n                else this.throw( e, [ $source.serial ], e.code );\n            }\n        } )();\n        if ( !$source.isDynamic ) {\n            this.$promises[ $source.forExport ? 'exports' : 'imports' ].push( promise );\n        }\n        return promise;\n    }\n\n    async export( ...args ) {\n        const source = !Array.isArray( args[ args.length - 1 ] ) ? args.pop() : null;\n        // Export from source or from top-level scope!\n        const modules = source ? await this.import( { ...source, forExport: true } ) : this.scope.state;\n        // Assign imported modules to exports object\n        this.assignModules( args, this.exports, modules, source?.serial );\n    }\n\n    assignModules( specifiers, target, source, sourceSerial = null ) {\n        const observeList = [];\n        const quantumMode = [ 'QuantumProgram', 'QuantumFunction' ].includes( this.$params.executionMode );\n        for ( const [ local, serial, alias ] of specifiers ) {\n            if ( local === '*' && alias ) {\n                ( quantumMode ? Observer : Reflect ).set( target, alias, source );\n                continue;\n            }\n            if ( !Observer.has( source, local ) ) { this.throw( new Error( `The requested module does not provide an export named \"${ local }\".` ), [ serial, sourceSerial ] ); }\n            ( quantumMode ? Observer : Reflect ).set( target, alias || local, Observer.get( source, local ) );\n            observeList.push( [ local, serial, alias ] );\n        }\n        if ( !observeList.length || !quantumMode ) return;\n        this.once( Observer.observe( source, mutations => {\n            for ( const [ local, /* serial */, alias ] of observeList ) {\n                for ( const mutation of mutations ) {\n                    if ( local === '*' ) { Observer.set( target, mutation.key, mutation.value ); }\n                    else if ( mutation.key === local ) { Observer.set( target, alias || local, mutation.value ); }                    \n                }\n            }\n        } ) );\n    }\n    \n    afterExecute( ...args ) {\n        if ( this.$params.sourceType === 'module' && this.$params.experimentalFeatures !== false && this.$params.exportNamespace ) {\n            registry[ this.$params.exportNamespace ] = this.exports;\n            this.once( () => { delete registry[ this.$params.exportNamespace ]; } );\n        }\n        return super.afterExecute( ...args );\n    }\n\n}", "\n/**\n * @imports\n */\nimport { _await } from '../util.js';\nimport { resolveParams } from '../params.js';\nimport Runtime from './Runtime.js';\nimport Scope from './Scope.js';\nimport State from './State.js';\n\nexport { State, Runtime }\n\nexport function $eval( sourceType, parseCompileCallback, source, params ) {\n    // params could have: env, functionParams, parserParams, compilerParams, runtimeParams\n    const { env, functionParams = [], exportNamespace, fileName } = params;\n    const { parserParams, compilerParams, runtimeParams, } = resolveParams( params );\n    const inBrowser = Object.getOwnPropertyDescriptor( globalThis, 'window' )?.get?.toString().includes( '[native code]' ) ?? false;\n    const asyncEval = [ 'async-script', 'module' ].includes( sourceType );\n\n    // Format source? Mode can be: function, async-function, script, async-script, module\n    if ( sourceType === 'module' ) {\n        parserParams.sourceType = sourceType;\n        parserParams.allowAwaitOutsideFunction = true;\n    } else if ( [ 'function', 'async-function' ].includes( sourceType ) ) {\n        // Design the actual stateful function\n        const body = `  ` + source.split( `\\n` ).join( `\\n  ` );\n        source = `return ${ sourceType === 'async-function' ? 'async ' : '' }function**(${ functionParams.join( ', ' ) }) {\\n${ body }\\n}`;\n        // The top-level program is a simple return statement as above. This return shouldn't be treated as reactive nor return a state object, but the plain value\n        parserParams.executionMode = 'RegularProgram';\n    } else if ( ![ 'script', 'async-script' ].includes( sourceType ) ) {\n        throw new Error( `Unrecognized sourceType specified: \"${ sourceType }\".` );\n    }\n\n    // Proceed to parse-compile\n    compilerParams.sourceType = sourceType;\n    parserParams.inBrowser = inBrowser;\n    compilerParams.base64 = asyncEval && inBrowser && `export default async function(%0) {%1}`;\n    const compilation = parseCompileCallback( source, { parserParams, compilerParams } );\n    if ( compilation instanceof Promise && ![ 'async-function', 'async-script', 'module' ].includes( sourceType ) ) {\n        throw new Error( `Parse-compile can only return a Promise for sourceTypes: async-function, async-script, module.` );\n    }\n\n    // Proceed to eval\n    runtimeParams.sourceType = sourceType;\n    runtimeParams.inBrowser = inBrowser;\n    runtimeParams.exportNamespace = exportNamespace;\n    runtimeParams.fileName = fileName;\n    return _await( compilation, compilation => {\n        const isFunction = [ 'function', 'async-function' ].includes( sourceType );\n        // Below, \"async-function\" would already has async in the returned function\n        // And no need to ask compilation.topLevelAwait\n        const $eval = ( $qIdentifier, source ) => {\n            if ( runtimeParams.compileFunction ) return runtimeParams.compileFunction( source.toString(), [ $qIdentifier ] );\n            if ( compilerParams.base64 ) { /* @experimental */\n                // Save to a variable to fool bundlephobia about the import();\n                const dataUrl = `data:text/javascript;base64,${ source.toString( 'base64' ) }`;\n                const impt = () => import( dataUrl ).then( m => m.default );\n                //if ( window.webqit?.realdom?.schedule ) return window.webqit?.realdom?.schedule( 'write', impt, true );\n                return impt();\n            }\n            return new ( asyncEval ? ( async function() {} ).constructor : Function )( $qIdentifier, source.toString() );\n        };\n        return _await( $eval( compilation.identifier + '', compilation ), main => {\n            const createRuntime = ( thisContext, $env = env ) => {\n                let $main = main;\n                if ( thisContext ) { $main = $main.bind( thisContext ); }\n                // There's always a global scope\n                let contextType = 'global', scope = new Scope( undefined, contextType, globalThis );\n                // Then this, for script scope, which may also directly reflect/mutate any provided \"env\"\n                if ( sourceType.endsWith( 'script' ) || $env ) { contextType = 'env'; scope = new Scope( scope, contextType, $env ); }\n                // Or this for module scope. And where \"env\" was provided, the \"env\" scope above too\n                if ( sourceType === 'module' ) { contextType = 'module'; scope = new Scope( scope, contextType ); }\n                if ( typeof thisContext !== 'undefined' ) { scope = new Scope( scope, 'this', { [ 'this' ]: thisContext } ); }\n                return new Runtime( undefined, contextType, { ...runtimeParams, originalSource: compilation.originalSource, executionMode: compilation.isQuantumProgram && 'QuantumProgram' || 'RegularProgram' }, scope, $main );\n            };\n            return isFunction\n                ? createRuntime().execute() // Produces the actual stateful function designed above\n                : { createRuntime, compilation };\n        } );\n    } );\n}", "\n/**\n * @imports\n */\nimport { _await } from './util.js';\nimport { $eval, State } from './runtime/index.js';\n\n/**\n * @Script\n */\nexport default class AbstractQuantumScript {\n    constructor( ...args ) {\n        const $static = this.constructor;\n        const params = typeof args[ args.length - 1 ] === 'object' ? args.pop() : {};\n        const source = args.pop() || '';\n        this.$program = $eval( $static.sourceType, $static.parseCompileCallback, source, params );\n    }\n\n    execute() { return _await( this.$program, ( { createRuntime } ) => createRuntime().execute() ); }\n\n    bind( thisContext, env = undefined ) { return _await( this.$program, ( { createRuntime } ) => createRuntime( thisContext, env ) ); }\n\n    toString( $qSource = false ) {\n        return _await( this.$program, ( { compilation } ) => {\n            if ( $qSource ) return compilation + '';\n            return compilation.originalSource;\n        } );\n    }\n}", "\n/**\n * @imports\n */\nimport * as QuantumJS from './index.js';\n\n// As globals\nif ( !globalThis.webqit ) { globalThis.webqit = {}; }\nObject.assign( globalThis.webqit, QuantumJS );\n"],
  "mappings": "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AAI,GAAI,GAAI,GAAI,GAAI,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,GAAI,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,IAAK,IAAK,IAAK,GAAI,IAAK,KAAM,GAAI,GAAI,KAAM,KAAM,IAAK,KAAM,IAAK,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,GAAI,IAAK,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,KAAM,EAAG,KAAM,GAAI,EAAG,KAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,IAAK,KAAM,I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",
  "names": ["src_exports", "__export", "AsyncQuantumFunction", "AsyncQuantumScript", "src_default", "QuantumAsyncFunction", "QuantumAsyncScript", "QuantumFunction", "QuantumModule", "QuantumScript", "State", "main_exports", "__export", "any", "apply", "batch", "construct", "defineProperties", "defineProperty", "deleteProperties", "deleteProperty", "get", "getOwnPropertyDescriptor", "getOwnPropertyDescriptors", "getPrototypeOf", "has", "intercept", "isExtensible", "map", "observe", "ownKeys", "path", "preventExtensions", "reduce", "set", "setPrototypeOf", "subtree", "isObject_default", "val", "getType_default", "val", "isArray_default", "val", "isTypeFunction_default", "val", "isNull_default", "val", "isUndefined_default", "val", "isTypeObject_default", "val", "isTypeFunction_default", "isEmpty_default", "val", "isNull_default", "isUndefined_default", "isTypeObject_default", "isFunction_default", "val", "isTypeFunction_default", "isString_default", "val", "isTypeArray_default", "val", "isString_default", "isUndefined_default", "wq", "obj", "namespaces", "WQInternals", "_ns", "_wq", "from_default", "val", "castObject", "isArray_default", "isObject_default", "isEmpty_default", "isTypeArray_default", "_wq", "target", "args", "wq", "_await", "value", "callback", "env", "Registration", "registry", "dfn", "ListenerRegistration", "Registration", "env", "events", "matches", "filter", "from_default", "event", "$ret", "_await", "ret", "recursions", "Registry", "target", "registration", "_entry", "type", "createIfNotExists", "namespace", "isTypeObject_default", "getType_default", "ImplementationClass", "_wq", "Descriptor", "target", "dfn", "ListenerRegistry", "Registry", "target", "createIfNotExists", "namespace", "ImplementationClass", "filter", "emit", "params", "ListenerRegistration", "events", "eventsArePropertyDescriptors", "eventIsArrayMethodDescriptor", "arrayMethodName", "listeners", "snapshots", "listenersLength", "listenersAskingEventsWithPropertyDescriptors", "listenersAskingArrayMethodDescriptors", "listener", "events_with_PropertyDescriptors_with_ArrayMethodDescriptors", "events_with_PropertyDescriptors_without_ArrayMethodDescriptors", "events_without_PropertyDescriptors_with_ArrayMethodDescriptors", "events_without_PropertyDescriptors_without_ArrayMethodDescriptors", "snapshot", "event", "$event", "type", "details", "Descriptor", "callback", "returnValue", "_await", "batch", "TrapsRegistration", "Registration", "descriptor", "next", "recieved", "args", "TrapsRegistry", "Registry", "target", "createIfNotExists", "namespace", "ImplementationClass", "dfn", "TrapsRegistration", "descriptor", "defaultHandler", "$this", "next", "index", "_args", "registration", "args", "actors_exports", "__export", "accessorize", "proxy", "unaccessorize", "unproxy", "symWQOriginal", "accessorize", "target", "props", "params", "resolveTarget", "accessorizedProps", "_wq", "getDescriptorDeep", "prop", "descriptor", "proto", "accessorizeProp", "currentDescriptorRecord", "withPropertyDescriptors", "value", "currentDescriptor", "accessorization", "enumerable", "set", "get", "statuses", "unaccessorize", "unaccessorizeProp", "proxy", "extendCallback", "originalTarget", "traps", "thisArgument", "argumentsList", "apply", "newTarget", "construct", "propertyKey", "attributes", "defineProperty", "deleteProperty", "receiver", "$params", "returnValue", "isTypeObject_default", "getOwnPropertyDescriptor", "getPrototypeOf", "has", "isExtensible", "ownKeys", "preventExtensions", "prototype", "setPrototypeOf", "$traps", "$proxy", "unproxy", "Path", "path", "segments", "Subtree", "subtree", "any", "reduce", "target", "receiver", "final", "x", "params", "_isSubtree", "eat", "$params", "$isSubtree", "isSubtree", "segment", "isLastSegment", "Descriptor", "result", "args", "addTrail", "desc", "flags", "advance", "$value", "resolveObj", "_await", "isPropsList", "entry", "observe", "prop", "originalTarget", "isFunction_default", "getType_default", "isTypeObject_default", "get", "emit", "bind", "intercept", "traps", "isObject_default", "TrapsRegistry", "getOwnPropertyDescriptor", "exec", "getOwnPropertyDescriptors", "getPrototypeOf", "isExtensible", "ownKeys", "has", "isLive", "resolveProps", "props", "related", "next", "results", "_props", "_done", "defaultGet", "descriptor", "value", "_next", "accessorizedProps", "_wq", "accessorization", "trapsRegistry", "result_s", "batch", "callback", "ListenerRegistry", "map", "source", "only", "except", "sourceKeys", "k", "filteredKeys", "resolveKey", "i", "doSet", "key", "set", "defineProperty", "mutations", "m", "deleteProperty", "def", "entries", "descriptors", "defaultSet", "status", "isUpdate", "oldValue", "exists", "listenerRegistry", "opr", "defineProperties", "from_default", "defaultDel", "deleteProperties", "construct", "argumentsList", "newTarget", "apply", "thisArgument", "originalThis", "unproxy", "returnValue", "setPrototypeOf", "proto", "preventExtensions", "controller", "env", "childRegistrations", "descriptor_s", "prevRegistration", "registrationNext", "isExisting", "handlerReturnValue", "operation", "payload", "defaultExec", "obj", "assert", "probePropertyDescriptors", "Observer", "main_exports", "actors_exports", "src_default", "_call", "_function", "args", "callback", "_await", "e", "maybePromise", "_isTypeObject", "val", "_$functionArgs", "params", "source", "env", "astralIdentifierCodes", "astralIdentifierStartCodes", "nonASCIIidentifierChars", "nonASCIIidentifierStartChars", "reservedWords", "ecma5AndLessKeywords", "keywords$1", "keywordRelationalOperator", "nonASCIIidentifierStart", "nonASCIIidentifier", "isInAstralSet", "code", "set", "pos", "i", "isIdentifierStart", "astral", "isIdentifierChar", "TokenType", "label", "conf", "binop", "name", "prec", "beforeExpr", "startsExpr", "keywords", "kw", "options", "types$1", "lineBreak", "lineBreakG", "isNewLine", "nextLineBreak", "from", "end", "next", "nonASCIIwhitespace", "skipWhiteSpace", "ref", "hasOwnProperty", "toString", "hasOwn", "obj", "propName", "isArray", "wordsRegexp", "words", "codePointToString", "loneSurrogate", "Position", "line", "col", "n", "SourceLocation", "p", "start", "getLineInfo", "input", "offset", "cur", "nextBreak", "defaultOptions", "warnedAboutEcmaVersion", "getOptions", "opts", "opt", "tokens", "token", "pushComment", "array", "block", "text", "startLoc", "endLoc", "comment", "SCOPE_TOP", "SCOPE_FUNCTION", "SCOPE_ASYNC", "SCOPE_GENERATOR", "SCOPE_ARROW", "SCOPE_SIMPLE_CATCH", "SCOPE_SUPER", "SCOPE_DIRECT_SUPER", "SCOPE_CLASS_STATIC_BLOCK", "SCOPE_VAR", "functionFlags", "async", "generator", "BIND_NONE", "BIND_VAR", "BIND_LEXICAL", "BIND_FUNCTION", "BIND_SIMPLE_CATCH", "BIND_OUTSIDE", "Parser", "startPos", "reserved", "reservedStrict", "prototypeAccessors", "node", "scope", "flags", "inClassFieldInit", "plugins", "len", "cls", "parser", "pp$9", "literal", "match", "spaceAfter", "type", "tokType", "notNext", "DestructuringErrors", "refDestructuringErrors", "isAssign", "parens", "andThrow", "shorthandAssign", "doubleProto", "expr", "pp$8", "exports", "stmt", "list", "loopLabel", "switchLabel", "context", "skip", "nextCh", "ident", "after", "topLevel", "starttype", "kind", "maybeName", "keyword", "isBreak", "lab", "awaitAt", "isLet", "init$1", "startsWithLet", "isForOf", "init", "isAsync", "declarationPosition", "FUNC_STATEMENT", "FUNC_HANGING_STATEMENT", "sawDefault", "isCase", "empty$1", "clause", "simple", "i$1", "label$1", "createNewLexicalScope", "exitStrict", "isForIn", "isFor", "decl", "FUNC_NULLABLE_ID", "statement", "allowExpressionBody", "forInit", "oldYieldPos", "oldAwaitPos", "oldAwaitIdentPos", "isStatement", "oldStrict", "privateNameMap", "classBody", "hadConstructor", "element", "isPrivateNameConflicted", "constructorAllowsSuper", "ecmaVersion", "keyName", "isGenerator", "isStatic", "lastValue", "isConstructor", "checkKeyName", "allowsDirectSuper", "method", "key", "value", "field", "oldLabels", "declared", "used", "parent", "id", "curr", "computed", "fNode", "cNode", "spec", "pat", "prop", "list$1", "elt", "decls", "nodes", "first", "node$1", "node$2", "stringLiteral", "statements", "pp$7", "isBinding", "exprList", "last", "close", "allowEmpty", "allowTrailingComma", "elts", "rest", "elem", "param", "left", "bindingType", "checkClashes", "isBind", "TokContext", "isExpr", "preserveSpace", "override", "types", "pp$6", "prevType", "update", "tokenCtx", "out", "statementParens", "index", "allowed", "pp$5", "propHash", "other", "redefinition", "afterLeftParse", "ownDestructuringErrors", "oldParenAssign", "oldTrailingComma", "oldDoubleProto", "leftStartPos", "leftStartLoc", "minPrec", "logical", "coalesce", "op", "right", "sawUnary", "incDec", "isPrivateFieldAccess", "result", "base", "noCalls", "maybeAsyncArrow", "optionalChained", "chainNode", "optionalSupported", "optional", "canBeArrow", "containsEsc", "meta", "errorPos", "val", "innerStartPos", "innerStartLoc", "lastIsComma", "spreadStart", "innerEndPos", "innerEndLoc", "par", "item", "empty", "isImport", "isTagged", "curElt", "isPattern", "paramCount", "allowDirectSuper", "params", "isArrowFunction", "isMethod", "isExpression", "useStrict", "nonSimple", "allowDuplicates", "nameHash", "re", "liberal", "pp$4", "message", "loc", "err", "pp$3", "Scope", "redeclared", "scope$1", "scope$2", "scope$3", "Node", "pp$2", "finishNodeAt", "newNode", "ecma9BinaryProperties", "ecma10BinaryProperties", "ecma11BinaryProperties", "ecma12BinaryProperties", "ecma13BinaryProperties", "unicodeBinaryProperties", "unicodeGeneralCategoryValues", "ecma9ScriptValues", "ecma10ScriptValues", "ecma11ScriptValues", "ecma12ScriptValues", "ecma13ScriptValues", "unicodeScriptValues", "data", "buildUnicodeData", "d", "pp$1", "RegExpValidationState", "pattern", "unicode", "forceU", "s", "l", "c", "ch", "state", "validFlags", "flag", "lookbehind", "noError", "min", "max", "isSyntaxCharacter", "isRegExpIdentifierStart", "isRegExpIdentifierPart", "isDecimalDigit", "isControlLetter", "switchU", "lead", "leadSurrogateEnd", "trail", "isValidUnicode", "isCharacterClassEscape", "nameOrValue", "isUnicodePropertyNameCharacter", "isUnicodePropertyValueCharacter", "ch$1", "isOctalDigit", "isHexDigit", "hexToInt", "n1", "n2", "length", "Token", "pp", "ignoreEscapeSequenceInKeyword", "this$1$1", "curContext", "startSkip", "loop", "next2", "size", "tokentype", "next2$1", "str", "escaped", "inClass", "flagsStart", "radix", "maybeLegacyOctalNumericLiteral", "allowSeparators", "isLegacyOctalNumericLiteral", "total", "lastCode", "e", "stringToNumber", "stringToBigInt", "startsWithDot", "octal", "val$1", "codePos", "quote", "chunkStart", "INVALID_TEMPLATE_ESCAPE_ERROR", "position", "inTemplate", "octalStr", "word", "escStart", "esc", "version", "Parser_default", "Parser", "input", "options", "ast", "args", "ctx", "types$1", "type", "value", "start", "end", "startLoc", "endLoc", "isQuantumFunction", "node", "statement", "allowExpressionBody", "isAsync", "forInit", "_node", "isPattern", "refDestructuringErrors", "constructorAllowsSuper", "stringify", "OPERATOR_PRECEDENCE", "NEEDS_PARENTHESES", "EXPRESSIONS_PRECEDENCE", "formatSequence", "state", "nodes", "generator", "length", "i", "param", "expressionNeedsParenthesis", "node", "parentNode", "isRightHand", "nodePrecedence", "parentNodePrecedence", "formatExpression", "reindent", "text", "indent", "lineEnd", "lines", "end", "formatComments", "comments", "comment", "hasCallExpression", "currentNode", "type", "formatVariableDeclaration", "declarations", "ForInStatement", "FunctionDeclaration", "RestElement", "BinaryExpression", "ArrayExpression", "BlockStatement", "GENERATOR", "writeComments", "statements", "statement", "statementIndent", "precedence", "caseIndent", "occurences", "occurencesCount", "occurence", "consequent", "consequentCount", "handler", "init", "left", "superClass", "specifiers", "specifier", "name", "kind", "params", "quasis", "expressions", "expression", "quasi", "elements", "element", "propertyIndent", "comma", "properties", "property", "operator", "argument", "needsParentheses", "isIn", "test", "regex", "EMPTY_OBJECT", "State", "options", "setup", "EMPTY_OBJECT", "GENERATOR", "EXPRESSIONS_PRECEDENCE", "code", "node", "type", "mapping", "length", "column", "line", "i", "lineEnd", "generate", "state", "$qIdentifier", "name", "newVar", "randChar", "Node_default", "argument", "block", "handler", "finalizer", "guardedHandlers", "param", "body", "expression", "label", "object", "test", "consequent", "alternate", "discriminant", "cases", "lexical", "init", "update", "left", "right", "delegate", "kind", "declarations", "id", "params", "async", "generator", "expressions", "operator", "prefix", "type", "elements", "properties", "callee", "args", "optional", "tag", "quasi", "property", "computed", "name", "key", "value", "shorthand", "method", "superClass", "$static", "quasis", "comments", "valueObject", "target", "sources", "offset", "sourceNode", "expr", "$qDownstream", "nodes", "Node_default", "Scope", "context", "type", "node", "withLineColumn", "locations", "offset", "elements", "Node_default", "name", "globally", "random", "identifer", "$qIdentifier", "identifier", "willUpdate", "def", "_var", "Compiler", "params", "scopeData", "callback", "scope", "Scope", "returnValue", "state", "ast", "generate", "body", "newAst", "Node_default", "locationsAssignment", "args", "promiseAll", "identifier", "compiledSource", "compiledSourceBase64", "base64", "nodes", "total", "s", "imports", "functions", "other", "node", "eat", "build", "i", "$node_s", "$state", "restNodes", "downstream", "$qDownstream", "getState", "historyData", "$node", "key", "value", "path", "obj", "prop", "callee", "as", "name", "$namePart", "entries", "kind", "$serial", "id", "init", "$rest", "closure", "autorunExpr", "left", "right", "type", "rest", "spec", "$spec", "$kind", "label", "$body", "entry", "keywordScopes", "e", "cmd", "arg", "isTargetSwitch", "isTargetLabel", "isBareExit", "transform", "$params", "param", "$rand", "$param", "declaration", "$$body", "$qIdentifier", "executionMode", "functionKind", "metarisation", "reference", "resultNode", "superClass", "methods", "classKind", "methodsSpec", "m", "$value", "specifiers", "specs", "alias", "imported", "local", "$imported", "mode", "signals", "ref", "hintArg", "object", "property", "computed", "optional", "$object", "isExport", "decs", "dec", "stmts", "$init", "$stmts", "expandableAsStatements", "assignmentExpr", "potentialNewRight", "declarations", "currentValueLocalIdentifier", "a", "b", "withIntermediates", "_this", "intermediateLocalIdentifier", "expand", "patternEntries", "isObjectType", "localIdentifiers", "v", "defaultValue", "localIdentifier", "numDeclarationsAtLevel", "expr", "test", "consequent", "alternate", "construct", "discriminant", "cases", "caseNode", "block", "handler", "finalizer", "start", "end", "$handler", "$finalizer", "createNodeCallback", "update", "production", "originalLeft", "declarator", "keyword", "refs", "argument", "hoisting", "expression", "expresions", "exprs", "element", "tag", "quasi", "expressions", "parseCache", "parse", "source", "params", "cacheKey", "ast", "Parser_default", "e", "message", "pos", "line", "column", "cause", "compile", "Compiler", "resolveParams", "extensions", "extension", "params", "runtimeParams", "compilerParams", "parserParams", "_runtimeParams", "_globalsNoObserve", "_globalsOnlyPathsExcept", "_compilerParams", "_parserParams", "registry", "_EventTarget", "env", "evenName", "args", "total", "x", "Signal", "_EventTarget", "context", "type", "state", "k", "name", "signal", "_isTypeObject", "src_default", "autorun", "flag", "mutations", "groupings", "autoruns", "mutation", "runtimesMap", "a", "b", "runtime", "newState", "Scope", "Signal", "context", "type", "state", "Autorun", "_EventTarget", "context", "type", "spec", "serial", "scope", "closure", "node", "a", "b", "prev", "key", "i", "flowControlBefore", "callback", "_await", "stateBefore", "_call", "returnValue", "exception", "serials", "errorCode", "message", "$message", "cause", "x", "ErrorClass", "error", "fileName", "flowControlAfter", "cmd", "as", "value", "name", "valueType", "$closure", "args", "e", "complete", "autorun", "src_default", "symbolState", "assignedValue", "lexicalScope", "valueBefore", "rest", "depth", "hint", "kind", "baseSignal", "val", "quantumMode", "isConst", "isRuntime", "isAborted", "isStatic", "nowRunning", "proxy", "signal", "propertyAlreadyBound", "traps", "target", "receiver", "AutorunClass", "staticDefs", "Scope", "executionMode", "functionKind", "$qFunction", "_this", "$qSource", "originalSource", "classKind", "$class", "methodsSpec", "isQuantumFunction", "label", "arg", "unset", "sizeBefore", "sizeAfter", "downstream", "nextRound", "returnees", "total", "AutoIterator", "Autorun", "context", "type", "spec", "serial", "scope", "closure", "callback", "_await", "returnValue", "key", "val", "$test", "$round", "production", "index", "state", "Scope", "meta", "name", "round", "handleMutations", "mutations", "currentCursor", "deletions", "extension", "mutation", "existingRound", "src_default", "deletion", "parent", "AutoAsyncIterator", "AutoIterator", "key", "val", "cursor", "$test", "$round", "State", "runtime", "events", "src_default", "name", "Runtime", "Autorun", "context", "type", "params", "scope", "closure", "$serial", "spec", "$params", "Scope", "src_default", "serial", "full", "locStart", "line", "column", "locEnd", "expr", "autoruns", "isActive", "autorun", "nextTick", "prevReturn", "current", "following", "returnValue", "callback", "actualReturnValue", "State", "executionMode", "thisContext", "lexicalContext", "args", "source", "$source", "onload", "modules", "registry", "promise", "moduleName", "e", "specifiers", "target", "sourceSerial", "observeList", "quantumMode", "local", "alias", "mutations", "mutation", "__publicField", "AutoAsyncIterator", "AutoIterator", "$eval", "sourceType", "parseCompileCallback", "source", "params", "env", "functionParams", "exportNamespace", "fileName", "parserParams", "compilerParams", "runtimeParams", "resolveParams", "inBrowser", "asyncEval", "body", "compilation", "_await", "isFunction", "$qIdentifier", "dataUrl", "m", "main", "createRuntime", "thisContext", "$env", "$main", "contextType", "scope", "Scope", "Runtime", "AbstractQuantumScript", "args", "$static", "params", "source", "$eval", "_await", "createRuntime", "thisContext", "env", "$qSource", "compilation", "QuantumFunction", "args", "source", "params", "_$functionArgs", "$eval", "parseCompileCallback", "AsyncQuantumFunction", "QuantumAsyncFunction", "QuantumScript", "AbstractQuantumScript", "__publicField", "AsyncQuantumScript", "QuantumAsyncScript", "QuantumModule", "ast", "parse", "compile", "src_exports"]
}
